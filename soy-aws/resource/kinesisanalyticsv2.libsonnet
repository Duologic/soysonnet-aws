// DO NOT EDIT: this file is generated by soysonnet
{
  '#': {
    help: '',
    name: 'kinesisanalyticsv2',
  },
  aws_kinesisanalyticsv2_application:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'name', type: 'string' }, { default: null, enums: null, name: 'runtime_environment', type: 'string' }, { default: null, enums: null, name: 'service_execution_role', type: 'string' }], help: '' } },
      new(tf_resource_key, name, runtime_environment, service_execution_role):
        self.withTfResourceKey(tf_resource_key)
        + self.withName(name)
        + self.withRuntimeEnvironment(runtime_environment)
        + self.withServiceExecutionRole(service_execution_role),
      withTfResourceKey(tf_resource_key):
        {
          local this = self,
          _manifest():: {
            resource: {
              aws_kinesisanalyticsv2_application: {
                [tf_resource_key]: this,
              },
            },
          },
        },
      '#withApplicationConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withApplicationConfiguration(value): {
        application_configuration: value,
      },
      '#withApplicationConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withApplicationConfigurationMixin(value): {
        application_configuration+: value,
      },
      application_configuration+:
        {
          '#withApplicationCodeConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withApplicationCodeConfiguration(value): {
            application_configuration+: {
              application_code_configuration: value,
            },
          },
          '#withApplicationCodeConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withApplicationCodeConfigurationMixin(value): {
            application_configuration+: {
              application_code_configuration+: value,
            },
          },
          application_code_configuration+:
            {
              '#withCodeContent': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withCodeContent(value): {
                application_configuration+: {
                  application_code_configuration+: {
                    code_content: value,
                  },
                },
              },
              '#withCodeContentMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withCodeContentMixin(value): {
                application_configuration+: {
                  application_code_configuration+: {
                    code_content+: value,
                  },
                },
              },
              code_content+:
                {
                  '#withS3ContentLocation': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withS3ContentLocation(value): {
                    application_configuration+: {
                      application_code_configuration+: {
                        code_content+: {
                          s3_content_location: value,
                        },
                      },
                    },
                  },
                  '#withS3ContentLocationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withS3ContentLocationMixin(value): {
                    application_configuration+: {
                      application_code_configuration+: {
                        code_content+: {
                          s3_content_location+: value,
                        },
                      },
                    },
                  },
                  s3_content_location+:
                    {
                      '#withBucketArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBucketArn(value): {
                        application_configuration+: {
                          application_code_configuration+: {
                            code_content+: {
                              s3_content_location+: {
                                bucket_arn: value,
                              },
                            },
                          },
                        },
                      },
                      '#withFileKey': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFileKey(value): {
                        application_configuration+: {
                          application_code_configuration+: {
                            code_content+: {
                              s3_content_location+: {
                                file_key: value,
                              },
                            },
                          },
                        },
                      },
                      '#withObjectVersion': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withObjectVersion(value): {
                        application_configuration+: {
                          application_code_configuration+: {
                            code_content+: {
                              s3_content_location+: {
                                object_version: value,
                              },
                            },
                          },
                        },
                      },
                    },
                  '#withTextContent': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withTextContent(value): {
                    application_configuration+: {
                      application_code_configuration+: {
                        code_content+: {
                          text_content: value,
                        },
                      },
                    },
                  },
                },
              '#withCodeContentType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withCodeContentType(value): {
                application_configuration+: {
                  application_code_configuration+: {
                    code_content_type: value,
                  },
                },
              },
            },
          '#withApplicationSnapshotConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withApplicationSnapshotConfiguration(value): {
            application_configuration+: {
              application_snapshot_configuration: value,
            },
          },
          '#withApplicationSnapshotConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withApplicationSnapshotConfigurationMixin(value): {
            application_configuration+: {
              application_snapshot_configuration+: value,
            },
          },
          application_snapshot_configuration+:
            {
              '#withSnapshotsEnabled': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withSnapshotsEnabled(value=true): {
                application_configuration+: {
                  application_snapshot_configuration+: {
                    snapshots_enabled: value,
                  },
                },
              },
            },
          '#withEnvironmentProperties': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withEnvironmentProperties(value): {
            application_configuration+: {
              environment_properties: value,
            },
          },
          '#withEnvironmentPropertiesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withEnvironmentPropertiesMixin(value): {
            application_configuration+: {
              environment_properties+: value,
            },
          },
          environment_properties+:
            {
              '#withPropertyGroup': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withPropertyGroup(value): {
                application_configuration+: {
                  environment_properties+: {
                    property_group:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                },
              },
              '#withPropertyGroupMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withPropertyGroupMixin(value): {
                application_configuration+: {
                  environment_properties+: {
                    property_group+:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                },
              },
              property_group+:
                {
                  '#': { help: '', name: 'property_group' },
                  '#withPropertyGroupId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withPropertyGroupId(value): {
                    property_group_id: value,
                  },
                  '#withPropertyMap': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withPropertyMap(value): {
                    property_map: value,
                  },
                  '#withPropertyMapMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withPropertyMapMixin(value): {
                    property_map+: value,
                  },
                },
            },
          '#withFlinkApplicationConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withFlinkApplicationConfiguration(value): {
            application_configuration+: {
              flink_application_configuration: value,
            },
          },
          '#withFlinkApplicationConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withFlinkApplicationConfigurationMixin(value): {
            application_configuration+: {
              flink_application_configuration+: value,
            },
          },
          flink_application_configuration+:
            {
              '#withCheckpointConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withCheckpointConfiguration(value): {
                application_configuration+: {
                  flink_application_configuration+: {
                    checkpoint_configuration: value,
                  },
                },
              },
              '#withCheckpointConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withCheckpointConfigurationMixin(value): {
                application_configuration+: {
                  flink_application_configuration+: {
                    checkpoint_configuration+: value,
                  },
                },
              },
              checkpoint_configuration+:
                {
                  '#withCheckpointInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withCheckpointInterval(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        checkpoint_configuration+: {
                          checkpoint_interval: value,
                        },
                      },
                    },
                  },
                  '#withCheckpointingEnabled': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
                  withCheckpointingEnabled(value=true): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        checkpoint_configuration+: {
                          checkpointing_enabled: value,
                        },
                      },
                    },
                  },
                  '#withConfigurationType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withConfigurationType(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        checkpoint_configuration+: {
                          configuration_type: value,
                        },
                      },
                    },
                  },
                  '#withMinPauseBetweenCheckpoints': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withMinPauseBetweenCheckpoints(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        checkpoint_configuration+: {
                          min_pause_between_checkpoints: value,
                        },
                      },
                    },
                  },
                },
              '#withMonitoringConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withMonitoringConfiguration(value): {
                application_configuration+: {
                  flink_application_configuration+: {
                    monitoring_configuration: value,
                  },
                },
              },
              '#withMonitoringConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withMonitoringConfigurationMixin(value): {
                application_configuration+: {
                  flink_application_configuration+: {
                    monitoring_configuration+: value,
                  },
                },
              },
              monitoring_configuration+:
                {
                  '#withConfigurationType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withConfigurationType(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        monitoring_configuration+: {
                          configuration_type: value,
                        },
                      },
                    },
                  },
                  '#withLogLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withLogLevel(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        monitoring_configuration+: {
                          log_level: value,
                        },
                      },
                    },
                  },
                  '#withMetricsLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withMetricsLevel(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        monitoring_configuration+: {
                          metrics_level: value,
                        },
                      },
                    },
                  },
                },
              '#withParallelismConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withParallelismConfiguration(value): {
                application_configuration+: {
                  flink_application_configuration+: {
                    parallelism_configuration: value,
                  },
                },
              },
              '#withParallelismConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withParallelismConfigurationMixin(value): {
                application_configuration+: {
                  flink_application_configuration+: {
                    parallelism_configuration+: value,
                  },
                },
              },
              parallelism_configuration+:
                {
                  '#withAutoScalingEnabled': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
                  withAutoScalingEnabled(value=true): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        parallelism_configuration+: {
                          auto_scaling_enabled: value,
                        },
                      },
                    },
                  },
                  '#withConfigurationType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withConfigurationType(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        parallelism_configuration+: {
                          configuration_type: value,
                        },
                      },
                    },
                  },
                  '#withParallelism': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withParallelism(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        parallelism_configuration+: {
                          parallelism: value,
                        },
                      },
                    },
                  },
                  '#withParallelismPerKpu': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withParallelismPerKpu(value): {
                    application_configuration+: {
                      flink_application_configuration+: {
                        parallelism_configuration+: {
                          parallelism_per_kpu: value,
                        },
                      },
                    },
                  },
                },
            },
          '#withRunConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withRunConfiguration(value): {
            application_configuration+: {
              run_configuration: value,
            },
          },
          '#withRunConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withRunConfigurationMixin(value): {
            application_configuration+: {
              run_configuration+: value,
            },
          },
          run_configuration+:
            {
              '#withApplicationRestoreConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withApplicationRestoreConfiguration(value): {
                application_configuration+: {
                  run_configuration+: {
                    application_restore_configuration: value,
                  },
                },
              },
              '#withApplicationRestoreConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withApplicationRestoreConfigurationMixin(value): {
                application_configuration+: {
                  run_configuration+: {
                    application_restore_configuration+: value,
                  },
                },
              },
              application_restore_configuration+:
                {
                  '#withApplicationRestoreType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withApplicationRestoreType(value): {
                    application_configuration+: {
                      run_configuration+: {
                        application_restore_configuration+: {
                          application_restore_type: value,
                        },
                      },
                    },
                  },
                  '#withSnapshotName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withSnapshotName(value): {
                    application_configuration+: {
                      run_configuration+: {
                        application_restore_configuration+: {
                          snapshot_name: value,
                        },
                      },
                    },
                  },
                },
              '#withFlinkRunConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withFlinkRunConfiguration(value): {
                application_configuration+: {
                  run_configuration+: {
                    flink_run_configuration: value,
                  },
                },
              },
              '#withFlinkRunConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withFlinkRunConfigurationMixin(value): {
                application_configuration+: {
                  run_configuration+: {
                    flink_run_configuration+: value,
                  },
                },
              },
              flink_run_configuration+:
                {
                  '#withAllowNonRestoredState': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
                  withAllowNonRestoredState(value=true): {
                    application_configuration+: {
                      run_configuration+: {
                        flink_run_configuration+: {
                          allow_non_restored_state: value,
                        },
                      },
                    },
                  },
                },
            },
          '#withSqlApplicationConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withSqlApplicationConfiguration(value): {
            application_configuration+: {
              sql_application_configuration: value,
            },
          },
          '#withSqlApplicationConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withSqlApplicationConfigurationMixin(value): {
            application_configuration+: {
              sql_application_configuration+: value,
            },
          },
          sql_application_configuration+:
            {
              '#withInput': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withInput(value): {
                application_configuration+: {
                  sql_application_configuration+: {
                    input: value,
                  },
                },
              },
              '#withInputMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withInputMixin(value): {
                application_configuration+: {
                  sql_application_configuration+: {
                    input+: value,
                  },
                },
              },
              input+:
                {
                  '#withInAppStreamNames': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withInAppStreamNames(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          in_app_stream_names:
                            (if std.isArray(value)
                             then value
                             else [value]),
                        },
                      },
                    },
                  },
                  '#withInAppStreamNamesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withInAppStreamNamesMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          in_app_stream_names+:
                            (if std.isArray(value)
                             then value
                             else [value]),
                        },
                      },
                    },
                  },
                  '#withInputId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withInputId(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_id: value,
                        },
                      },
                    },
                  },
                  '#withInputParallelism': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withInputParallelism(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_parallelism: value,
                        },
                      },
                    },
                  },
                  '#withInputParallelismMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withInputParallelismMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_parallelism+: value,
                        },
                      },
                    },
                  },
                  input_parallelism+:
                    {
                      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withCount(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              input_parallelism+: {
                                count: value,
                              },
                            },
                          },
                        },
                      },
                    },
                  '#withInputProcessingConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withInputProcessingConfiguration(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_processing_configuration: value,
                        },
                      },
                    },
                  },
                  '#withInputProcessingConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withInputProcessingConfigurationMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_processing_configuration+: value,
                        },
                      },
                    },
                  },
                  input_processing_configuration+:
                    {
                      '#withInputLambdaProcessor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withInputLambdaProcessor(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              input_processing_configuration+: {
                                input_lambda_processor: value,
                              },
                            },
                          },
                        },
                      },
                      '#withInputLambdaProcessorMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withInputLambdaProcessorMixin(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              input_processing_configuration+: {
                                input_lambda_processor+: value,
                              },
                            },
                          },
                        },
                      },
                      input_lambda_processor+:
                        {
                          '#withResourceArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withResourceArn(value): {
                            application_configuration+: {
                              sql_application_configuration+: {
                                input+: {
                                  input_processing_configuration+: {
                                    input_lambda_processor+: {
                                      resource_arn: value,
                                    },
                                  },
                                },
                              },
                            },
                          },
                        },
                    },
                  '#withInputSchema': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withInputSchema(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_schema: value,
                        },
                      },
                    },
                  },
                  '#withInputSchemaMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withInputSchemaMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_schema+: value,
                        },
                      },
                    },
                  },
                  input_schema+:
                    {
                      '#withRecordColumn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withRecordColumn(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              input_schema+: {
                                record_column:
                                  (if std.isArray(value)
                                   then value
                                   else [value]),
                              },
                            },
                          },
                        },
                      },
                      '#withRecordColumnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withRecordColumnMixin(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              input_schema+: {
                                record_column+:
                                  (if std.isArray(value)
                                   then value
                                   else [value]),
                              },
                            },
                          },
                        },
                      },
                      record_column+:
                        {
                          '#': { help: '', name: 'record_column' },
                          '#withMapping': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withMapping(value): {
                            mapping: value,
                          },
                          '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withName(value): {
                            name: value,
                          },
                          '#withSqlType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withSqlType(value): {
                            sql_type: value,
                          },
                        },
                      '#withRecordEncoding': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withRecordEncoding(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              input_schema+: {
                                record_encoding: value,
                              },
                            },
                          },
                        },
                      },
                      '#withRecordFormat': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withRecordFormat(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              input_schema+: {
                                record_format: value,
                              },
                            },
                          },
                        },
                      },
                      '#withRecordFormatMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withRecordFormatMixin(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              input_schema+: {
                                record_format+: value,
                              },
                            },
                          },
                        },
                      },
                      record_format+:
                        {
                          '#withMappingParameters': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withMappingParameters(value): {
                            application_configuration+: {
                              sql_application_configuration+: {
                                input+: {
                                  input_schema+: {
                                    record_format+: {
                                      mapping_parameters: value,
                                    },
                                  },
                                },
                              },
                            },
                          },
                          '#withMappingParametersMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withMappingParametersMixin(value): {
                            application_configuration+: {
                              sql_application_configuration+: {
                                input+: {
                                  input_schema+: {
                                    record_format+: {
                                      mapping_parameters+: value,
                                    },
                                  },
                                },
                              },
                            },
                          },
                          mapping_parameters+:
                            {
                              '#withCsvMappingParameters': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withCsvMappingParameters(value): {
                                application_configuration+: {
                                  sql_application_configuration+: {
                                    input+: {
                                      input_schema+: {
                                        record_format+: {
                                          mapping_parameters+: {
                                            csv_mapping_parameters: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              '#withCsvMappingParametersMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withCsvMappingParametersMixin(value): {
                                application_configuration+: {
                                  sql_application_configuration+: {
                                    input+: {
                                      input_schema+: {
                                        record_format+: {
                                          mapping_parameters+: {
                                            csv_mapping_parameters+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              csv_mapping_parameters+:
                                {
                                  '#withRecordColumnDelimiter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withRecordColumnDelimiter(value): {
                                    application_configuration+: {
                                      sql_application_configuration+: {
                                        input+: {
                                          input_schema+: {
                                            record_format+: {
                                              mapping_parameters+: {
                                                csv_mapping_parameters+: {
                                                  record_column_delimiter: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withRecordRowDelimiter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withRecordRowDelimiter(value): {
                                    application_configuration+: {
                                      sql_application_configuration+: {
                                        input+: {
                                          input_schema+: {
                                            record_format+: {
                                              mapping_parameters+: {
                                                csv_mapping_parameters+: {
                                                  record_row_delimiter: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              '#withJsonMappingParameters': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withJsonMappingParameters(value): {
                                application_configuration+: {
                                  sql_application_configuration+: {
                                    input+: {
                                      input_schema+: {
                                        record_format+: {
                                          mapping_parameters+: {
                                            json_mapping_parameters: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              '#withJsonMappingParametersMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withJsonMappingParametersMixin(value): {
                                application_configuration+: {
                                  sql_application_configuration+: {
                                    input+: {
                                      input_schema+: {
                                        record_format+: {
                                          mapping_parameters+: {
                                            json_mapping_parameters+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              json_mapping_parameters+:
                                {
                                  '#withRecordRowPath': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withRecordRowPath(value): {
                                    application_configuration+: {
                                      sql_application_configuration+: {
                                        input+: {
                                          input_schema+: {
                                            record_format+: {
                                              mapping_parameters+: {
                                                json_mapping_parameters+: {
                                                  record_row_path: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                            },
                          '#withRecordFormatType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withRecordFormatType(value): {
                            application_configuration+: {
                              sql_application_configuration+: {
                                input+: {
                                  input_schema+: {
                                    record_format+: {
                                      record_format_type: value,
                                    },
                                  },
                                },
                              },
                            },
                          },
                        },
                    },
                  '#withInputStartingPositionConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withInputStartingPositionConfiguration(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_starting_position_configuration:
                            (if std.isArray(value)
                             then value
                             else [value]),
                        },
                      },
                    },
                  },
                  '#withInputStartingPositionConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withInputStartingPositionConfigurationMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          input_starting_position_configuration+:
                            (if std.isArray(value)
                             then value
                             else [value]),
                        },
                      },
                    },
                  },
                  input_starting_position_configuration+:
                    {
                      '#': { help: '', name: 'input_starting_position_configuration' },
                      '#withInputStartingPosition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withInputStartingPosition(value): {
                        input_starting_position: value,
                      },
                    },
                  '#withKinesisFirehoseInput': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withKinesisFirehoseInput(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          kinesis_firehose_input: value,
                        },
                      },
                    },
                  },
                  '#withKinesisFirehoseInputMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withKinesisFirehoseInputMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          kinesis_firehose_input+: value,
                        },
                      },
                    },
                  },
                  kinesis_firehose_input+:
                    {
                      '#withResourceArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withResourceArn(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              kinesis_firehose_input+: {
                                resource_arn: value,
                              },
                            },
                          },
                        },
                      },
                    },
                  '#withKinesisStreamsInput': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withKinesisStreamsInput(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          kinesis_streams_input: value,
                        },
                      },
                    },
                  },
                  '#withKinesisStreamsInputMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withKinesisStreamsInputMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          kinesis_streams_input+: value,
                        },
                      },
                    },
                  },
                  kinesis_streams_input+:
                    {
                      '#withResourceArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withResourceArn(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            input+: {
                              kinesis_streams_input+: {
                                resource_arn: value,
                              },
                            },
                          },
                        },
                      },
                    },
                  '#withNamePrefix': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withNamePrefix(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        input+: {
                          name_prefix: value,
                        },
                      },
                    },
                  },
                },
              '#withOutput': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withOutput(value): {
                application_configuration+: {
                  sql_application_configuration+: {
                    output:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                },
              },
              '#withOutputMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withOutputMixin(value): {
                application_configuration+: {
                  sql_application_configuration+: {
                    output+:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                },
              },
              output+:
                {
                  '#': { help: '', name: 'output' },
                  '#withDestinationSchema': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withDestinationSchema(value): {
                    destination_schema: value,
                  },
                  '#withDestinationSchemaMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withDestinationSchemaMixin(value): {
                    destination_schema+: value,
                  },
                  destination_schema+:
                    {
                      '#withRecordFormatType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withRecordFormatType(value): {
                        destination_schema+: {
                          record_format_type: value,
                        },
                      },
                    },
                  '#withKinesisFirehoseOutput': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withKinesisFirehoseOutput(value): {
                    kinesis_firehose_output: value,
                  },
                  '#withKinesisFirehoseOutputMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withKinesisFirehoseOutputMixin(value): {
                    kinesis_firehose_output+: value,
                  },
                  kinesis_firehose_output+:
                    {
                      '#withResourceArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withResourceArn(value): {
                        kinesis_firehose_output+: {
                          resource_arn: value,
                        },
                      },
                    },
                  '#withKinesisStreamsOutput': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withKinesisStreamsOutput(value): {
                    kinesis_streams_output: value,
                  },
                  '#withKinesisStreamsOutputMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withKinesisStreamsOutputMixin(value): {
                    kinesis_streams_output+: value,
                  },
                  kinesis_streams_output+:
                    {
                      '#withResourceArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withResourceArn(value): {
                        kinesis_streams_output+: {
                          resource_arn: value,
                        },
                      },
                    },
                  '#withLambdaOutput': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withLambdaOutput(value): {
                    lambda_output: value,
                  },
                  '#withLambdaOutputMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withLambdaOutputMixin(value): {
                    lambda_output+: value,
                  },
                  lambda_output+:
                    {
                      '#withResourceArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withResourceArn(value): {
                        lambda_output+: {
                          resource_arn: value,
                        },
                      },
                    },
                  '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withName(value): {
                    name: value,
                  },
                  '#withOutputId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withOutputId(value): {
                    output_id: value,
                  },
                },
              '#withReferenceDataSource': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withReferenceDataSource(value): {
                application_configuration+: {
                  sql_application_configuration+: {
                    reference_data_source: value,
                  },
                },
              },
              '#withReferenceDataSourceMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withReferenceDataSourceMixin(value): {
                application_configuration+: {
                  sql_application_configuration+: {
                    reference_data_source+: value,
                  },
                },
              },
              reference_data_source+:
                {
                  '#withReferenceId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withReferenceId(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        reference_data_source+: {
                          reference_id: value,
                        },
                      },
                    },
                  },
                  '#withReferenceSchema': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withReferenceSchema(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        reference_data_source+: {
                          reference_schema: value,
                        },
                      },
                    },
                  },
                  '#withReferenceSchemaMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withReferenceSchemaMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        reference_data_source+: {
                          reference_schema+: value,
                        },
                      },
                    },
                  },
                  reference_schema+:
                    {
                      '#withRecordColumn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withRecordColumn(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            reference_data_source+: {
                              reference_schema+: {
                                record_column:
                                  (if std.isArray(value)
                                   then value
                                   else [value]),
                              },
                            },
                          },
                        },
                      },
                      '#withRecordColumnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withRecordColumnMixin(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            reference_data_source+: {
                              reference_schema+: {
                                record_column+:
                                  (if std.isArray(value)
                                   then value
                                   else [value]),
                              },
                            },
                          },
                        },
                      },
                      record_column+:
                        {
                          '#': { help: '', name: 'record_column' },
                          '#withMapping': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withMapping(value): {
                            mapping: value,
                          },
                          '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withName(value): {
                            name: value,
                          },
                          '#withSqlType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withSqlType(value): {
                            sql_type: value,
                          },
                        },
                      '#withRecordEncoding': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withRecordEncoding(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            reference_data_source+: {
                              reference_schema+: {
                                record_encoding: value,
                              },
                            },
                          },
                        },
                      },
                      '#withRecordFormat': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withRecordFormat(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            reference_data_source+: {
                              reference_schema+: {
                                record_format: value,
                              },
                            },
                          },
                        },
                      },
                      '#withRecordFormatMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withRecordFormatMixin(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            reference_data_source+: {
                              reference_schema+: {
                                record_format+: value,
                              },
                            },
                          },
                        },
                      },
                      record_format+:
                        {
                          '#withMappingParameters': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withMappingParameters(value): {
                            application_configuration+: {
                              sql_application_configuration+: {
                                reference_data_source+: {
                                  reference_schema+: {
                                    record_format+: {
                                      mapping_parameters: value,
                                    },
                                  },
                                },
                              },
                            },
                          },
                          '#withMappingParametersMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withMappingParametersMixin(value): {
                            application_configuration+: {
                              sql_application_configuration+: {
                                reference_data_source+: {
                                  reference_schema+: {
                                    record_format+: {
                                      mapping_parameters+: value,
                                    },
                                  },
                                },
                              },
                            },
                          },
                          mapping_parameters+:
                            {
                              '#withCsvMappingParameters': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withCsvMappingParameters(value): {
                                application_configuration+: {
                                  sql_application_configuration+: {
                                    reference_data_source+: {
                                      reference_schema+: {
                                        record_format+: {
                                          mapping_parameters+: {
                                            csv_mapping_parameters: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              '#withCsvMappingParametersMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withCsvMappingParametersMixin(value): {
                                application_configuration+: {
                                  sql_application_configuration+: {
                                    reference_data_source+: {
                                      reference_schema+: {
                                        record_format+: {
                                          mapping_parameters+: {
                                            csv_mapping_parameters+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              csv_mapping_parameters+:
                                {
                                  '#withRecordColumnDelimiter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withRecordColumnDelimiter(value): {
                                    application_configuration+: {
                                      sql_application_configuration+: {
                                        reference_data_source+: {
                                          reference_schema+: {
                                            record_format+: {
                                              mapping_parameters+: {
                                                csv_mapping_parameters+: {
                                                  record_column_delimiter: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withRecordRowDelimiter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withRecordRowDelimiter(value): {
                                    application_configuration+: {
                                      sql_application_configuration+: {
                                        reference_data_source+: {
                                          reference_schema+: {
                                            record_format+: {
                                              mapping_parameters+: {
                                                csv_mapping_parameters+: {
                                                  record_row_delimiter: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              '#withJsonMappingParameters': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withJsonMappingParameters(value): {
                                application_configuration+: {
                                  sql_application_configuration+: {
                                    reference_data_source+: {
                                      reference_schema+: {
                                        record_format+: {
                                          mapping_parameters+: {
                                            json_mapping_parameters: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              '#withJsonMappingParametersMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withJsonMappingParametersMixin(value): {
                                application_configuration+: {
                                  sql_application_configuration+: {
                                    reference_data_source+: {
                                      reference_schema+: {
                                        record_format+: {
                                          mapping_parameters+: {
                                            json_mapping_parameters+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              json_mapping_parameters+:
                                {
                                  '#withRecordRowPath': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withRecordRowPath(value): {
                                    application_configuration+: {
                                      sql_application_configuration+: {
                                        reference_data_source+: {
                                          reference_schema+: {
                                            record_format+: {
                                              mapping_parameters+: {
                                                json_mapping_parameters+: {
                                                  record_row_path: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                            },
                          '#withRecordFormatType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withRecordFormatType(value): {
                            application_configuration+: {
                              sql_application_configuration+: {
                                reference_data_source+: {
                                  reference_schema+: {
                                    record_format+: {
                                      record_format_type: value,
                                    },
                                  },
                                },
                              },
                            },
                          },
                        },
                    },
                  '#withS3ReferenceDataSource': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withS3ReferenceDataSource(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        reference_data_source+: {
                          s3_reference_data_source: value,
                        },
                      },
                    },
                  },
                  '#withS3ReferenceDataSourceMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withS3ReferenceDataSourceMixin(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        reference_data_source+: {
                          s3_reference_data_source+: value,
                        },
                      },
                    },
                  },
                  s3_reference_data_source+:
                    {
                      '#withBucketArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBucketArn(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            reference_data_source+: {
                              s3_reference_data_source+: {
                                bucket_arn: value,
                              },
                            },
                          },
                        },
                      },
                      '#withFileKey': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFileKey(value): {
                        application_configuration+: {
                          sql_application_configuration+: {
                            reference_data_source+: {
                              s3_reference_data_source+: {
                                file_key: value,
                              },
                            },
                          },
                        },
                      },
                    },
                  '#withTableName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withTableName(value): {
                    application_configuration+: {
                      sql_application_configuration+: {
                        reference_data_source+: {
                          table_name: value,
                        },
                      },
                    },
                  },
                },
            },
          '#withVpcConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withVpcConfiguration(value): {
            application_configuration+: {
              vpc_configuration: value,
            },
          },
          '#withVpcConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withVpcConfigurationMixin(value): {
            application_configuration+: {
              vpc_configuration+: value,
            },
          },
          vpc_configuration+:
            {
              '#withSecurityGroupIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withSecurityGroupIds(value): {
                application_configuration+: {
                  vpc_configuration+: {
                    security_group_ids:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                },
              },
              '#withSecurityGroupIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withSecurityGroupIdsMixin(value): {
                application_configuration+: {
                  vpc_configuration+: {
                    security_group_ids+:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                },
              },
              '#withSubnetIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withSubnetIds(value): {
                application_configuration+: {
                  vpc_configuration+: {
                    subnet_ids:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                },
              },
              '#withSubnetIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withSubnetIdsMixin(value): {
                application_configuration+: {
                  vpc_configuration+: {
                    subnet_ids+:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                },
              },
              '#withVpcConfigurationId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withVpcConfigurationId(value): {
                application_configuration+: {
                  vpc_configuration+: {
                    vpc_configuration_id: value,
                  },
                },
              },
              '#withVpcId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withVpcId(value): {
                application_configuration+: {
                  vpc_configuration+: {
                    vpc_id: value,
                  },
                },
              },
            },
        },
      '#withApplicationMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withApplicationMode(value): {
        application_mode: value,
      },
      '#withArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withArn(value): {
        arn: value,
      },
      '#withCloudwatchLoggingOptions': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withCloudwatchLoggingOptions(value): {
        cloudwatch_logging_options: value,
      },
      '#withCloudwatchLoggingOptionsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withCloudwatchLoggingOptionsMixin(value): {
        cloudwatch_logging_options+: value,
      },
      cloudwatch_logging_options+:
        {
          '#withCloudwatchLoggingOptionId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCloudwatchLoggingOptionId(value): {
            cloudwatch_logging_options+: {
              cloudwatch_logging_option_id: value,
            },
          },
          '#withLogStreamArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withLogStreamArn(value): {
            cloudwatch_logging_options+: {
              log_stream_arn: value,
            },
          },
        },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        count: value,
      },
      '#withCreateTimestamp': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withCreateTimestamp(value): {
        create_timestamp: value,
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        depends_on:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        depends_on+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withDescription': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withDescription(value): {
        description: value,
      },
      '#withForceStop': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withForceStop(value=true): {
        force_stop: value,
      },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        id: value,
      },
      '#withLastUpdateTimestamp': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withLastUpdateTimestamp(value): {
        last_update_timestamp: value,
      },
      '#withLifecycle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycle(value): {
        lifecycle: value,
      },
      '#withLifecycleMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycleMixin(value): {
        lifecycle+: value,
      },
      lifecycle+:
        {
          '#withCreateBeforeDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withCreateBeforeDestroy(value=true): {
            lifecycle+: {
              create_before_destroy: value,
            },
          },
          '#withIgnoreChanges': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChanges(value): {
            lifecycle+: {
              ignore_changes:
                (if std.isArray(value)
                 then value
                 else [value]),
            },
          },
          '#withIgnoreChangesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChangesMixin(value): {
            lifecycle+: {
              ignore_changes+:
                (if std.isArray(value)
                 then value
                 else [value]),
            },
          },
          '#withPostcondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostcondition(value): {
            lifecycle+: {
              postcondition: value,
            },
          },
          '#withPostconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostconditionMixin(value): {
            lifecycle+: {
              postcondition+: value,
            },
          },
          postcondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                lifecycle+: {
                  postcondition+: {
                    condition: value,
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                lifecycle+: {
                  postcondition+: {
                    error_message: value,
                  },
                },
              },
            },
          '#withPrecondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPrecondition(value): {
            lifecycle+: {
              precondition: value,
            },
          },
          '#withPreconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPreconditionMixin(value): {
            lifecycle+: {
              precondition+: value,
            },
          },
          precondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                lifecycle+: {
                  precondition+: {
                    condition: value,
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                lifecycle+: {
                  precondition+: {
                    error_message: value,
                  },
                },
              },
            },
          '#withPreventDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withPreventDestroy(value=true): {
            lifecycle+: {
              prevent_destroy: value,
            },
          },
          '#withReplaceTriggeredBy': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredBy(value): {
            lifecycle+: {
              replace_triggered_by:
                (if std.isArray(value)
                 then value
                 else [value]),
            },
          },
          '#withReplaceTriggeredByMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredByMixin(value): {
            lifecycle+: {
              replace_triggered_by+:
                (if std.isArray(value)
                 then value
                 else [value]),
            },
          },
        },
      '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withName(value): {
        name: value,
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        provider: value,
      },
      '#withProvisioner': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisioner(value): {
        provisioner:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withProvisionerMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisionerMixin(value): {
        provisioner+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withRuntimeEnvironment': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withRuntimeEnvironment(value): {
        runtime_environment: value,
      },
      '#withServiceExecutionRole': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withServiceExecutionRole(value): {
        service_execution_role: value,
      },
      '#withStartApplication': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withStartApplication(value=true): {
        start_application: value,
      },
      '#withStatus': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withStatus(value): {
        status: value,
      },
      '#withTags': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTags(value): {
        tags: value,
      },
      '#withTagsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsMixin(value): {
        tags+: value,
      },
      '#withTagsAll': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAll(value): {
        tags_all: value,
      },
      '#withTagsAllMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAllMixin(value): {
        tags_all+: value,
      },
      '#withTimeouts': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeouts(value): {
        timeouts: value,
      },
      '#withTimeoutsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeoutsMixin(value): {
        timeouts+: value,
      },
      timeouts+:
        {
          '#withCreate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCreate(value): {
            timeouts+: {
              create: value,
            },
          },
          '#withDelete': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withDelete(value): {
            timeouts+: {
              delete: value,
            },
          },
          '#withUpdate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUpdate(value): {
            timeouts+: {
              update: value,
            },
          },
        },
      '#withVersionId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withVersionId(value): {
        version_id: value,
      },
    },
  aws_kinesisanalyticsv2_application_snapshot:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'application_name', type: 'string' }, { default: null, enums: null, name: 'snapshot_name', type: 'string' }], help: '' } },
      new(tf_resource_key, application_name, snapshot_name):
        self.withTfResourceKey(tf_resource_key)
        + self.withApplicationName(application_name)
        + self.withSnapshotName(snapshot_name),
      withTfResourceKey(tf_resource_key):
        {
          local this = self,
          _manifest():: {
            resource: {
              aws_kinesisanalyticsv2_application_snapshot: {
                [tf_resource_key]: this,
              },
            },
          },
        },
      '#withApplicationName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withApplicationName(value): {
        application_name: value,
      },
      '#withApplicationVersionId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withApplicationVersionId(value): {
        application_version_id: value,
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        count: value,
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        depends_on:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        depends_on+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        id: value,
      },
      '#withLifecycle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycle(value): {
        lifecycle: value,
      },
      '#withLifecycleMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycleMixin(value): {
        lifecycle+: value,
      },
      lifecycle+:
        {
          '#withCreateBeforeDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withCreateBeforeDestroy(value=true): {
            lifecycle+: {
              create_before_destroy: value,
            },
          },
          '#withIgnoreChanges': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChanges(value): {
            lifecycle+: {
              ignore_changes:
                (if std.isArray(value)
                 then value
                 else [value]),
            },
          },
          '#withIgnoreChangesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChangesMixin(value): {
            lifecycle+: {
              ignore_changes+:
                (if std.isArray(value)
                 then value
                 else [value]),
            },
          },
          '#withPostcondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostcondition(value): {
            lifecycle+: {
              postcondition: value,
            },
          },
          '#withPostconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostconditionMixin(value): {
            lifecycle+: {
              postcondition+: value,
            },
          },
          postcondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                lifecycle+: {
                  postcondition+: {
                    condition: value,
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                lifecycle+: {
                  postcondition+: {
                    error_message: value,
                  },
                },
              },
            },
          '#withPrecondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPrecondition(value): {
            lifecycle+: {
              precondition: value,
            },
          },
          '#withPreconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPreconditionMixin(value): {
            lifecycle+: {
              precondition+: value,
            },
          },
          precondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                lifecycle+: {
                  precondition+: {
                    condition: value,
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                lifecycle+: {
                  precondition+: {
                    error_message: value,
                  },
                },
              },
            },
          '#withPreventDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withPreventDestroy(value=true): {
            lifecycle+: {
              prevent_destroy: value,
            },
          },
          '#withReplaceTriggeredBy': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredBy(value): {
            lifecycle+: {
              replace_triggered_by:
                (if std.isArray(value)
                 then value
                 else [value]),
            },
          },
          '#withReplaceTriggeredByMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredByMixin(value): {
            lifecycle+: {
              replace_triggered_by+:
                (if std.isArray(value)
                 then value
                 else [value]),
            },
          },
        },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        provider: value,
      },
      '#withProvisioner': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisioner(value): {
        provisioner:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withProvisionerMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisionerMixin(value): {
        provisioner+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withSnapshotCreationTimestamp': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withSnapshotCreationTimestamp(value): {
        snapshot_creation_timestamp: value,
      },
      '#withSnapshotName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withSnapshotName(value): {
        snapshot_name: value,
      },
      '#withTimeouts': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeouts(value): {
        timeouts: value,
      },
      '#withTimeoutsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeoutsMixin(value): {
        timeouts+: value,
      },
      timeouts+:
        {
          '#withCreate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCreate(value): {
            timeouts+: {
              create: value,
            },
          },
          '#withDelete': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withDelete(value): {
            timeouts+: {
              delete: value,
            },
          },
        },
    },
}
