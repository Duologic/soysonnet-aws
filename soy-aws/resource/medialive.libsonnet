// DO NOT EDIT: this file is generated by soysonnet
{
  '#': {
    help: '',
    name: 'medialive',
  },
  aws_medialive_channel:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'channel_class', type: 'string' }, { default: null, enums: null, name: 'destinations', type: 'array' }, { default: null, enums: null, name: 'encoder_settings', type: 'object' }, { default: null, enums: null, name: 'input_attachments', type: 'array' }, { default: null, enums: null, name: 'input_specification', type: 'object' }, { default: null, enums: null, name: 'name', type: 'string' }], help: '' } },
      new(tf_resource_key, channel_class, destinations, encoder_settings, input_attachments, input_specification, name):
        {
          local this = self,
          resource: {
            aws_medialive_channel: {
              [this.tf_resource_key]: this.spec,
            },
          },
          spec:: {},
        }
        + self.withTfResourceKey(tf_resource_key)
        + self.withChannelClass(channel_class)
        + self.withDestinations(destinations)
        + self.withEncoderSettings(encoder_settings)
        + self.withInputAttachments(input_attachments)
        + self.withInputSpecification(input_specification)
        + self.withName(name),
      withTfResourceKey(tf_resource_key): {
        tf_resource_key:: tf_resource_key,
      },
      '#withArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withArn(value): {
        spec+: {
          arn: value,
        },
      },
      '#withCdiInputSpecification': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withCdiInputSpecification(value): {
        spec+: {
          cdi_input_specification: value,
        },
      },
      '#withCdiInputSpecificationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withCdiInputSpecificationMixin(value): {
        spec+: {
          cdi_input_specification+: value,
        },
      },
      cdi_input_specification+:
        {
          '#withResolution': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withResolution(value): {
            spec+: {
              cdi_input_specification+: {
                resolution: value,
              },
            },
          },
        },
      '#withChannelClass': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withChannelClass(value): {
        spec+: {
          channel_class: value,
        },
      },
      '#withChannelId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withChannelId(value): {
        spec+: {
          channel_id: value,
        },
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        spec+: {
          count: value,
        },
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        spec+: {
          depends_on:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        spec+: {
          depends_on+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDestinations': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDestinations(value): {
        spec+: {
          destinations:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDestinationsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDestinationsMixin(value): {
        spec+: {
          destinations+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      destinations+:
        {
          '#': { help: '', name: 'destinations' },
          '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withId(value): {
            id: value,
          },
          '#withMediaPackageSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withMediaPackageSettings(value): {
            media_package_settings:
              (if std.isArray(value)
               then value
               else [value]),
          },
          '#withMediaPackageSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withMediaPackageSettingsMixin(value): {
            media_package_settings+:
              (if std.isArray(value)
               then value
               else [value]),
          },
          media_package_settings+:
            {
              '#': { help: '', name: 'media_package_settings' },
              '#withChannelId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withChannelId(value): {
                channel_id: value,
              },
            },
          '#withMultiplexSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withMultiplexSettings(value): {
            multiplex_settings: value,
          },
          '#withMultiplexSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withMultiplexSettingsMixin(value): {
            multiplex_settings+: value,
          },
          multiplex_settings+:
            {
              '#withMultiplexId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withMultiplexId(value): {
                multiplex_settings+: {
                  multiplex_id: value,
                },
              },
              '#withProgramName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withProgramName(value): {
                multiplex_settings+: {
                  program_name: value,
                },
              },
            },
          '#withSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSettings(value): {
            settings:
              (if std.isArray(value)
               then value
               else [value]),
          },
          '#withSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSettingsMixin(value): {
            settings+:
              (if std.isArray(value)
               then value
               else [value]),
          },
          settings+:
            {
              '#': { help: '', name: 'settings' },
              '#withPasswordParam': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withPasswordParam(value): {
                password_param: value,
              },
              '#withStreamName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withStreamName(value): {
                stream_name: value,
              },
              '#withUrl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withUrl(value): {
                url: value,
              },
              '#withUsername': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withUsername(value): {
                username: value,
              },
            },
        },
      '#withEncoderSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withEncoderSettings(value): {
        spec+: {
          encoder_settings: value,
        },
      },
      '#withEncoderSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withEncoderSettingsMixin(value): {
        spec+: {
          encoder_settings+: value,
        },
      },
      encoder_settings+:
        {
          '#withAudioDescriptions': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withAudioDescriptions(value): {
            spec+: {
              encoder_settings+: {
                audio_descriptions:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withAudioDescriptionsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withAudioDescriptionsMixin(value): {
            spec+: {
              encoder_settings+: {
                audio_descriptions+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          audio_descriptions+:
            {
              '#': { help: '', name: 'audio_descriptions' },
              '#withAudioNormalizationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withAudioNormalizationSettings(value): {
                audio_normalization_settings: value,
              },
              '#withAudioNormalizationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withAudioNormalizationSettingsMixin(value): {
                audio_normalization_settings+: value,
              },
              audio_normalization_settings+:
                {
                  '#withAlgorithm': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withAlgorithm(value): {
                    audio_normalization_settings+: {
                      algorithm: value,
                    },
                  },
                  '#withAlgorithmControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withAlgorithmControl(value): {
                    audio_normalization_settings+: {
                      algorithm_control: value,
                    },
                  },
                  '#withTargetLkfs': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withTargetLkfs(value): {
                    audio_normalization_settings+: {
                      target_lkfs: value,
                    },
                  },
                },
              '#withAudioSelectorName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withAudioSelectorName(value): {
                audio_selector_name: value,
              },
              '#withAudioType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withAudioType(value): {
                audio_type: value,
              },
              '#withAudioTypeControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withAudioTypeControl(value): {
                audio_type_control: value,
              },
              '#withAudioWatermarkSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withAudioWatermarkSettings(value): {
                audio_watermark_settings: value,
              },
              '#withAudioWatermarkSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withAudioWatermarkSettingsMixin(value): {
                audio_watermark_settings+: value,
              },
              audio_watermark_settings+:
                {
                  '#withNielsenWatermarksSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withNielsenWatermarksSettings(value): {
                    audio_watermark_settings+: {
                      nielsen_watermarks_settings: value,
                    },
                  },
                  '#withNielsenWatermarksSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withNielsenWatermarksSettingsMixin(value): {
                    audio_watermark_settings+: {
                      nielsen_watermarks_settings+: value,
                    },
                  },
                  nielsen_watermarks_settings+:
                    {
                      '#withNielsenCbetSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withNielsenCbetSettings(value): {
                        audio_watermark_settings+: {
                          nielsen_watermarks_settings+: {
                            nielsen_cbet_settings: value,
                          },
                        },
                      },
                      '#withNielsenCbetSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withNielsenCbetSettingsMixin(value): {
                        audio_watermark_settings+: {
                          nielsen_watermarks_settings+: {
                            nielsen_cbet_settings+: value,
                          },
                        },
                      },
                      nielsen_cbet_settings+:
                        {
                          '#withCbetCheckDigitString': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withCbetCheckDigitString(value): {
                            audio_watermark_settings+: {
                              nielsen_watermarks_settings+: {
                                nielsen_cbet_settings+: {
                                  cbet_check_digit_string: value,
                                },
                              },
                            },
                          },
                          '#withCbetStepaside': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withCbetStepaside(value): {
                            audio_watermark_settings+: {
                              nielsen_watermarks_settings+: {
                                nielsen_cbet_settings+: {
                                  cbet_stepaside: value,
                                },
                              },
                            },
                          },
                          '#withCsid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withCsid(value): {
                            audio_watermark_settings+: {
                              nielsen_watermarks_settings+: {
                                nielsen_cbet_settings+: {
                                  csid: value,
                                },
                              },
                            },
                          },
                        },
                      '#withNielsenDistributionType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withNielsenDistributionType(value): {
                        audio_watermark_settings+: {
                          nielsen_watermarks_settings+: {
                            nielsen_distribution_type: value,
                          },
                        },
                      },
                      '#withNielsenNaesIiNwSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withNielsenNaesIiNwSettings(value): {
                        audio_watermark_settings+: {
                          nielsen_watermarks_settings+: {
                            nielsen_naes_ii_nw_settings:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      '#withNielsenNaesIiNwSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withNielsenNaesIiNwSettingsMixin(value): {
                        audio_watermark_settings+: {
                          nielsen_watermarks_settings+: {
                            nielsen_naes_ii_nw_settings+:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      nielsen_naes_ii_nw_settings+:
                        {
                          '#': { help: '', name: 'nielsen_naes_ii_nw_settings' },
                          '#withCheckDigitString': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withCheckDigitString(value): {
                            check_digit_string: value,
                          },
                          '#withSid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withSid(value): {
                            sid: value,
                          },
                        },
                    },
                },
              '#withCodecSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withCodecSettings(value): {
                codec_settings: value,
              },
              '#withCodecSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withCodecSettingsMixin(value): {
                codec_settings+: value,
              },
              codec_settings+:
                {
                  '#withAacSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withAacSettings(value): {
                    codec_settings+: {
                      aac_settings: value,
                    },
                  },
                  '#withAacSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withAacSettingsMixin(value): {
                    codec_settings+: {
                      aac_settings+: value,
                    },
                  },
                  aac_settings+:
                    {
                      '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBitrate(value): {
                        codec_settings+: {
                          aac_settings+: {
                            bitrate: value,
                          },
                        },
                      },
                      '#withCodingMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCodingMode(value): {
                        codec_settings+: {
                          aac_settings+: {
                            coding_mode: value,
                          },
                        },
                      },
                      '#withInputType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withInputType(value): {
                        codec_settings+: {
                          aac_settings+: {
                            input_type: value,
                          },
                        },
                      },
                      '#withProfile': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withProfile(value): {
                        codec_settings+: {
                          aac_settings+: {
                            profile: value,
                          },
                        },
                      },
                      '#withRateControlMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withRateControlMode(value): {
                        codec_settings+: {
                          aac_settings+: {
                            rate_control_mode: value,
                          },
                        },
                      },
                      '#withRawFormat': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withRawFormat(value): {
                        codec_settings+: {
                          aac_settings+: {
                            raw_format: value,
                          },
                        },
                      },
                      '#withSampleRate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSampleRate(value): {
                        codec_settings+: {
                          aac_settings+: {
                            sample_rate: value,
                          },
                        },
                      },
                      '#withSpec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSpec(value): {
                        codec_settings+: {
                          aac_settings+: {
                            spec: value,
                          },
                        },
                      },
                      '#withVbrQuality': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withVbrQuality(value): {
                        codec_settings+: {
                          aac_settings+: {
                            vbr_quality: value,
                          },
                        },
                      },
                    },
                  '#withAc3Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withAc3Settings(value): {
                    codec_settings+: {
                      ac3_settings: value,
                    },
                  },
                  '#withAc3SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withAc3SettingsMixin(value): {
                    codec_settings+: {
                      ac3_settings+: value,
                    },
                  },
                  ac3_settings+:
                    {
                      '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBitrate(value): {
                        codec_settings+: {
                          ac3_settings+: {
                            bitrate: value,
                          },
                        },
                      },
                      '#withBitstreamMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBitstreamMode(value): {
                        codec_settings+: {
                          ac3_settings+: {
                            bitstream_mode: value,
                          },
                        },
                      },
                      '#withCodingMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCodingMode(value): {
                        codec_settings+: {
                          ac3_settings+: {
                            coding_mode: value,
                          },
                        },
                      },
                      '#withDialnorm': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withDialnorm(value): {
                        codec_settings+: {
                          ac3_settings+: {
                            dialnorm: value,
                          },
                        },
                      },
                      '#withDrcProfile': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withDrcProfile(value): {
                        codec_settings+: {
                          ac3_settings+: {
                            drc_profile: value,
                          },
                        },
                      },
                      '#withLfeFilter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withLfeFilter(value): {
                        codec_settings+: {
                          ac3_settings+: {
                            lfe_filter: value,
                          },
                        },
                      },
                      '#withMetadataControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withMetadataControl(value): {
                        codec_settings+: {
                          ac3_settings+: {
                            metadata_control: value,
                          },
                        },
                      },
                    },
                  '#withEac3AtmosSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEac3AtmosSettings(value): {
                    codec_settings+: {
                      eac3_atmos_settings: value,
                    },
                  },
                  '#withEac3AtmosSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEac3AtmosSettingsMixin(value): {
                    codec_settings+: {
                      eac3_atmos_settings+: value,
                    },
                  },
                  eac3_atmos_settings+:
                    {
                      '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBitrate(value): {
                        codec_settings+: {
                          eac3_atmos_settings+: {
                            bitrate: value,
                          },
                        },
                      },
                      '#withCodingMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCodingMode(value): {
                        codec_settings+: {
                          eac3_atmos_settings+: {
                            coding_mode: value,
                          },
                        },
                      },
                      '#withDialnorm': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withDialnorm(value): {
                        codec_settings+: {
                          eac3_atmos_settings+: {
                            dialnorm: value,
                          },
                        },
                      },
                      '#withDrcLine': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withDrcLine(value): {
                        codec_settings+: {
                          eac3_atmos_settings+: {
                            drc_line: value,
                          },
                        },
                      },
                      '#withDrcRf': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withDrcRf(value): {
                        codec_settings+: {
                          eac3_atmos_settings+: {
                            drc_rf: value,
                          },
                        },
                      },
                      '#withHeightTrim': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withHeightTrim(value): {
                        codec_settings+: {
                          eac3_atmos_settings+: {
                            height_trim: value,
                          },
                        },
                      },
                      '#withSurroundTrim': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSurroundTrim(value): {
                        codec_settings+: {
                          eac3_atmos_settings+: {
                            surround_trim: value,
                          },
                        },
                      },
                    },
                  '#withEac3Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEac3Settings(value): {
                    codec_settings+: {
                      eac3_settings: value,
                    },
                  },
                  '#withEac3SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEac3SettingsMixin(value): {
                    codec_settings+: {
                      eac3_settings+: value,
                    },
                  },
                  eac3_settings+:
                    {
                      '#withAttenuationControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAttenuationControl(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            attenuation_control: value,
                          },
                        },
                      },
                      '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBitrate(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            bitrate: value,
                          },
                        },
                      },
                      '#withBitstreamMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBitstreamMode(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            bitstream_mode: value,
                          },
                        },
                      },
                      '#withCodingMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCodingMode(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            coding_mode: value,
                          },
                        },
                      },
                      '#withDcFilter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withDcFilter(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            dc_filter: value,
                          },
                        },
                      },
                      '#withDialnorm': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withDialnorm(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            dialnorm: value,
                          },
                        },
                      },
                      '#withDrcLine': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withDrcLine(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            drc_line: value,
                          },
                        },
                      },
                      '#withDrcRf': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withDrcRf(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            drc_rf: value,
                          },
                        },
                      },
                      '#withLfeControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withLfeControl(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            lfe_control: value,
                          },
                        },
                      },
                      '#withLfeFilter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withLfeFilter(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            lfe_filter: value,
                          },
                        },
                      },
                      '#withLoRoCenterMixLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withLoRoCenterMixLevel(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            lo_ro_center_mix_level: value,
                          },
                        },
                      },
                      '#withLoRoSurroundMixLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withLoRoSurroundMixLevel(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            lo_ro_surround_mix_level: value,
                          },
                        },
                      },
                      '#withLtRtCenterMixLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withLtRtCenterMixLevel(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            lt_rt_center_mix_level: value,
                          },
                        },
                      },
                      '#withLtRtSurroundMixLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withLtRtSurroundMixLevel(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            lt_rt_surround_mix_level: value,
                          },
                        },
                      },
                      '#withMetadataControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withMetadataControl(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            metadata_control: value,
                          },
                        },
                      },
                      '#withPassthroughControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withPassthroughControl(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            passthrough_control: value,
                          },
                        },
                      },
                      '#withPhaseControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withPhaseControl(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            phase_control: value,
                          },
                        },
                      },
                      '#withStereoDownmix': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withStereoDownmix(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            stereo_downmix: value,
                          },
                        },
                      },
                      '#withSurroundExMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSurroundExMode(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            surround_ex_mode: value,
                          },
                        },
                      },
                      '#withSurroundMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSurroundMode(value): {
                        codec_settings+: {
                          eac3_settings+: {
                            surround_mode: value,
                          },
                        },
                      },
                    },
                  '#withMp2Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withMp2Settings(value): {
                    codec_settings+: {
                      mp2_settings: value,
                    },
                  },
                  '#withMp2SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withMp2SettingsMixin(value): {
                    codec_settings+: {
                      mp2_settings+: value,
                    },
                  },
                  mp2_settings+:
                    {
                      '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBitrate(value): {
                        codec_settings+: {
                          mp2_settings+: {
                            bitrate: value,
                          },
                        },
                      },
                      '#withCodingMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCodingMode(value): {
                        codec_settings+: {
                          mp2_settings+: {
                            coding_mode: value,
                          },
                        },
                      },
                      '#withSampleRate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSampleRate(value): {
                        codec_settings+: {
                          mp2_settings+: {
                            sample_rate: value,
                          },
                        },
                      },
                    },
                  '#withPassThroughSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withPassThroughSettings(value): {
                    codec_settings+: {
                      pass_through_settings: value,
                    },
                  },
                  '#withPassThroughSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withPassThroughSettingsMixin(value): {
                    codec_settings+: {
                      pass_through_settings+: value,
                    },
                  },
                  '#withWavSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withWavSettings(value): {
                    codec_settings+: {
                      wav_settings: value,
                    },
                  },
                  '#withWavSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withWavSettingsMixin(value): {
                    codec_settings+: {
                      wav_settings+: value,
                    },
                  },
                  wav_settings+:
                    {
                      '#withBitDepth': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBitDepth(value): {
                        codec_settings+: {
                          wav_settings+: {
                            bit_depth: value,
                          },
                        },
                      },
                      '#withCodingMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCodingMode(value): {
                        codec_settings+: {
                          wav_settings+: {
                            coding_mode: value,
                          },
                        },
                      },
                      '#withSampleRate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSampleRate(value): {
                        codec_settings+: {
                          wav_settings+: {
                            sample_rate: value,
                          },
                        },
                      },
                    },
                },
              '#withLanguageCode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withLanguageCode(value): {
                language_code: value,
              },
              '#withLanguageCodeControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withLanguageCodeControl(value): {
                language_code_control: value,
              },
              '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withName(value): {
                name: value,
              },
              '#withRemixSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withRemixSettings(value): {
                remix_settings: value,
              },
              '#withRemixSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withRemixSettingsMixin(value): {
                remix_settings+: value,
              },
              remix_settings+:
                {
                  '#withChannelMappings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withChannelMappings(value): {
                    remix_settings+: {
                      channel_mappings:
                        (if std.isArray(value)
                         then value
                         else [value]),
                    },
                  },
                  '#withChannelMappingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withChannelMappingsMixin(value): {
                    remix_settings+: {
                      channel_mappings+:
                        (if std.isArray(value)
                         then value
                         else [value]),
                    },
                  },
                  channel_mappings+:
                    {
                      '#': { help: '', name: 'channel_mappings' },
                      '#withInputChannelLevels': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withInputChannelLevels(value): {
                        input_channel_levels:
                          (if std.isArray(value)
                           then value
                           else [value]),
                      },
                      '#withInputChannelLevelsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withInputChannelLevelsMixin(value): {
                        input_channel_levels+:
                          (if std.isArray(value)
                           then value
                           else [value]),
                      },
                      input_channel_levels+:
                        {
                          '#': { help: '', name: 'input_channel_levels' },
                          '#withGain': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withGain(value): {
                            gain: value,
                          },
                          '#withInputChannel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withInputChannel(value): {
                            input_channel: value,
                          },
                        },
                      '#withOutputChannel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withOutputChannel(value): {
                        output_channel: value,
                      },
                    },
                  '#withChannelsIn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withChannelsIn(value): {
                    remix_settings+: {
                      channels_in: value,
                    },
                  },
                  '#withChannelsOut': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withChannelsOut(value): {
                    remix_settings+: {
                      channels_out: value,
                    },
                  },
                },
              '#withStreamName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withStreamName(value): {
                stream_name: value,
              },
            },
          '#withAvailBlanking': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withAvailBlanking(value): {
            spec+: {
              encoder_settings+: {
                avail_blanking: value,
              },
            },
          },
          '#withAvailBlankingMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withAvailBlankingMixin(value): {
            spec+: {
              encoder_settings+: {
                avail_blanking+: value,
              },
            },
          },
          avail_blanking+:
            {
              '#withAvailBlankingImage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withAvailBlankingImage(value): {
                spec+: {
                  encoder_settings+: {
                    avail_blanking+: {
                      avail_blanking_image: value,
                    },
                  },
                },
              },
              '#withAvailBlankingImageMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withAvailBlankingImageMixin(value): {
                spec+: {
                  encoder_settings+: {
                    avail_blanking+: {
                      avail_blanking_image+: value,
                    },
                  },
                },
              },
              avail_blanking_image+:
                {
                  '#withPasswordParam': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withPasswordParam(value): {
                    spec+: {
                      encoder_settings+: {
                        avail_blanking+: {
                          avail_blanking_image+: {
                            password_param: value,
                          },
                        },
                      },
                    },
                  },
                  '#withUri': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withUri(value): {
                    spec+: {
                      encoder_settings+: {
                        avail_blanking+: {
                          avail_blanking_image+: {
                            uri: value,
                          },
                        },
                      },
                    },
                  },
                  '#withUsername': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withUsername(value): {
                    spec+: {
                      encoder_settings+: {
                        avail_blanking+: {
                          avail_blanking_image+: {
                            username: value,
                          },
                        },
                      },
                    },
                  },
                },
              '#withState': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withState(value): {
                spec+: {
                  encoder_settings+: {
                    avail_blanking+: {
                      state: value,
                    },
                  },
                },
              },
            },
          '#withCaptionDescriptions': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withCaptionDescriptions(value): {
            spec+: {
              encoder_settings+: {
                caption_descriptions:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withCaptionDescriptionsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withCaptionDescriptionsMixin(value): {
            spec+: {
              encoder_settings+: {
                caption_descriptions+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          caption_descriptions+:
            {
              '#': { help: '', name: 'caption_descriptions' },
              '#withAccessibility': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withAccessibility(value): {
                accessibility: value,
              },
              '#withCaptionSelectorName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withCaptionSelectorName(value): {
                caption_selector_name: value,
              },
              '#withDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withDestinationSettings(value): {
                destination_settings: value,
              },
              '#withDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withDestinationSettingsMixin(value): {
                destination_settings+: value,
              },
              destination_settings+:
                {
                  '#withAribDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withAribDestinationSettings(value): {
                    destination_settings+: {
                      arib_destination_settings: value,
                    },
                  },
                  '#withAribDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withAribDestinationSettingsMixin(value): {
                    destination_settings+: {
                      arib_destination_settings+: value,
                    },
                  },
                  '#withBurnInDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withBurnInDestinationSettings(value): {
                    destination_settings+: {
                      burn_in_destination_settings: value,
                    },
                  },
                  '#withBurnInDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withBurnInDestinationSettingsMixin(value): {
                    destination_settings+: {
                      burn_in_destination_settings+: value,
                    },
                  },
                  burn_in_destination_settings+:
                    {
                      '#withAlignment': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAlignment(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            alignment: value,
                          },
                        },
                      },
                      '#withBackgroundColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBackgroundColor(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            background_color: value,
                          },
                        },
                      },
                      '#withBackgroundOpacity': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBackgroundOpacity(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            background_opacity: value,
                          },
                        },
                      },
                      '#withFont': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFont(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            font: value,
                          },
                        },
                      },
                      '#withFontMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFontMixin(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            font+: value,
                          },
                        },
                      },
                      font+:
                        {
                          '#withPasswordParam': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withPasswordParam(value): {
                            destination_settings+: {
                              burn_in_destination_settings+: {
                                font+: {
                                  password_param: value,
                                },
                              },
                            },
                          },
                          '#withUri': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withUri(value): {
                            destination_settings+: {
                              burn_in_destination_settings+: {
                                font+: {
                                  uri: value,
                                },
                              },
                            },
                          },
                          '#withUsername': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withUsername(value): {
                            destination_settings+: {
                              burn_in_destination_settings+: {
                                font+: {
                                  username: value,
                                },
                              },
                            },
                          },
                        },
                      '#withFontColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFontColor(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            font_color: value,
                          },
                        },
                      },
                      '#withFontOpacity': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFontOpacity(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            font_opacity: value,
                          },
                        },
                      },
                      '#withFontResolution': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFontResolution(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            font_resolution: value,
                          },
                        },
                      },
                      '#withFontSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFontSize(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            font_size: value,
                          },
                        },
                      },
                      '#withOutlineColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withOutlineColor(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            outline_color: value,
                          },
                        },
                      },
                      '#withOutlineSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withOutlineSize(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            outline_size: value,
                          },
                        },
                      },
                      '#withShadowColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withShadowColor(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            shadow_color: value,
                          },
                        },
                      },
                      '#withShadowOpacity': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withShadowOpacity(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            shadow_opacity: value,
                          },
                        },
                      },
                      '#withShadowXOffset': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withShadowXOffset(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            shadow_x_offset: value,
                          },
                        },
                      },
                      '#withShadowYOffset': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withShadowYOffset(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            shadow_y_offset: value,
                          },
                        },
                      },
                      '#withTeletextGridControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTeletextGridControl(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            teletext_grid_control: value,
                          },
                        },
                      },
                      '#withXPosition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withXPosition(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            x_position: value,
                          },
                        },
                      },
                      '#withYPosition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withYPosition(value): {
                        destination_settings+: {
                          burn_in_destination_settings+: {
                            y_position: value,
                          },
                        },
                      },
                    },
                  '#withDvbSubDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withDvbSubDestinationSettings(value): {
                    destination_settings+: {
                      dvb_sub_destination_settings: value,
                    },
                  },
                  '#withDvbSubDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withDvbSubDestinationSettingsMixin(value): {
                    destination_settings+: {
                      dvb_sub_destination_settings+: value,
                    },
                  },
                  dvb_sub_destination_settings+:
                    {
                      '#withAlignment': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAlignment(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            alignment: value,
                          },
                        },
                      },
                      '#withBackgroundColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBackgroundColor(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            background_color: value,
                          },
                        },
                      },
                      '#withBackgroundOpacity': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBackgroundOpacity(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            background_opacity: value,
                          },
                        },
                      },
                      '#withFont': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFont(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            font: value,
                          },
                        },
                      },
                      '#withFontMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFontMixin(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            font+: value,
                          },
                        },
                      },
                      font+:
                        {
                          '#withPasswordParam': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withPasswordParam(value): {
                            destination_settings+: {
                              dvb_sub_destination_settings+: {
                                font+: {
                                  password_param: value,
                                },
                              },
                            },
                          },
                          '#withUri': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withUri(value): {
                            destination_settings+: {
                              dvb_sub_destination_settings+: {
                                font+: {
                                  uri: value,
                                },
                              },
                            },
                          },
                          '#withUsername': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withUsername(value): {
                            destination_settings+: {
                              dvb_sub_destination_settings+: {
                                font+: {
                                  username: value,
                                },
                              },
                            },
                          },
                        },
                      '#withFontColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFontColor(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            font_color: value,
                          },
                        },
                      },
                      '#withFontOpacity': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFontOpacity(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            font_opacity: value,
                          },
                        },
                      },
                      '#withFontResolution': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFontResolution(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            font_resolution: value,
                          },
                        },
                      },
                      '#withFontSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFontSize(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            font_size: value,
                          },
                        },
                      },
                      '#withOutlineColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withOutlineColor(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            outline_color: value,
                          },
                        },
                      },
                      '#withOutlineSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withOutlineSize(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            outline_size: value,
                          },
                        },
                      },
                      '#withShadowColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withShadowColor(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            shadow_color: value,
                          },
                        },
                      },
                      '#withShadowOpacity': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withShadowOpacity(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            shadow_opacity: value,
                          },
                        },
                      },
                      '#withShadowXOffset': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withShadowXOffset(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            shadow_x_offset: value,
                          },
                        },
                      },
                      '#withShadowYOffset': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withShadowYOffset(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            shadow_y_offset: value,
                          },
                        },
                      },
                      '#withTeletextGridControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTeletextGridControl(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            teletext_grid_control: value,
                          },
                        },
                      },
                      '#withXPosition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withXPosition(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            x_position: value,
                          },
                        },
                      },
                      '#withYPosition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withYPosition(value): {
                        destination_settings+: {
                          dvb_sub_destination_settings+: {
                            y_position: value,
                          },
                        },
                      },
                    },
                  '#withEbuTtDDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEbuTtDDestinationSettings(value): {
                    destination_settings+: {
                      ebu_tt_d_destination_settings: value,
                    },
                  },
                  '#withEbuTtDDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEbuTtDDestinationSettingsMixin(value): {
                    destination_settings+: {
                      ebu_tt_d_destination_settings+: value,
                    },
                  },
                  ebu_tt_d_destination_settings+:
                    {
                      '#withCopyrightHolder': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCopyrightHolder(value): {
                        destination_settings+: {
                          ebu_tt_d_destination_settings+: {
                            copyright_holder: value,
                          },
                        },
                      },
                      '#withFillLineGap': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFillLineGap(value): {
                        destination_settings+: {
                          ebu_tt_d_destination_settings+: {
                            fill_line_gap: value,
                          },
                        },
                      },
                      '#withFontFamily': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFontFamily(value): {
                        destination_settings+: {
                          ebu_tt_d_destination_settings+: {
                            font_family: value,
                          },
                        },
                      },
                      '#withStyleControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withStyleControl(value): {
                        destination_settings+: {
                          ebu_tt_d_destination_settings+: {
                            style_control: value,
                          },
                        },
                      },
                    },
                  '#withEmbeddedDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEmbeddedDestinationSettings(value): {
                    destination_settings+: {
                      embedded_destination_settings: value,
                    },
                  },
                  '#withEmbeddedDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEmbeddedDestinationSettingsMixin(value): {
                    destination_settings+: {
                      embedded_destination_settings+: value,
                    },
                  },
                  '#withEmbeddedPlusScte20DestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEmbeddedPlusScte20DestinationSettings(value): {
                    destination_settings+: {
                      embedded_plus_scte20_destination_settings: value,
                    },
                  },
                  '#withEmbeddedPlusScte20DestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withEmbeddedPlusScte20DestinationSettingsMixin(value): {
                    destination_settings+: {
                      embedded_plus_scte20_destination_settings+: value,
                    },
                  },
                  '#withRtmpCaptionInfoDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withRtmpCaptionInfoDestinationSettings(value): {
                    destination_settings+: {
                      rtmp_caption_info_destination_settings: value,
                    },
                  },
                  '#withRtmpCaptionInfoDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withRtmpCaptionInfoDestinationSettingsMixin(value): {
                    destination_settings+: {
                      rtmp_caption_info_destination_settings+: value,
                    },
                  },
                  '#withScte20PlusEmbeddedDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withScte20PlusEmbeddedDestinationSettings(value): {
                    destination_settings+: {
                      scte20_plus_embedded_destination_settings: value,
                    },
                  },
                  '#withScte20PlusEmbeddedDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withScte20PlusEmbeddedDestinationSettingsMixin(value): {
                    destination_settings+: {
                      scte20_plus_embedded_destination_settings+: value,
                    },
                  },
                  '#withScte27DestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withScte27DestinationSettings(value): {
                    destination_settings+: {
                      scte27_destination_settings: value,
                    },
                  },
                  '#withScte27DestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withScte27DestinationSettingsMixin(value): {
                    destination_settings+: {
                      scte27_destination_settings+: value,
                    },
                  },
                  '#withSmpteTtDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withSmpteTtDestinationSettings(value): {
                    destination_settings+: {
                      smpte_tt_destination_settings: value,
                    },
                  },
                  '#withSmpteTtDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withSmpteTtDestinationSettingsMixin(value): {
                    destination_settings+: {
                      smpte_tt_destination_settings+: value,
                    },
                  },
                  '#withTeletextDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withTeletextDestinationSettings(value): {
                    destination_settings+: {
                      teletext_destination_settings: value,
                    },
                  },
                  '#withTeletextDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withTeletextDestinationSettingsMixin(value): {
                    destination_settings+: {
                      teletext_destination_settings+: value,
                    },
                  },
                  '#withTtmlDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withTtmlDestinationSettings(value): {
                    destination_settings+: {
                      ttml_destination_settings: value,
                    },
                  },
                  '#withTtmlDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withTtmlDestinationSettingsMixin(value): {
                    destination_settings+: {
                      ttml_destination_settings+: value,
                    },
                  },
                  ttml_destination_settings+:
                    {
                      '#withStyleControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withStyleControl(value): {
                        destination_settings+: {
                          ttml_destination_settings+: {
                            style_control: value,
                          },
                        },
                      },
                    },
                  '#withWebvttDestinationSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withWebvttDestinationSettings(value): {
                    destination_settings+: {
                      webvtt_destination_settings: value,
                    },
                  },
                  '#withWebvttDestinationSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withWebvttDestinationSettingsMixin(value): {
                    destination_settings+: {
                      webvtt_destination_settings+: value,
                    },
                  },
                  webvtt_destination_settings+:
                    {
                      '#withStyleControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withStyleControl(value): {
                        destination_settings+: {
                          webvtt_destination_settings+: {
                            style_control: value,
                          },
                        },
                      },
                    },
                },
              '#withLanguageCode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withLanguageCode(value): {
                language_code: value,
              },
              '#withLanguageDescription': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withLanguageDescription(value): {
                language_description: value,
              },
              '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withName(value): {
                name: value,
              },
            },
          '#withGlobalConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withGlobalConfiguration(value): {
            spec+: {
              encoder_settings+: {
                global_configuration: value,
              },
            },
          },
          '#withGlobalConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withGlobalConfigurationMixin(value): {
            spec+: {
              encoder_settings+: {
                global_configuration+: value,
              },
            },
          },
          global_configuration+:
            {
              '#withInitialAudioGain': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withInitialAudioGain(value): {
                spec+: {
                  encoder_settings+: {
                    global_configuration+: {
                      initial_audio_gain: value,
                    },
                  },
                },
              },
              '#withInputEndAction': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withInputEndAction(value): {
                spec+: {
                  encoder_settings+: {
                    global_configuration+: {
                      input_end_action: value,
                    },
                  },
                },
              },
              '#withInputLossBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withInputLossBehavior(value): {
                spec+: {
                  encoder_settings+: {
                    global_configuration+: {
                      input_loss_behavior: value,
                    },
                  },
                },
              },
              '#withInputLossBehaviorMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withInputLossBehaviorMixin(value): {
                spec+: {
                  encoder_settings+: {
                    global_configuration+: {
                      input_loss_behavior+: value,
                    },
                  },
                },
              },
              input_loss_behavior+:
                {
                  '#withBlackFrameMsec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withBlackFrameMsec(value): {
                    spec+: {
                      encoder_settings+: {
                        global_configuration+: {
                          input_loss_behavior+: {
                            black_frame_msec: value,
                          },
                        },
                      },
                    },
                  },
                  '#withInputLossImageColor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withInputLossImageColor(value): {
                    spec+: {
                      encoder_settings+: {
                        global_configuration+: {
                          input_loss_behavior+: {
                            input_loss_image_color: value,
                          },
                        },
                      },
                    },
                  },
                  '#withInputLossImageSlate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withInputLossImageSlate(value): {
                    spec+: {
                      encoder_settings+: {
                        global_configuration+: {
                          input_loss_behavior+: {
                            input_loss_image_slate: value,
                          },
                        },
                      },
                    },
                  },
                  '#withInputLossImageSlateMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withInputLossImageSlateMixin(value): {
                    spec+: {
                      encoder_settings+: {
                        global_configuration+: {
                          input_loss_behavior+: {
                            input_loss_image_slate+: value,
                          },
                        },
                      },
                    },
                  },
                  input_loss_image_slate+:
                    {
                      '#withPasswordParam': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withPasswordParam(value): {
                        spec+: {
                          encoder_settings+: {
                            global_configuration+: {
                              input_loss_behavior+: {
                                input_loss_image_slate+: {
                                  password_param: value,
                                },
                              },
                            },
                          },
                        },
                      },
                      '#withUri': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withUri(value): {
                        spec+: {
                          encoder_settings+: {
                            global_configuration+: {
                              input_loss_behavior+: {
                                input_loss_image_slate+: {
                                  uri: value,
                                },
                              },
                            },
                          },
                        },
                      },
                      '#withUsername': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withUsername(value): {
                        spec+: {
                          encoder_settings+: {
                            global_configuration+: {
                              input_loss_behavior+: {
                                input_loss_image_slate+: {
                                  username: value,
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  '#withInputLossImageType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withInputLossImageType(value): {
                    spec+: {
                      encoder_settings+: {
                        global_configuration+: {
                          input_loss_behavior+: {
                            input_loss_image_type: value,
                          },
                        },
                      },
                    },
                  },
                  '#withRepeatFrameMsec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withRepeatFrameMsec(value): {
                    spec+: {
                      encoder_settings+: {
                        global_configuration+: {
                          input_loss_behavior+: {
                            repeat_frame_msec: value,
                          },
                        },
                      },
                    },
                  },
                },
              '#withOutputLockingMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withOutputLockingMode(value): {
                spec+: {
                  encoder_settings+: {
                    global_configuration+: {
                      output_locking_mode: value,
                    },
                  },
                },
              },
              '#withOutputTimingSource': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withOutputTimingSource(value): {
                spec+: {
                  encoder_settings+: {
                    global_configuration+: {
                      output_timing_source: value,
                    },
                  },
                },
              },
              '#withSupportLowFramerateInputs': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withSupportLowFramerateInputs(value): {
                spec+: {
                  encoder_settings+: {
                    global_configuration+: {
                      support_low_framerate_inputs: value,
                    },
                  },
                },
              },
            },
          '#withMotionGraphicsConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withMotionGraphicsConfiguration(value): {
            spec+: {
              encoder_settings+: {
                motion_graphics_configuration: value,
              },
            },
          },
          '#withMotionGraphicsConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withMotionGraphicsConfigurationMixin(value): {
            spec+: {
              encoder_settings+: {
                motion_graphics_configuration+: value,
              },
            },
          },
          motion_graphics_configuration+:
            {
              '#withMotionGraphicsInsertion': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withMotionGraphicsInsertion(value): {
                spec+: {
                  encoder_settings+: {
                    motion_graphics_configuration+: {
                      motion_graphics_insertion: value,
                    },
                  },
                },
              },
              '#withMotionGraphicsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withMotionGraphicsSettings(value): {
                spec+: {
                  encoder_settings+: {
                    motion_graphics_configuration+: {
                      motion_graphics_settings: value,
                    },
                  },
                },
              },
              '#withMotionGraphicsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withMotionGraphicsSettingsMixin(value): {
                spec+: {
                  encoder_settings+: {
                    motion_graphics_configuration+: {
                      motion_graphics_settings+: value,
                    },
                  },
                },
              },
              motion_graphics_settings+:
                {
                  '#withHtmlMotionGraphicsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withHtmlMotionGraphicsSettings(value): {
                    spec+: {
                      encoder_settings+: {
                        motion_graphics_configuration+: {
                          motion_graphics_settings+: {
                            html_motion_graphics_settings: value,
                          },
                        },
                      },
                    },
                  },
                  '#withHtmlMotionGraphicsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withHtmlMotionGraphicsSettingsMixin(value): {
                    spec+: {
                      encoder_settings+: {
                        motion_graphics_configuration+: {
                          motion_graphics_settings+: {
                            html_motion_graphics_settings+: value,
                          },
                        },
                      },
                    },
                  },
                },
            },
          '#withNielsenConfiguration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withNielsenConfiguration(value): {
            spec+: {
              encoder_settings+: {
                nielsen_configuration: value,
              },
            },
          },
          '#withNielsenConfigurationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withNielsenConfigurationMixin(value): {
            spec+: {
              encoder_settings+: {
                nielsen_configuration+: value,
              },
            },
          },
          nielsen_configuration+:
            {
              '#withDistributorId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withDistributorId(value): {
                spec+: {
                  encoder_settings+: {
                    nielsen_configuration+: {
                      distributor_id: value,
                    },
                  },
                },
              },
              '#withNielsenPcmToId3Tagging': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withNielsenPcmToId3Tagging(value): {
                spec+: {
                  encoder_settings+: {
                    nielsen_configuration+: {
                      nielsen_pcm_to_id3_tagging: value,
                    },
                  },
                },
              },
            },
          '#withOutputGroups': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withOutputGroups(value): {
            spec+: {
              encoder_settings+: {
                output_groups:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withOutputGroupsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withOutputGroupsMixin(value): {
            spec+: {
              encoder_settings+: {
                output_groups+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          output_groups+:
            {
              '#': { help: '', name: 'output_groups' },
              '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withName(value): {
                name: value,
              },
              '#withOutputGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withOutputGroupSettings(value): {
                output_group_settings: value,
              },
              '#withOutputGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withOutputGroupSettingsMixin(value): {
                output_group_settings+: value,
              },
              output_group_settings+:
                {
                  '#withArchiveGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withArchiveGroupSettings(value): {
                    output_group_settings+: {
                      archive_group_settings:
                        (if std.isArray(value)
                         then value
                         else [value]),
                    },
                  },
                  '#withArchiveGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withArchiveGroupSettingsMixin(value): {
                    output_group_settings+: {
                      archive_group_settings+:
                        (if std.isArray(value)
                         then value
                         else [value]),
                    },
                  },
                  archive_group_settings+:
                    {
                      '#': { help: '', name: 'archive_group_settings' },
                      '#withArchiveCdnSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withArchiveCdnSettings(value): {
                        archive_cdn_settings: value,
                      },
                      '#withArchiveCdnSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withArchiveCdnSettingsMixin(value): {
                        archive_cdn_settings+: value,
                      },
                      archive_cdn_settings+:
                        {
                          '#withArchiveS3Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withArchiveS3Settings(value): {
                            archive_cdn_settings+: {
                              archive_s3_settings: value,
                            },
                          },
                          '#withArchiveS3SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withArchiveS3SettingsMixin(value): {
                            archive_cdn_settings+: {
                              archive_s3_settings+: value,
                            },
                          },
                          archive_s3_settings+:
                            {
                              '#withCannedAcl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withCannedAcl(value): {
                                archive_cdn_settings+: {
                                  archive_s3_settings+: {
                                    canned_acl: value,
                                  },
                                },
                              },
                            },
                        },
                      '#withDestination': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestination(value): {
                        destination: value,
                      },
                      '#withDestinationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestinationMixin(value): {
                        destination+: value,
                      },
                      destination+:
                        {
                          '#withDestinationRefId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withDestinationRefId(value): {
                            destination+: {
                              destination_ref_id: value,
                            },
                          },
                        },
                      '#withRolloverInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withRolloverInterval(value): {
                        rollover_interval: value,
                      },
                    },
                  '#withFrameCaptureGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withFrameCaptureGroupSettings(value): {
                    output_group_settings+: {
                      frame_capture_group_settings: value,
                    },
                  },
                  '#withFrameCaptureGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withFrameCaptureGroupSettingsMixin(value): {
                    output_group_settings+: {
                      frame_capture_group_settings+: value,
                    },
                  },
                  frame_capture_group_settings+:
                    {
                      '#withDestination': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestination(value): {
                        output_group_settings+: {
                          frame_capture_group_settings+: {
                            destination: value,
                          },
                        },
                      },
                      '#withDestinationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestinationMixin(value): {
                        output_group_settings+: {
                          frame_capture_group_settings+: {
                            destination+: value,
                          },
                        },
                      },
                      destination+:
                        {
                          '#withDestinationRefId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withDestinationRefId(value): {
                            output_group_settings+: {
                              frame_capture_group_settings+: {
                                destination+: {
                                  destination_ref_id: value,
                                },
                              },
                            },
                          },
                        },
                      '#withFrameCaptureCdnSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFrameCaptureCdnSettings(value): {
                        output_group_settings+: {
                          frame_capture_group_settings+: {
                            frame_capture_cdn_settings: value,
                          },
                        },
                      },
                      '#withFrameCaptureCdnSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFrameCaptureCdnSettingsMixin(value): {
                        output_group_settings+: {
                          frame_capture_group_settings+: {
                            frame_capture_cdn_settings+: value,
                          },
                        },
                      },
                      frame_capture_cdn_settings+:
                        {
                          '#withFrameCaptureS3Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withFrameCaptureS3Settings(value): {
                            output_group_settings+: {
                              frame_capture_group_settings+: {
                                frame_capture_cdn_settings+: {
                                  frame_capture_s3_settings: value,
                                },
                              },
                            },
                          },
                          '#withFrameCaptureS3SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withFrameCaptureS3SettingsMixin(value): {
                            output_group_settings+: {
                              frame_capture_group_settings+: {
                                frame_capture_cdn_settings+: {
                                  frame_capture_s3_settings+: value,
                                },
                              },
                            },
                          },
                          frame_capture_s3_settings+:
                            {
                              '#withCannedAcl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withCannedAcl(value): {
                                output_group_settings+: {
                                  frame_capture_group_settings+: {
                                    frame_capture_cdn_settings+: {
                                      frame_capture_s3_settings+: {
                                        canned_acl: value,
                                      },
                                    },
                                  },
                                },
                              },
                            },
                        },
                    },
                  '#withHlsGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withHlsGroupSettings(value): {
                    output_group_settings+: {
                      hls_group_settings: value,
                    },
                  },
                  '#withHlsGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withHlsGroupSettingsMixin(value): {
                    output_group_settings+: {
                      hls_group_settings+: value,
                    },
                  },
                  hls_group_settings+:
                    {
                      '#withAdMarkers': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withAdMarkers(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            ad_markers:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      '#withAdMarkersMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withAdMarkersMixin(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            ad_markers+:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      '#withBaseUrlContent': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBaseUrlContent(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            base_url_content: value,
                          },
                        },
                      },
                      '#withBaseUrlContent1': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBaseUrlContent1(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            base_url_content1: value,
                          },
                        },
                      },
                      '#withBaseUrlManifest': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBaseUrlManifest(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            base_url_manifest: value,
                          },
                        },
                      },
                      '#withBaseUrlManifest1': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withBaseUrlManifest1(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            base_url_manifest1: value,
                          },
                        },
                      },
                      '#withCaptionLanguageMappings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withCaptionLanguageMappings(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            caption_language_mappings:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      '#withCaptionLanguageMappingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withCaptionLanguageMappingsMixin(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            caption_language_mappings+:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      caption_language_mappings+:
                        {
                          '#': { help: '', name: 'caption_language_mappings' },
                          '#withCaptionChannel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withCaptionChannel(value): {
                            caption_channel: value,
                          },
                          '#withLanguageCode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withLanguageCode(value): {
                            language_code: value,
                          },
                          '#withLanguageDescription': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withLanguageDescription(value): {
                            language_description: value,
                          },
                        },
                      '#withCaptionLanguageSetting': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCaptionLanguageSetting(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            caption_language_setting: value,
                          },
                        },
                      },
                      '#withClientCache': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withClientCache(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            client_cache: value,
                          },
                        },
                      },
                      '#withCodecSpecification': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCodecSpecification(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            codec_specification: value,
                          },
                        },
                      },
                      '#withConstantIv': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withConstantIv(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            constant_iv: value,
                          },
                        },
                      },
                      '#withDestination': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestination(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            destination: value,
                          },
                        },
                      },
                      '#withDestinationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestinationMixin(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            destination+: value,
                          },
                        },
                      },
                      destination+:
                        {
                          '#withDestinationRefId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withDestinationRefId(value): {
                            output_group_settings+: {
                              hls_group_settings+: {
                                destination+: {
                                  destination_ref_id: value,
                                },
                              },
                            },
                          },
                        },
                      '#withDirectoryStructure': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withDirectoryStructure(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            directory_structure: value,
                          },
                        },
                      },
                      '#withDiscontinuityTags': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withDiscontinuityTags(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            discontinuity_tags: value,
                          },
                        },
                      },
                      '#withEncryptionType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withEncryptionType(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            encryption_type: value,
                          },
                        },
                      },
                      '#withHlsCdnSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withHlsCdnSettings(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            hls_cdn_settings:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      '#withHlsCdnSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withHlsCdnSettingsMixin(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            hls_cdn_settings+:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      hls_cdn_settings+:
                        {
                          '#': { help: '', name: 'hls_cdn_settings' },
                          '#withHlsAkamaiSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsAkamaiSettings(value): {
                            hls_akamai_settings: value,
                          },
                          '#withHlsAkamaiSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsAkamaiSettingsMixin(value): {
                            hls_akamai_settings+: value,
                          },
                          hls_akamai_settings+:
                            {
                              '#withConnectionRetryInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withConnectionRetryInterval(value): {
                                hls_akamai_settings+: {
                                  connection_retry_interval: value,
                                },
                              },
                              '#withFilecacheDuration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withFilecacheDuration(value): {
                                hls_akamai_settings+: {
                                  filecache_duration: value,
                                },
                              },
                              '#withHttpTransferMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withHttpTransferMode(value): {
                                hls_akamai_settings+: {
                                  http_transfer_mode: value,
                                },
                              },
                              '#withNumRetries': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withNumRetries(value): {
                                hls_akamai_settings+: {
                                  num_retries: value,
                                },
                              },
                              '#withRestartDelay': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withRestartDelay(value): {
                                hls_akamai_settings+: {
                                  restart_delay: value,
                                },
                              },
                              '#withSalt': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withSalt(value): {
                                hls_akamai_settings+: {
                                  salt: value,
                                },
                              },
                              '#withToken': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withToken(value): {
                                hls_akamai_settings+: {
                                  token: value,
                                },
                              },
                            },
                          '#withHlsBasicPutSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsBasicPutSettings(value): {
                            hls_basic_put_settings: value,
                          },
                          '#withHlsBasicPutSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsBasicPutSettingsMixin(value): {
                            hls_basic_put_settings+: value,
                          },
                          hls_basic_put_settings+:
                            {
                              '#withConnectionRetryInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withConnectionRetryInterval(value): {
                                hls_basic_put_settings+: {
                                  connection_retry_interval: value,
                                },
                              },
                              '#withFilecacheDuration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withFilecacheDuration(value): {
                                hls_basic_put_settings+: {
                                  filecache_duration: value,
                                },
                              },
                              '#withNumRetries': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withNumRetries(value): {
                                hls_basic_put_settings+: {
                                  num_retries: value,
                                },
                              },
                              '#withRestartDelay': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withRestartDelay(value): {
                                hls_basic_put_settings+: {
                                  restart_delay: value,
                                },
                              },
                            },
                          '#withHlsMediaStoreSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsMediaStoreSettings(value): {
                            hls_media_store_settings: value,
                          },
                          '#withHlsMediaStoreSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsMediaStoreSettingsMixin(value): {
                            hls_media_store_settings+: value,
                          },
                          hls_media_store_settings+:
                            {
                              '#withConnectionRetryInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withConnectionRetryInterval(value): {
                                hls_media_store_settings+: {
                                  connection_retry_interval: value,
                                },
                              },
                              '#withFilecacheDuration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withFilecacheDuration(value): {
                                hls_media_store_settings+: {
                                  filecache_duration: value,
                                },
                              },
                              '#withMediaStoreStorageClass': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withMediaStoreStorageClass(value): {
                                hls_media_store_settings+: {
                                  media_store_storage_class: value,
                                },
                              },
                              '#withNumRetries': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withNumRetries(value): {
                                hls_media_store_settings+: {
                                  num_retries: value,
                                },
                              },
                              '#withRestartDelay': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withRestartDelay(value): {
                                hls_media_store_settings+: {
                                  restart_delay: value,
                                },
                              },
                            },
                          '#withHlsS3Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsS3Settings(value): {
                            hls_s3_settings: value,
                          },
                          '#withHlsS3SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsS3SettingsMixin(value): {
                            hls_s3_settings+: value,
                          },
                          hls_s3_settings+:
                            {
                              '#withCannedAcl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withCannedAcl(value): {
                                hls_s3_settings+: {
                                  canned_acl: value,
                                },
                              },
                            },
                          '#withHlsWebdavSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsWebdavSettings(value): {
                            hls_webdav_settings: value,
                          },
                          '#withHlsWebdavSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsWebdavSettingsMixin(value): {
                            hls_webdav_settings+: value,
                          },
                          hls_webdav_settings+:
                            {
                              '#withConnectionRetryInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withConnectionRetryInterval(value): {
                                hls_webdav_settings+: {
                                  connection_retry_interval: value,
                                },
                              },
                              '#withFilecacheDuration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withFilecacheDuration(value): {
                                hls_webdav_settings+: {
                                  filecache_duration: value,
                                },
                              },
                              '#withHttpTransferMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withHttpTransferMode(value): {
                                hls_webdav_settings+: {
                                  http_transfer_mode: value,
                                },
                              },
                              '#withNumRetries': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withNumRetries(value): {
                                hls_webdav_settings+: {
                                  num_retries: value,
                                },
                              },
                              '#withRestartDelay': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withRestartDelay(value): {
                                hls_webdav_settings+: {
                                  restart_delay: value,
                                },
                              },
                            },
                        },
                      '#withHlsId3SegmentTagging': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withHlsId3SegmentTagging(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            hls_id3_segment_tagging: value,
                          },
                        },
                      },
                      '#withIframeOnlyPlaylists': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withIframeOnlyPlaylists(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            iframe_only_playlists: value,
                          },
                        },
                      },
                      '#withIncompleteSegmentBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withIncompleteSegmentBehavior(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            incomplete_segment_behavior: value,
                          },
                        },
                      },
                      '#withIndexNSegments': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withIndexNSegments(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            index_n_segments: value,
                          },
                        },
                      },
                      '#withInputLossAction': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withInputLossAction(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            input_loss_action: value,
                          },
                        },
                      },
                      '#withIvInManifest': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withIvInManifest(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            iv_in_manifest: value,
                          },
                        },
                      },
                      '#withIvSource': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withIvSource(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            iv_source: value,
                          },
                        },
                      },
                      '#withKeepSegments': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withKeepSegments(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            keep_segments: value,
                          },
                        },
                      },
                      '#withKeyFormat': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withKeyFormat(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            key_format: value,
                          },
                        },
                      },
                      '#withKeyFormatVersions': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withKeyFormatVersions(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            key_format_versions: value,
                          },
                        },
                      },
                      '#withKeyProviderSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withKeyProviderSettings(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            key_provider_settings: value,
                          },
                        },
                      },
                      '#withKeyProviderSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withKeyProviderSettingsMixin(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            key_provider_settings+: value,
                          },
                        },
                      },
                      key_provider_settings+:
                        {
                          '#withStaticKeySettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                          withStaticKeySettings(value): {
                            output_group_settings+: {
                              hls_group_settings+: {
                                key_provider_settings+: {
                                  static_key_settings:
                                    (if std.isArray(value)
                                     then value
                                     else [value]),
                                },
                              },
                            },
                          },
                          '#withStaticKeySettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                          withStaticKeySettingsMixin(value): {
                            output_group_settings+: {
                              hls_group_settings+: {
                                key_provider_settings+: {
                                  static_key_settings+:
                                    (if std.isArray(value)
                                     then value
                                     else [value]),
                                },
                              },
                            },
                          },
                          static_key_settings+:
                            {
                              '#': { help: '', name: 'static_key_settings' },
                              '#withKeyProviderServer': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withKeyProviderServer(value): {
                                key_provider_server: value,
                              },
                              '#withKeyProviderServerMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withKeyProviderServerMixin(value): {
                                key_provider_server+: value,
                              },
                              key_provider_server+:
                                {
                                  '#withPasswordParam': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withPasswordParam(value): {
                                    key_provider_server+: {
                                      password_param: value,
                                    },
                                  },
                                  '#withUri': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withUri(value): {
                                    key_provider_server+: {
                                      uri: value,
                                    },
                                  },
                                  '#withUsername': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withUsername(value): {
                                    key_provider_server+: {
                                      username: value,
                                    },
                                  },
                                },
                              '#withStaticKeyValue': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withStaticKeyValue(value): {
                                static_key_value: value,
                              },
                            },
                        },
                      '#withManifestCompression': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withManifestCompression(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            manifest_compression: value,
                          },
                        },
                      },
                      '#withManifestDurationFormat': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withManifestDurationFormat(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            manifest_duration_format: value,
                          },
                        },
                      },
                      '#withMinSegmentLength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withMinSegmentLength(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            min_segment_length: value,
                          },
                        },
                      },
                      '#withMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withMode(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            mode: value,
                          },
                        },
                      },
                      '#withOutputSelection': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withOutputSelection(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            output_selection: value,
                          },
                        },
                      },
                      '#withProgramDateTime': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withProgramDateTime(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            program_date_time: value,
                          },
                        },
                      },
                      '#withProgramDateTimeClock': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withProgramDateTimeClock(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            program_date_time_clock: value,
                          },
                        },
                      },
                      '#withProgramDateTimePeriod': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withProgramDateTimePeriod(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            program_date_time_period: value,
                          },
                        },
                      },
                      '#withRedundantManifest': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withRedundantManifest(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            redundant_manifest: value,
                          },
                        },
                      },
                      '#withSegmentLength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSegmentLength(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            segment_length: value,
                          },
                        },
                      },
                      '#withSegmentsPerSubdirectory': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSegmentsPerSubdirectory(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            segments_per_subdirectory: value,
                          },
                        },
                      },
                      '#withStreamInfResolution': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withStreamInfResolution(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            stream_inf_resolution: value,
                          },
                        },
                      },
                      '#withTimedMetadataId3Frame': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTimedMetadataId3Frame(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            timed_metadata_id3_frame: value,
                          },
                        },
                      },
                      '#withTimedMetadataId3Period': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withTimedMetadataId3Period(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            timed_metadata_id3_period: value,
                          },
                        },
                      },
                      '#withTimestampDeltaMilliseconds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withTimestampDeltaMilliseconds(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            timestamp_delta_milliseconds: value,
                          },
                        },
                      },
                      '#withTsFileMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTsFileMode(value): {
                        output_group_settings+: {
                          hls_group_settings+: {
                            ts_file_mode: value,
                          },
                        },
                      },
                    },
                  '#withMediaPackageGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withMediaPackageGroupSettings(value): {
                    output_group_settings+: {
                      media_package_group_settings: value,
                    },
                  },
                  '#withMediaPackageGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withMediaPackageGroupSettingsMixin(value): {
                    output_group_settings+: {
                      media_package_group_settings+: value,
                    },
                  },
                  media_package_group_settings+:
                    {
                      '#withDestination': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestination(value): {
                        output_group_settings+: {
                          media_package_group_settings+: {
                            destination: value,
                          },
                        },
                      },
                      '#withDestinationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestinationMixin(value): {
                        output_group_settings+: {
                          media_package_group_settings+: {
                            destination+: value,
                          },
                        },
                      },
                      destination+:
                        {
                          '#withDestinationRefId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withDestinationRefId(value): {
                            output_group_settings+: {
                              media_package_group_settings+: {
                                destination+: {
                                  destination_ref_id: value,
                                },
                              },
                            },
                          },
                        },
                    },
                  '#withMsSmoothGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withMsSmoothGroupSettings(value): {
                    output_group_settings+: {
                      ms_smooth_group_settings: value,
                    },
                  },
                  '#withMsSmoothGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withMsSmoothGroupSettingsMixin(value): {
                    output_group_settings+: {
                      ms_smooth_group_settings+: value,
                    },
                  },
                  ms_smooth_group_settings+:
                    {
                      '#withAcquisitionPointId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAcquisitionPointId(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            acquisition_point_id: value,
                          },
                        },
                      },
                      '#withAudioOnlyTimecodeControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAudioOnlyTimecodeControl(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            audio_only_timecode_control: value,
                          },
                        },
                      },
                      '#withCertificateMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCertificateMode(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            certificate_mode: value,
                          },
                        },
                      },
                      '#withConnectionRetryInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withConnectionRetryInterval(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            connection_retry_interval: value,
                          },
                        },
                      },
                      '#withDestination': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestination(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            destination: value,
                          },
                        },
                      },
                      '#withDestinationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDestinationMixin(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            destination+: value,
                          },
                        },
                      },
                      destination+:
                        {
                          '#withDestinationRefId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withDestinationRefId(value): {
                            output_group_settings+: {
                              ms_smooth_group_settings+: {
                                destination+: {
                                  destination_ref_id: value,
                                },
                              },
                            },
                          },
                        },
                      '#withEventId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withEventId(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            event_id: value,
                          },
                        },
                      },
                      '#withEventIdMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withEventIdMode(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            event_id_mode: value,
                          },
                        },
                      },
                      '#withEventStopBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withEventStopBehavior(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            event_stop_behavior: value,
                          },
                        },
                      },
                      '#withFilecacheDuration': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFilecacheDuration(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            filecache_duration: value,
                          },
                        },
                      },
                      '#withFragmentLength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFragmentLength(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            fragment_length: value,
                          },
                        },
                      },
                      '#withInputLossAction': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withInputLossAction(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            input_loss_action: value,
                          },
                        },
                      },
                      '#withNumRetries': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withNumRetries(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            num_retries: value,
                          },
                        },
                      },
                      '#withRestartDelay': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withRestartDelay(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            restart_delay: value,
                          },
                        },
                      },
                      '#withSegmentationMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSegmentationMode(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            segmentation_mode: value,
                          },
                        },
                      },
                      '#withSendDelayMs': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSendDelayMs(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            send_delay_ms: value,
                          },
                        },
                      },
                      '#withSparseTrackType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSparseTrackType(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            sparse_track_type: value,
                          },
                        },
                      },
                      '#withStreamManifestBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withStreamManifestBehavior(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            stream_manifest_behavior: value,
                          },
                        },
                      },
                      '#withTimestampOffset': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTimestampOffset(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            timestamp_offset: value,
                          },
                        },
                      },
                      '#withTimestampOffsetMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTimestampOffsetMode(value): {
                        output_group_settings+: {
                          ms_smooth_group_settings+: {
                            timestamp_offset_mode: value,
                          },
                        },
                      },
                    },
                  '#withMultiplexGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withMultiplexGroupSettings(value): {
                    output_group_settings+: {
                      multiplex_group_settings: value,
                    },
                  },
                  '#withMultiplexGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withMultiplexGroupSettingsMixin(value): {
                    output_group_settings+: {
                      multiplex_group_settings+: value,
                    },
                  },
                  '#withRtmpGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withRtmpGroupSettings(value): {
                    output_group_settings+: {
                      rtmp_group_settings: value,
                    },
                  },
                  '#withRtmpGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withRtmpGroupSettingsMixin(value): {
                    output_group_settings+: {
                      rtmp_group_settings+: value,
                    },
                  },
                  rtmp_group_settings+:
                    {
                      '#withAdMarkers': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withAdMarkers(value): {
                        output_group_settings+: {
                          rtmp_group_settings+: {
                            ad_markers:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      '#withAdMarkersMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                      withAdMarkersMixin(value): {
                        output_group_settings+: {
                          rtmp_group_settings+: {
                            ad_markers+:
                              (if std.isArray(value)
                               then value
                               else [value]),
                          },
                        },
                      },
                      '#withAuthenticationScheme': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAuthenticationScheme(value): {
                        output_group_settings+: {
                          rtmp_group_settings+: {
                            authentication_scheme: value,
                          },
                        },
                      },
                      '#withCacheFullBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCacheFullBehavior(value): {
                        output_group_settings+: {
                          rtmp_group_settings+: {
                            cache_full_behavior: value,
                          },
                        },
                      },
                      '#withCacheLength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withCacheLength(value): {
                        output_group_settings+: {
                          rtmp_group_settings+: {
                            cache_length: value,
                          },
                        },
                      },
                      '#withCaptionData': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCaptionData(value): {
                        output_group_settings+: {
                          rtmp_group_settings+: {
                            caption_data: value,
                          },
                        },
                      },
                      '#withInputLossAction': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withInputLossAction(value): {
                        output_group_settings+: {
                          rtmp_group_settings+: {
                            input_loss_action: value,
                          },
                        },
                      },
                      '#withRestartDelay': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withRestartDelay(value): {
                        output_group_settings+: {
                          rtmp_group_settings+: {
                            restart_delay: value,
                          },
                        },
                      },
                    },
                  '#withUdpGroupSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withUdpGroupSettings(value): {
                    output_group_settings+: {
                      udp_group_settings: value,
                    },
                  },
                  '#withUdpGroupSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withUdpGroupSettingsMixin(value): {
                    output_group_settings+: {
                      udp_group_settings+: value,
                    },
                  },
                  udp_group_settings+:
                    {
                      '#withInputLossAction': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withInputLossAction(value): {
                        output_group_settings+: {
                          udp_group_settings+: {
                            input_loss_action: value,
                          },
                        },
                      },
                      '#withTimedMetadataId3Frame': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTimedMetadataId3Frame(value): {
                        output_group_settings+: {
                          udp_group_settings+: {
                            timed_metadata_id3_frame: value,
                          },
                        },
                      },
                      '#withTimedMetadataId3Period': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withTimedMetadataId3Period(value): {
                        output_group_settings+: {
                          udp_group_settings+: {
                            timed_metadata_id3_period: value,
                          },
                        },
                      },
                    },
                },
              '#withOutputs': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withOutputs(value): {
                outputs:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
              '#withOutputsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withOutputsMixin(value): {
                outputs+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
              outputs+:
                {
                  '#': { help: '', name: 'outputs' },
                  '#withAudioDescriptionNames': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withAudioDescriptionNames(value): {
                    audio_description_names:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                  '#withAudioDescriptionNamesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withAudioDescriptionNamesMixin(value): {
                    audio_description_names+:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                  '#withCaptionDescriptionNames': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withCaptionDescriptionNames(value): {
                    caption_description_names:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                  '#withCaptionDescriptionNamesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                  withCaptionDescriptionNamesMixin(value): {
                    caption_description_names+:
                      (if std.isArray(value)
                       then value
                       else [value]),
                  },
                  '#withOutputName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withOutputName(value): {
                    output_name: value,
                  },
                  '#withOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withOutputSettings(value): {
                    output_settings: value,
                  },
                  '#withOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withOutputSettingsMixin(value): {
                    output_settings+: value,
                  },
                  output_settings+:
                    {
                      '#withArchiveOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withArchiveOutputSettings(value): {
                        output_settings+: {
                          archive_output_settings: value,
                        },
                      },
                      '#withArchiveOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withArchiveOutputSettingsMixin(value): {
                        output_settings+: {
                          archive_output_settings+: value,
                        },
                      },
                      archive_output_settings+:
                        {
                          '#withContainerSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withContainerSettings(value): {
                            output_settings+: {
                              archive_output_settings+: {
                                container_settings: value,
                              },
                            },
                          },
                          '#withContainerSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withContainerSettingsMixin(value): {
                            output_settings+: {
                              archive_output_settings+: {
                                container_settings+: value,
                              },
                            },
                          },
                          container_settings+:
                            {
                              '#withM2tsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withM2tsSettings(value): {
                                output_settings+: {
                                  archive_output_settings+: {
                                    container_settings+: {
                                      m2ts_settings: value,
                                    },
                                  },
                                },
                              },
                              '#withM2tsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withM2tsSettingsMixin(value): {
                                output_settings+: {
                                  archive_output_settings+: {
                                    container_settings+: {
                                      m2ts_settings+: value,
                                    },
                                  },
                                },
                              },
                              m2ts_settings+:
                                {
                                  '#withAbsentInputAudioBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAbsentInputAudioBehavior(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            absent_input_audio_behavior: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withArib': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withArib(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            arib: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAribCaptionsPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAribCaptionsPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            arib_captions_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAribCaptionsPidControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAribCaptionsPidControl(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            arib_captions_pid_control: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioBufferModel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioBufferModel(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            audio_buffer_model: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioFramesPerPes': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withAudioFramesPerPes(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            audio_frames_per_pes: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioPids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioPids(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            audio_pids: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioStreamType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioStreamType(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            audio_stream_type: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withBitrate(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            bitrate: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withBufferModel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withBufferModel(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            buffer_model: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withCcDescriptor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withCcDescriptor(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            cc_descriptor: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbNitSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbNitSettings(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_nit_settings: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbNitSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbNitSettingsMixin(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_nit_settings+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  dvb_nit_settings+:
                                    {
                                      '#withNetworkId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withNetworkId(value): {
                                        output_settings+: {
                                          archive_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_nit_settings+: {
                                                  network_id: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withNetworkName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withNetworkName(value): {
                                        output_settings+: {
                                          archive_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_nit_settings+: {
                                                  network_name: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withRepInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withRepInterval(value): {
                                        output_settings+: {
                                          archive_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_nit_settings+: {
                                                  rep_interval: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  '#withDvbSdtSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbSdtSettings(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_sdt_settings: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbSdtSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbSdtSettingsMixin(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_sdt_settings+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  dvb_sdt_settings+:
                                    {
                                      '#withOutputSdt': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withOutputSdt(value): {
                                        output_settings+: {
                                          archive_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_sdt_settings+: {
                                                  output_sdt: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withRepInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withRepInterval(value): {
                                        output_settings+: {
                                          archive_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_sdt_settings+: {
                                                  rep_interval: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withServiceName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withServiceName(value): {
                                        output_settings+: {
                                          archive_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_sdt_settings+: {
                                                  service_name: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withServiceProviderName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withServiceProviderName(value): {
                                        output_settings+: {
                                          archive_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_sdt_settings+: {
                                                  service_provider_name: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  '#withDvbSubPids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withDvbSubPids(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_sub_pids: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbTdtSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbTdtSettings(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_tdt_settings: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbTdtSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbTdtSettingsMixin(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_tdt_settings+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  dvb_tdt_settings+:
                                    {
                                      '#withRepInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withRepInterval(value): {
                                        output_settings+: {
                                          archive_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_tdt_settings+: {
                                                  rep_interval: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  '#withDvbTeletextPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withDvbTeletextPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_teletext_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEbif': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEbif(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ebif: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEbpAudioInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEbpAudioInterval(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ebp_audio_interval: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEbpLookaheadMs': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withEbpLookaheadMs(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ebp_lookahead_ms: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEbpPlacement': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEbpPlacement(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ebp_placement: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEcmPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEcmPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ecm_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEsRateInPes': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEsRateInPes(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            es_rate_in_pes: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEtvPlatformPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEtvPlatformPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            etv_platform_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEtvSignalPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEtvSignalPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            etv_signal_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withFragmentTime': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withFragmentTime(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            fragment_time: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withKlv': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withKlv(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            klv: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withKlvDataPids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withKlvDataPids(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            klv_data_pids: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withNielsenId3Behavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withNielsenId3Behavior(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            nielsen_id3_behavior: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withNullPacketBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withNullPacketBitrate(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            null_packet_bitrate: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPatInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withPatInterval(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pat_interval: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPcrControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withPcrControl(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pcr_control: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPcrPeriod': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withPcrPeriod(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pcr_period: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPcrPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withPcrPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pcr_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPmtInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withPmtInterval(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pmt_interval: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPmtPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withPmtPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pmt_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withProgramNum': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withProgramNum(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            program_num: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withRateMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withRateMode(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            rate_mode: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withScte27Pids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withScte27Pids(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            scte27_pids: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withScte35Control': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withScte35Control(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            scte35_control: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withScte35Pid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withScte35Pid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            scte35_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withSegmentationMarkers': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withSegmentationMarkers(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            segmentation_markers: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withSegmentationStyle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withSegmentationStyle(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            segmentation_style: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withSegmentationTime': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withSegmentationTime(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            segmentation_time: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withTimedMetadataBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withTimedMetadataBehavior(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            timed_metadata_behavior: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withTimedMetadataPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withTimedMetadataPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            timed_metadata_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withTransportStreamId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withTransportStreamId(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            transport_stream_id: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withVideoPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withVideoPid(value): {
                                    output_settings+: {
                                      archive_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            video_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              '#withRawSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withRawSettings(value): {
                                output_settings+: {
                                  archive_output_settings+: {
                                    container_settings+: {
                                      raw_settings: value,
                                    },
                                  },
                                },
                              },
                              '#withRawSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withRawSettingsMixin(value): {
                                output_settings+: {
                                  archive_output_settings+: {
                                    container_settings+: {
                                      raw_settings+: value,
                                    },
                                  },
                                },
                              },
                            },
                          '#withExtension': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withExtension(value): {
                            output_settings+: {
                              archive_output_settings+: {
                                extension: value,
                              },
                            },
                          },
                          '#withNameModifier': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withNameModifier(value): {
                            output_settings+: {
                              archive_output_settings+: {
                                name_modifier: value,
                              },
                            },
                          },
                        },
                      '#withFrameCaptureOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFrameCaptureOutputSettings(value): {
                        output_settings+: {
                          frame_capture_output_settings: value,
                        },
                      },
                      '#withFrameCaptureOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFrameCaptureOutputSettingsMixin(value): {
                        output_settings+: {
                          frame_capture_output_settings+: value,
                        },
                      },
                      frame_capture_output_settings+:
                        {
                          '#withNameModifier': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withNameModifier(value): {
                            output_settings+: {
                              frame_capture_output_settings+: {
                                name_modifier: value,
                              },
                            },
                          },
                        },
                      '#withHlsOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withHlsOutputSettings(value): {
                        output_settings+: {
                          hls_output_settings: value,
                        },
                      },
                      '#withHlsOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withHlsOutputSettingsMixin(value): {
                        output_settings+: {
                          hls_output_settings+: value,
                        },
                      },
                      hls_output_settings+:
                        {
                          '#withH265PackagingType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withH265PackagingType(value): {
                            output_settings+: {
                              hls_output_settings+: {
                                h265_packaging_type: value,
                              },
                            },
                          },
                          '#withHlsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsSettings(value): {
                            output_settings+: {
                              hls_output_settings+: {
                                hls_settings: value,
                              },
                            },
                          },
                          '#withHlsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHlsSettingsMixin(value): {
                            output_settings+: {
                              hls_output_settings+: {
                                hls_settings+: value,
                              },
                            },
                          },
                          hls_settings+:
                            {
                              '#withAudioOnlyHlsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withAudioOnlyHlsSettings(value): {
                                output_settings+: {
                                  hls_output_settings+: {
                                    hls_settings+: {
                                      audio_only_hls_settings: value,
                                    },
                                  },
                                },
                              },
                              '#withAudioOnlyHlsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withAudioOnlyHlsSettingsMixin(value): {
                                output_settings+: {
                                  hls_output_settings+: {
                                    hls_settings+: {
                                      audio_only_hls_settings+: value,
                                    },
                                  },
                                },
                              },
                              audio_only_hls_settings+:
                                {
                                  '#withAudioGroupId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioGroupId(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          audio_only_hls_settings+: {
                                            audio_group_id: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioOnlyImage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withAudioOnlyImage(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          audio_only_hls_settings+: {
                                            audio_only_image: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioOnlyImageMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withAudioOnlyImageMixin(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          audio_only_hls_settings+: {
                                            audio_only_image+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  audio_only_image+:
                                    {
                                      '#withPasswordParam': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withPasswordParam(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              audio_only_hls_settings+: {
                                                audio_only_image+: {
                                                  password_param: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withUri': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withUri(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              audio_only_hls_settings+: {
                                                audio_only_image+: {
                                                  uri: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withUsername': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withUsername(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              audio_only_hls_settings+: {
                                                audio_only_image+: {
                                                  username: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  '#withAudioTrackType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioTrackType(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          audio_only_hls_settings+: {
                                            audio_track_type: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withSegmentType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withSegmentType(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          audio_only_hls_settings+: {
                                            segment_type: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              '#withFmp4HlsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withFmp4HlsSettings(value): {
                                output_settings+: {
                                  hls_output_settings+: {
                                    hls_settings+: {
                                      fmp4_hls_settings: value,
                                    },
                                  },
                                },
                              },
                              '#withFmp4HlsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withFmp4HlsSettingsMixin(value): {
                                output_settings+: {
                                  hls_output_settings+: {
                                    hls_settings+: {
                                      fmp4_hls_settings+: value,
                                    },
                                  },
                                },
                              },
                              fmp4_hls_settings+:
                                {
                                  '#withAudioRenditionSets': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioRenditionSets(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          fmp4_hls_settings+: {
                                            audio_rendition_sets: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withNielsenId3Behavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withNielsenId3Behavior(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          fmp4_hls_settings+: {
                                            nielsen_id3_behavior: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withTimedMetadataBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withTimedMetadataBehavior(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          fmp4_hls_settings+: {
                                            timed_metadata_behavior: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              '#withFrameCaptureHlsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withFrameCaptureHlsSettings(value): {
                                output_settings+: {
                                  hls_output_settings+: {
                                    hls_settings+: {
                                      frame_capture_hls_settings: value,
                                    },
                                  },
                                },
                              },
                              '#withFrameCaptureHlsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withFrameCaptureHlsSettingsMixin(value): {
                                output_settings+: {
                                  hls_output_settings+: {
                                    hls_settings+: {
                                      frame_capture_hls_settings+: value,
                                    },
                                  },
                                },
                              },
                              '#withStandardHlsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withStandardHlsSettings(value): {
                                output_settings+: {
                                  hls_output_settings+: {
                                    hls_settings+: {
                                      standard_hls_settings: value,
                                    },
                                  },
                                },
                              },
                              '#withStandardHlsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withStandardHlsSettingsMixin(value): {
                                output_settings+: {
                                  hls_output_settings+: {
                                    hls_settings+: {
                                      standard_hls_settings+: value,
                                    },
                                  },
                                },
                              },
                              standard_hls_settings+:
                                {
                                  '#withAudioRenditionSets': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioRenditionSets(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          standard_hls_settings+: {
                                            audio_rendition_sets: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withM3u8Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withM3u8Settings(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          standard_hls_settings+: {
                                            m3u8_settings: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withM3u8SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withM3u8SettingsMixin(value): {
                                    output_settings+: {
                                      hls_output_settings+: {
                                        hls_settings+: {
                                          standard_hls_settings+: {
                                            m3u8_settings+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  m3u8_settings+:
                                    {
                                      '#withAudioFramesPerPes': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withAudioFramesPerPes(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  audio_frames_per_pes: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withAudioPids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withAudioPids(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  audio_pids: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withEcmPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withEcmPid(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  ecm_pid: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withNielsenId3Behavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withNielsenId3Behavior(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  nielsen_id3_behavior: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withPatInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withPatInterval(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  pat_interval: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withPcrControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withPcrControl(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  pcr_control: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withPcrPeriod': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withPcrPeriod(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  pcr_period: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withPcrPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withPcrPid(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  pcr_pid: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withPmtInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withPmtInterval(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  pmt_interval: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withPmtPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withPmtPid(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  pmt_pid: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withProgramNum': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withProgramNum(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  program_num: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withScte35Behavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withScte35Behavior(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  scte35_behavior: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withScte35Pid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withScte35Pid(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  scte35_pid: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withTimedMetadataBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withTimedMetadataBehavior(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  timed_metadata_behavior: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withTimedMetadataPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withTimedMetadataPid(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  timed_metadata_pid: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withTransportStreamId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withTransportStreamId(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  transport_stream_id: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withVideoPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withVideoPid(value): {
                                        output_settings+: {
                                          hls_output_settings+: {
                                            hls_settings+: {
                                              standard_hls_settings+: {
                                                m3u8_settings+: {
                                                  video_pid: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                },
                            },
                          '#withNameModifier': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withNameModifier(value): {
                            output_settings+: {
                              hls_output_settings+: {
                                name_modifier: value,
                              },
                            },
                          },
                          '#withSegmentModifier': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withSegmentModifier(value): {
                            output_settings+: {
                              hls_output_settings+: {
                                segment_modifier: value,
                              },
                            },
                          },
                        },
                      '#withMediaPackageOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withMediaPackageOutputSettings(value): {
                        output_settings+: {
                          media_package_output_settings: value,
                        },
                      },
                      '#withMediaPackageOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withMediaPackageOutputSettingsMixin(value): {
                        output_settings+: {
                          media_package_output_settings+: value,
                        },
                      },
                      '#withMsSmoothOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withMsSmoothOutputSettings(value): {
                        output_settings+: {
                          ms_smooth_output_settings: value,
                        },
                      },
                      '#withMsSmoothOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withMsSmoothOutputSettingsMixin(value): {
                        output_settings+: {
                          ms_smooth_output_settings+: value,
                        },
                      },
                      ms_smooth_output_settings+:
                        {
                          '#withH265PackagingType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withH265PackagingType(value): {
                            output_settings+: {
                              ms_smooth_output_settings+: {
                                h265_packaging_type: value,
                              },
                            },
                          },
                          '#withNameModifier': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withNameModifier(value): {
                            output_settings+: {
                              ms_smooth_output_settings+: {
                                name_modifier: value,
                              },
                            },
                          },
                        },
                      '#withMultiplexOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withMultiplexOutputSettings(value): {
                        output_settings+: {
                          multiplex_output_settings: value,
                        },
                      },
                      '#withMultiplexOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withMultiplexOutputSettingsMixin(value): {
                        output_settings+: {
                          multiplex_output_settings+: value,
                        },
                      },
                      multiplex_output_settings+:
                        {
                          '#withDestination': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDestination(value): {
                            output_settings+: {
                              multiplex_output_settings+: {
                                destination: value,
                              },
                            },
                          },
                          '#withDestinationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDestinationMixin(value): {
                            output_settings+: {
                              multiplex_output_settings+: {
                                destination+: value,
                              },
                            },
                          },
                          destination+:
                            {
                              '#withDestinationRefId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withDestinationRefId(value): {
                                output_settings+: {
                                  multiplex_output_settings+: {
                                    destination+: {
                                      destination_ref_id: value,
                                    },
                                  },
                                },
                              },
                            },
                        },
                      '#withRtmpOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withRtmpOutputSettings(value): {
                        output_settings+: {
                          rtmp_output_settings: value,
                        },
                      },
                      '#withRtmpOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withRtmpOutputSettingsMixin(value): {
                        output_settings+: {
                          rtmp_output_settings+: value,
                        },
                      },
                      rtmp_output_settings+:
                        {
                          '#withCertificateMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withCertificateMode(value): {
                            output_settings+: {
                              rtmp_output_settings+: {
                                certificate_mode: value,
                              },
                            },
                          },
                          '#withConnectionRetryInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withConnectionRetryInterval(value): {
                            output_settings+: {
                              rtmp_output_settings+: {
                                connection_retry_interval: value,
                              },
                            },
                          },
                          '#withDestination': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDestination(value): {
                            output_settings+: {
                              rtmp_output_settings+: {
                                destination: value,
                              },
                            },
                          },
                          '#withDestinationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDestinationMixin(value): {
                            output_settings+: {
                              rtmp_output_settings+: {
                                destination+: value,
                              },
                            },
                          },
                          destination+:
                            {
                              '#withDestinationRefId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withDestinationRefId(value): {
                                output_settings+: {
                                  rtmp_output_settings+: {
                                    destination+: {
                                      destination_ref_id: value,
                                    },
                                  },
                                },
                              },
                            },
                          '#withNumRetries': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withNumRetries(value): {
                            output_settings+: {
                              rtmp_output_settings+: {
                                num_retries: value,
                              },
                            },
                          },
                        },
                      '#withUdpOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withUdpOutputSettings(value): {
                        output_settings+: {
                          udp_output_settings: value,
                        },
                      },
                      '#withUdpOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withUdpOutputSettingsMixin(value): {
                        output_settings+: {
                          udp_output_settings+: value,
                        },
                      },
                      udp_output_settings+:
                        {
                          '#withBufferMsec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withBufferMsec(value): {
                            output_settings+: {
                              udp_output_settings+: {
                                buffer_msec: value,
                              },
                            },
                          },
                          '#withContainerSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withContainerSettings(value): {
                            output_settings+: {
                              udp_output_settings+: {
                                container_settings: value,
                              },
                            },
                          },
                          '#withContainerSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withContainerSettingsMixin(value): {
                            output_settings+: {
                              udp_output_settings+: {
                                container_settings+: value,
                              },
                            },
                          },
                          container_settings+:
                            {
                              '#withM2tsSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withM2tsSettings(value): {
                                output_settings+: {
                                  udp_output_settings+: {
                                    container_settings+: {
                                      m2ts_settings: value,
                                    },
                                  },
                                },
                              },
                              '#withM2tsSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                              withM2tsSettingsMixin(value): {
                                output_settings+: {
                                  udp_output_settings+: {
                                    container_settings+: {
                                      m2ts_settings+: value,
                                    },
                                  },
                                },
                              },
                              m2ts_settings+:
                                {
                                  '#withAbsentInputAudioBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAbsentInputAudioBehavior(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            absent_input_audio_behavior: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withArib': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withArib(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            arib: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAribCaptionsPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAribCaptionsPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            arib_captions_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAribCaptionsPidControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAribCaptionsPidControl(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            arib_captions_pid_control: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioBufferModel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioBufferModel(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            audio_buffer_model: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioFramesPerPes': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withAudioFramesPerPes(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            audio_frames_per_pes: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioPids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioPids(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            audio_pids: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withAudioStreamType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withAudioStreamType(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            audio_stream_type: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withBitrate(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            bitrate: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withBufferModel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withBufferModel(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            buffer_model: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withCcDescriptor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withCcDescriptor(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            cc_descriptor: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbNitSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbNitSettings(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_nit_settings: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbNitSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbNitSettingsMixin(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_nit_settings+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  dvb_nit_settings+:
                                    {
                                      '#withNetworkId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withNetworkId(value): {
                                        output_settings+: {
                                          udp_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_nit_settings+: {
                                                  network_id: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withNetworkName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withNetworkName(value): {
                                        output_settings+: {
                                          udp_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_nit_settings+: {
                                                  network_name: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withRepInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withRepInterval(value): {
                                        output_settings+: {
                                          udp_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_nit_settings+: {
                                                  rep_interval: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  '#withDvbSdtSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbSdtSettings(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_sdt_settings: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbSdtSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbSdtSettingsMixin(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_sdt_settings+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  dvb_sdt_settings+:
                                    {
                                      '#withOutputSdt': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withOutputSdt(value): {
                                        output_settings+: {
                                          udp_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_sdt_settings+: {
                                                  output_sdt: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withRepInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withRepInterval(value): {
                                        output_settings+: {
                                          udp_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_sdt_settings+: {
                                                  rep_interval: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withServiceName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withServiceName(value): {
                                        output_settings+: {
                                          udp_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_sdt_settings+: {
                                                  service_name: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      '#withServiceProviderName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                      withServiceProviderName(value): {
                                        output_settings+: {
                                          udp_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_sdt_settings+: {
                                                  service_provider_name: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  '#withDvbSubPids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withDvbSubPids(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_sub_pids: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbTdtSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbTdtSettings(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_tdt_settings: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withDvbTdtSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                                  withDvbTdtSettingsMixin(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_tdt_settings+: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  dvb_tdt_settings+:
                                    {
                                      '#withRepInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                      withRepInterval(value): {
                                        output_settings+: {
                                          udp_output_settings+: {
                                            container_settings+: {
                                              m2ts_settings+: {
                                                dvb_tdt_settings+: {
                                                  rep_interval: value,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  '#withDvbTeletextPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withDvbTeletextPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            dvb_teletext_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEbif': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEbif(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ebif: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEbpAudioInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEbpAudioInterval(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ebp_audio_interval: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEbpLookaheadMs': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withEbpLookaheadMs(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ebp_lookahead_ms: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEbpPlacement': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEbpPlacement(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ebp_placement: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEcmPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEcmPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            ecm_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEsRateInPes': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEsRateInPes(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            es_rate_in_pes: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEtvPlatformPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEtvPlatformPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            etv_platform_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withEtvSignalPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withEtvSignalPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            etv_signal_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withFragmentTime': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withFragmentTime(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            fragment_time: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withKlv': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withKlv(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            klv: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withKlvDataPids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withKlvDataPids(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            klv_data_pids: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withNielsenId3Behavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withNielsenId3Behavior(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            nielsen_id3_behavior: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withNullPacketBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withNullPacketBitrate(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            null_packet_bitrate: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPatInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withPatInterval(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pat_interval: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPcrControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withPcrControl(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pcr_control: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPcrPeriod': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withPcrPeriod(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pcr_period: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPcrPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withPcrPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pcr_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPmtInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withPmtInterval(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pmt_interval: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withPmtPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withPmtPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            pmt_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withProgramNum': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withProgramNum(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            program_num: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withRateMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withRateMode(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            rate_mode: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withScte27Pids': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withScte27Pids(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            scte27_pids: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withScte35Control': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withScte35Control(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            scte35_control: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withScte35Pid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withScte35Pid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            scte35_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withSegmentationMarkers': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withSegmentationMarkers(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            segmentation_markers: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withSegmentationStyle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withSegmentationStyle(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            segmentation_style: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withSegmentationTime': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withSegmentationTime(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            segmentation_time: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withTimedMetadataBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withTimedMetadataBehavior(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            timed_metadata_behavior: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withTimedMetadataPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withTimedMetadataPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            timed_metadata_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withTransportStreamId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                                  withTransportStreamId(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            transport_stream_id: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                  '#withVideoPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                                  withVideoPid(value): {
                                    output_settings+: {
                                      udp_output_settings+: {
                                        container_settings+: {
                                          m2ts_settings+: {
                                            video_pid: value,
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                            },
                          '#withDestination': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDestination(value): {
                            output_settings+: {
                              udp_output_settings+: {
                                destination: value,
                              },
                            },
                          },
                          '#withDestinationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDestinationMixin(value): {
                            output_settings+: {
                              udp_output_settings+: {
                                destination+: value,
                              },
                            },
                          },
                          destination+:
                            {
                              '#withDestinationRefId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withDestinationRefId(value): {
                                output_settings+: {
                                  udp_output_settings+: {
                                    destination+: {
                                      destination_ref_id: value,
                                    },
                                  },
                                },
                              },
                            },
                          '#withFecOutputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withFecOutputSettings(value): {
                            output_settings+: {
                              udp_output_settings+: {
                                fec_output_settings: value,
                              },
                            },
                          },
                          '#withFecOutputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withFecOutputSettingsMixin(value): {
                            output_settings+: {
                              udp_output_settings+: {
                                fec_output_settings+: value,
                              },
                            },
                          },
                          fec_output_settings+:
                            {
                              '#withColumnDepth': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withColumnDepth(value): {
                                output_settings+: {
                                  udp_output_settings+: {
                                    fec_output_settings+: {
                                      column_depth: value,
                                    },
                                  },
                                },
                              },
                              '#withIncludeFec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withIncludeFec(value): {
                                output_settings+: {
                                  udp_output_settings+: {
                                    fec_output_settings+: {
                                      include_fec: value,
                                    },
                                  },
                                },
                              },
                              '#withRowLength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withRowLength(value): {
                                output_settings+: {
                                  udp_output_settings+: {
                                    fec_output_settings+: {
                                      row_length: value,
                                    },
                                  },
                                },
                              },
                            },
                        },
                    },
                  '#withVideoDescriptionName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withVideoDescriptionName(value): {
                    video_description_name: value,
                  },
                },
            },
          '#withTimecodeConfig': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withTimecodeConfig(value): {
            spec+: {
              encoder_settings+: {
                timecode_config: value,
              },
            },
          },
          '#withTimecodeConfigMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withTimecodeConfigMixin(value): {
            spec+: {
              encoder_settings+: {
                timecode_config+: value,
              },
            },
          },
          timecode_config+:
            {
              '#withSource': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withSource(value): {
                spec+: {
                  encoder_settings+: {
                    timecode_config+: {
                      source: value,
                    },
                  },
                },
              },
              '#withSyncThreshold': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withSyncThreshold(value): {
                spec+: {
                  encoder_settings+: {
                    timecode_config+: {
                      sync_threshold: value,
                    },
                  },
                },
              },
            },
          '#withVideoDescriptions': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withVideoDescriptions(value): {
            spec+: {
              encoder_settings+: {
                video_descriptions:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withVideoDescriptionsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withVideoDescriptionsMixin(value): {
            spec+: {
              encoder_settings+: {
                video_descriptions+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          video_descriptions+:
            {
              '#': { help: '', name: 'video_descriptions' },
              '#withCodecSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withCodecSettings(value): {
                codec_settings: value,
              },
              '#withCodecSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withCodecSettingsMixin(value): {
                codec_settings+: value,
              },
              codec_settings+:
                {
                  '#withFrameCaptureSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withFrameCaptureSettings(value): {
                    codec_settings+: {
                      frame_capture_settings: value,
                    },
                  },
                  '#withFrameCaptureSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withFrameCaptureSettingsMixin(value): {
                    codec_settings+: {
                      frame_capture_settings+: value,
                    },
                  },
                  frame_capture_settings+:
                    {
                      '#withCaptureInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withCaptureInterval(value): {
                        codec_settings+: {
                          frame_capture_settings+: {
                            capture_interval: value,
                          },
                        },
                      },
                      '#withCaptureIntervalUnits': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withCaptureIntervalUnits(value): {
                        codec_settings+: {
                          frame_capture_settings+: {
                            capture_interval_units: value,
                          },
                        },
                      },
                    },
                  '#withH264Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withH264Settings(value): {
                    codec_settings+: {
                      h264_settings: value,
                    },
                  },
                  '#withH264SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withH264SettingsMixin(value): {
                    codec_settings+: {
                      h264_settings+: value,
                    },
                  },
                  h264_settings+:
                    {
                      '#withAdaptiveQuantization': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAdaptiveQuantization(value): {
                        codec_settings+: {
                          h264_settings+: {
                            adaptive_quantization: value,
                          },
                        },
                      },
                      '#withAfdSignaling': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAfdSignaling(value): {
                        codec_settings+: {
                          h264_settings+: {
                            afd_signaling: value,
                          },
                        },
                      },
                      '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBitrate(value): {
                        codec_settings+: {
                          h264_settings+: {
                            bitrate: value,
                          },
                        },
                      },
                      '#withBufFillPct': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBufFillPct(value): {
                        codec_settings+: {
                          h264_settings+: {
                            buf_fill_pct: value,
                          },
                        },
                      },
                      '#withBufSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBufSize(value): {
                        codec_settings+: {
                          h264_settings+: {
                            buf_size: value,
                          },
                        },
                      },
                      '#withColorMetadata': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withColorMetadata(value): {
                        codec_settings+: {
                          h264_settings+: {
                            color_metadata: value,
                          },
                        },
                      },
                      '#withEntropyEncoding': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withEntropyEncoding(value): {
                        codec_settings+: {
                          h264_settings+: {
                            entropy_encoding: value,
                          },
                        },
                      },
                      '#withFilterSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFilterSettings(value): {
                        codec_settings+: {
                          h264_settings+: {
                            filter_settings: value,
                          },
                        },
                      },
                      '#withFilterSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFilterSettingsMixin(value): {
                        codec_settings+: {
                          h264_settings+: {
                            filter_settings+: value,
                          },
                        },
                      },
                      filter_settings+:
                        {
                          '#withTemporalFilterSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withTemporalFilterSettings(value): {
                            codec_settings+: {
                              h264_settings+: {
                                filter_settings+: {
                                  temporal_filter_settings: value,
                                },
                              },
                            },
                          },
                          '#withTemporalFilterSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withTemporalFilterSettingsMixin(value): {
                            codec_settings+: {
                              h264_settings+: {
                                filter_settings+: {
                                  temporal_filter_settings+: value,
                                },
                              },
                            },
                          },
                          temporal_filter_settings+:
                            {
                              '#withPostFilterSharpening': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withPostFilterSharpening(value): {
                                codec_settings+: {
                                  h264_settings+: {
                                    filter_settings+: {
                                      temporal_filter_settings+: {
                                        post_filter_sharpening: value,
                                      },
                                    },
                                  },
                                },
                              },
                              '#withStrength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withStrength(value): {
                                codec_settings+: {
                                  h264_settings+: {
                                    filter_settings+: {
                                      temporal_filter_settings+: {
                                        strength: value,
                                      },
                                    },
                                  },
                                },
                              },
                            },
                        },
                      '#withFixedAfd': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFixedAfd(value): {
                        codec_settings+: {
                          h264_settings+: {
                            fixed_afd: value,
                          },
                        },
                      },
                      '#withFlickerAq': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFlickerAq(value): {
                        codec_settings+: {
                          h264_settings+: {
                            flicker_aq: value,
                          },
                        },
                      },
                      '#withForceFieldPictures': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withForceFieldPictures(value): {
                        codec_settings+: {
                          h264_settings+: {
                            force_field_pictures: value,
                          },
                        },
                      },
                      '#withFramerateControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFramerateControl(value): {
                        codec_settings+: {
                          h264_settings+: {
                            framerate_control: value,
                          },
                        },
                      },
                      '#withFramerateDenominator': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFramerateDenominator(value): {
                        codec_settings+: {
                          h264_settings+: {
                            framerate_denominator: value,
                          },
                        },
                      },
                      '#withFramerateNumerator': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFramerateNumerator(value): {
                        codec_settings+: {
                          h264_settings+: {
                            framerate_numerator: value,
                          },
                        },
                      },
                      '#withGopBReference': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withGopBReference(value): {
                        codec_settings+: {
                          h264_settings+: {
                            gop_b_reference: value,
                          },
                        },
                      },
                      '#withGopClosedCadence': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withGopClosedCadence(value): {
                        codec_settings+: {
                          h264_settings+: {
                            gop_closed_cadence: value,
                          },
                        },
                      },
                      '#withGopNumBFrames': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withGopNumBFrames(value): {
                        codec_settings+: {
                          h264_settings+: {
                            gop_num_b_frames: value,
                          },
                        },
                      },
                      '#withGopSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withGopSize(value): {
                        codec_settings+: {
                          h264_settings+: {
                            gop_size: value,
                          },
                        },
                      },
                      '#withGopSizeUnits': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withGopSizeUnits(value): {
                        codec_settings+: {
                          h264_settings+: {
                            gop_size_units: value,
                          },
                        },
                      },
                      '#withLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withLevel(value): {
                        codec_settings+: {
                          h264_settings+: {
                            level: value,
                          },
                        },
                      },
                      '#withLookAheadRateControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withLookAheadRateControl(value): {
                        codec_settings+: {
                          h264_settings+: {
                            look_ahead_rate_control: value,
                          },
                        },
                      },
                      '#withMaxBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withMaxBitrate(value): {
                        codec_settings+: {
                          h264_settings+: {
                            max_bitrate: value,
                          },
                        },
                      },
                      '#withMinIInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withMinIInterval(value): {
                        codec_settings+: {
                          h264_settings+: {
                            min_i_interval: value,
                          },
                        },
                      },
                      '#withNumRefFrames': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withNumRefFrames(value): {
                        codec_settings+: {
                          h264_settings+: {
                            num_ref_frames: value,
                          },
                        },
                      },
                      '#withParControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withParControl(value): {
                        codec_settings+: {
                          h264_settings+: {
                            par_control: value,
                          },
                        },
                      },
                      '#withParDenominator': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withParDenominator(value): {
                        codec_settings+: {
                          h264_settings+: {
                            par_denominator: value,
                          },
                        },
                      },
                      '#withParNumerator': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withParNumerator(value): {
                        codec_settings+: {
                          h264_settings+: {
                            par_numerator: value,
                          },
                        },
                      },
                      '#withProfile': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withProfile(value): {
                        codec_settings+: {
                          h264_settings+: {
                            profile: value,
                          },
                        },
                      },
                      '#withQualityLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withQualityLevel(value): {
                        codec_settings+: {
                          h264_settings+: {
                            quality_level: value,
                          },
                        },
                      },
                      '#withQvbrQualityLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withQvbrQualityLevel(value): {
                        codec_settings+: {
                          h264_settings+: {
                            qvbr_quality_level: value,
                          },
                        },
                      },
                      '#withRateControlMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withRateControlMode(value): {
                        codec_settings+: {
                          h264_settings+: {
                            rate_control_mode: value,
                          },
                        },
                      },
                      '#withScanType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withScanType(value): {
                        codec_settings+: {
                          h264_settings+: {
                            scan_type: value,
                          },
                        },
                      },
                      '#withSceneChangeDetect': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSceneChangeDetect(value): {
                        codec_settings+: {
                          h264_settings+: {
                            scene_change_detect: value,
                          },
                        },
                      },
                      '#withSlices': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSlices(value): {
                        codec_settings+: {
                          h264_settings+: {
                            slices: value,
                          },
                        },
                      },
                      '#withSoftness': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSoftness(value): {
                        codec_settings+: {
                          h264_settings+: {
                            softness: value,
                          },
                        },
                      },
                      '#withSpatialAq': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSpatialAq(value): {
                        codec_settings+: {
                          h264_settings+: {
                            spatial_aq: value,
                          },
                        },
                      },
                      '#withSubgopLength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSubgopLength(value): {
                        codec_settings+: {
                          h264_settings+: {
                            subgop_length: value,
                          },
                        },
                      },
                      '#withSyntax': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSyntax(value): {
                        codec_settings+: {
                          h264_settings+: {
                            syntax: value,
                          },
                        },
                      },
                      '#withTemporalAq': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTemporalAq(value): {
                        codec_settings+: {
                          h264_settings+: {
                            temporal_aq: value,
                          },
                        },
                      },
                      '#withTimecodeInsertion': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTimecodeInsertion(value): {
                        codec_settings+: {
                          h264_settings+: {
                            timecode_insertion: value,
                          },
                        },
                      },
                    },
                  '#withH265Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withH265Settings(value): {
                    codec_settings+: {
                      h265_settings: value,
                    },
                  },
                  '#withH265SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withH265SettingsMixin(value): {
                    codec_settings+: {
                      h265_settings+: value,
                    },
                  },
                  h265_settings+:
                    {
                      '#withAdaptiveQuantization': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAdaptiveQuantization(value): {
                        codec_settings+: {
                          h265_settings+: {
                            adaptive_quantization: value,
                          },
                        },
                      },
                      '#withAfdSignaling': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAfdSignaling(value): {
                        codec_settings+: {
                          h265_settings+: {
                            afd_signaling: value,
                          },
                        },
                      },
                      '#withAlternativeTransferFunction': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withAlternativeTransferFunction(value): {
                        codec_settings+: {
                          h265_settings+: {
                            alternative_transfer_function: value,
                          },
                        },
                      },
                      '#withBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBitrate(value): {
                        codec_settings+: {
                          h265_settings+: {
                            bitrate: value,
                          },
                        },
                      },
                      '#withBufSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBufSize(value): {
                        codec_settings+: {
                          h265_settings+: {
                            buf_size: value,
                          },
                        },
                      },
                      '#withColorMetadata': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withColorMetadata(value): {
                        codec_settings+: {
                          h265_settings+: {
                            color_metadata: value,
                          },
                        },
                      },
                      '#withColorSpaceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withColorSpaceSettings(value): {
                        codec_settings+: {
                          h265_settings+: {
                            color_space_settings: value,
                          },
                        },
                      },
                      '#withColorSpaceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withColorSpaceSettingsMixin(value): {
                        codec_settings+: {
                          h265_settings+: {
                            color_space_settings+: value,
                          },
                        },
                      },
                      color_space_settings+:
                        {
                          '#withColorSpacePassthroughSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withColorSpacePassthroughSettings(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  color_space_passthrough_settings: value,
                                },
                              },
                            },
                          },
                          '#withColorSpacePassthroughSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withColorSpacePassthroughSettingsMixin(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  color_space_passthrough_settings+: value,
                                },
                              },
                            },
                          },
                          '#withDolbyVision81Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDolbyVision81Settings(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  dolby_vision81_settings: value,
                                },
                              },
                            },
                          },
                          '#withDolbyVision81SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDolbyVision81SettingsMixin(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  dolby_vision81_settings+: value,
                                },
                              },
                            },
                          },
                          '#withHdr10Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHdr10Settings(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  hdr10_settings: value,
                                },
                              },
                            },
                          },
                          '#withHdr10SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withHdr10SettingsMixin(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  hdr10_settings+: value,
                                },
                              },
                            },
                          },
                          hdr10_settings+:
                            {
                              '#withMaxCll': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withMaxCll(value): {
                                codec_settings+: {
                                  h265_settings+: {
                                    color_space_settings+: {
                                      hdr10_settings+: {
                                        max_cll: value,
                                      },
                                    },
                                  },
                                },
                              },
                              '#withMaxFall': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withMaxFall(value): {
                                codec_settings+: {
                                  h265_settings+: {
                                    color_space_settings+: {
                                      hdr10_settings+: {
                                        max_fall: value,
                                      },
                                    },
                                  },
                                },
                              },
                            },
                          '#withRec601Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withRec601Settings(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  rec601_settings: value,
                                },
                              },
                            },
                          },
                          '#withRec601SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withRec601SettingsMixin(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  rec601_settings+: value,
                                },
                              },
                            },
                          },
                          '#withRec709Settings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withRec709Settings(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  rec709_settings: value,
                                },
                              },
                            },
                          },
                          '#withRec709SettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withRec709SettingsMixin(value): {
                            codec_settings+: {
                              h265_settings+: {
                                color_space_settings+: {
                                  rec709_settings+: value,
                                },
                              },
                            },
                          },
                        },
                      '#withFilterSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFilterSettings(value): {
                        codec_settings+: {
                          h265_settings+: {
                            filter_settings: value,
                          },
                        },
                      },
                      '#withFilterSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withFilterSettingsMixin(value): {
                        codec_settings+: {
                          h265_settings+: {
                            filter_settings+: value,
                          },
                        },
                      },
                      filter_settings+:
                        {
                          '#withTemporalFilterSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withTemporalFilterSettings(value): {
                            codec_settings+: {
                              h265_settings+: {
                                filter_settings+: {
                                  temporal_filter_settings: value,
                                },
                              },
                            },
                          },
                          '#withTemporalFilterSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withTemporalFilterSettingsMixin(value): {
                            codec_settings+: {
                              h265_settings+: {
                                filter_settings+: {
                                  temporal_filter_settings+: value,
                                },
                              },
                            },
                          },
                          temporal_filter_settings+:
                            {
                              '#withPostFilterSharpening': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withPostFilterSharpening(value): {
                                codec_settings+: {
                                  h265_settings+: {
                                    filter_settings+: {
                                      temporal_filter_settings+: {
                                        post_filter_sharpening: value,
                                      },
                                    },
                                  },
                                },
                              },
                              '#withStrength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withStrength(value): {
                                codec_settings+: {
                                  h265_settings+: {
                                    filter_settings+: {
                                      temporal_filter_settings+: {
                                        strength: value,
                                      },
                                    },
                                  },
                                },
                              },
                            },
                        },
                      '#withFixedAfd': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFixedAfd(value): {
                        codec_settings+: {
                          h265_settings+: {
                            fixed_afd: value,
                          },
                        },
                      },
                      '#withFlickerAq': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withFlickerAq(value): {
                        codec_settings+: {
                          h265_settings+: {
                            flicker_aq: value,
                          },
                        },
                      },
                      '#withFramerateDenominator': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFramerateDenominator(value): {
                        codec_settings+: {
                          h265_settings+: {
                            framerate_denominator: value,
                          },
                        },
                      },
                      '#withFramerateNumerator': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withFramerateNumerator(value): {
                        codec_settings+: {
                          h265_settings+: {
                            framerate_numerator: value,
                          },
                        },
                      },
                      '#withGopClosedCadence': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withGopClosedCadence(value): {
                        codec_settings+: {
                          h265_settings+: {
                            gop_closed_cadence: value,
                          },
                        },
                      },
                      '#withGopSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withGopSize(value): {
                        codec_settings+: {
                          h265_settings+: {
                            gop_size: value,
                          },
                        },
                      },
                      '#withGopSizeUnits': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withGopSizeUnits(value): {
                        codec_settings+: {
                          h265_settings+: {
                            gop_size_units: value,
                          },
                        },
                      },
                      '#withLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withLevel(value): {
                        codec_settings+: {
                          h265_settings+: {
                            level: value,
                          },
                        },
                      },
                      '#withLookAheadRateControl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withLookAheadRateControl(value): {
                        codec_settings+: {
                          h265_settings+: {
                            look_ahead_rate_control: value,
                          },
                        },
                      },
                      '#withMaxBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withMaxBitrate(value): {
                        codec_settings+: {
                          h265_settings+: {
                            max_bitrate: value,
                          },
                        },
                      },
                      '#withMinIInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withMinIInterval(value): {
                        codec_settings+: {
                          h265_settings+: {
                            min_i_interval: value,
                          },
                        },
                      },
                      '#withMinQp': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withMinQp(value): {
                        codec_settings+: {
                          h265_settings+: {
                            min_qp: value,
                          },
                        },
                      },
                      '#withMvOverPictureBoundaries': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withMvOverPictureBoundaries(value): {
                        codec_settings+: {
                          h265_settings+: {
                            mv_over_picture_boundaries: value,
                          },
                        },
                      },
                      '#withMvTemporalPredictor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withMvTemporalPredictor(value): {
                        codec_settings+: {
                          h265_settings+: {
                            mv_temporal_predictor: value,
                          },
                        },
                      },
                      '#withParDenominator': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withParDenominator(value): {
                        codec_settings+: {
                          h265_settings+: {
                            par_denominator: value,
                          },
                        },
                      },
                      '#withParNumerator': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withParNumerator(value): {
                        codec_settings+: {
                          h265_settings+: {
                            par_numerator: value,
                          },
                        },
                      },
                      '#withProfile': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withProfile(value): {
                        codec_settings+: {
                          h265_settings+: {
                            profile: value,
                          },
                        },
                      },
                      '#withQvbrQualityLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withQvbrQualityLevel(value): {
                        codec_settings+: {
                          h265_settings+: {
                            qvbr_quality_level: value,
                          },
                        },
                      },
                      '#withRateControlMode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withRateControlMode(value): {
                        codec_settings+: {
                          h265_settings+: {
                            rate_control_mode: value,
                          },
                        },
                      },
                      '#withScanType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withScanType(value): {
                        codec_settings+: {
                          h265_settings+: {
                            scan_type: value,
                          },
                        },
                      },
                      '#withSceneChangeDetect': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withSceneChangeDetect(value): {
                        codec_settings+: {
                          h265_settings+: {
                            scene_change_detect: value,
                          },
                        },
                      },
                      '#withSlices': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withSlices(value): {
                        codec_settings+: {
                          h265_settings+: {
                            slices: value,
                          },
                        },
                      },
                      '#withTier': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTier(value): {
                        codec_settings+: {
                          h265_settings+: {
                            tier: value,
                          },
                        },
                      },
                      '#withTileHeight': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withTileHeight(value): {
                        codec_settings+: {
                          h265_settings+: {
                            tile_height: value,
                          },
                        },
                      },
                      '#withTilePadding': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTilePadding(value): {
                        codec_settings+: {
                          h265_settings+: {
                            tile_padding: value,
                          },
                        },
                      },
                      '#withTileWidth': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withTileWidth(value): {
                        codec_settings+: {
                          h265_settings+: {
                            tile_width: value,
                          },
                        },
                      },
                      '#withTimecodeBurninSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withTimecodeBurninSettings(value): {
                        codec_settings+: {
                          h265_settings+: {
                            timecode_burnin_settings: value,
                          },
                        },
                      },
                      '#withTimecodeBurninSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withTimecodeBurninSettingsMixin(value): {
                        codec_settings+: {
                          h265_settings+: {
                            timecode_burnin_settings+: value,
                          },
                        },
                      },
                      timecode_burnin_settings+:
                        {
                          '#withPrefix': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withPrefix(value): {
                            codec_settings+: {
                              h265_settings+: {
                                timecode_burnin_settings+: {
                                  prefix: value,
                                },
                              },
                            },
                          },
                          '#withTimecodeBurninFontSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withTimecodeBurninFontSize(value): {
                            codec_settings+: {
                              h265_settings+: {
                                timecode_burnin_settings+: {
                                  timecode_burnin_font_size: value,
                                },
                              },
                            },
                          },
                          '#withTimecodeBurninPosition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withTimecodeBurninPosition(value): {
                            codec_settings+: {
                              h265_settings+: {
                                timecode_burnin_settings+: {
                                  timecode_burnin_position: value,
                                },
                              },
                            },
                          },
                        },
                      '#withTimecodeInsertion': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTimecodeInsertion(value): {
                        codec_settings+: {
                          h265_settings+: {
                            timecode_insertion: value,
                          },
                        },
                      },
                      '#withTreeblockSize': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withTreeblockSize(value): {
                        codec_settings+: {
                          h265_settings+: {
                            treeblock_size: value,
                          },
                        },
                      },
                    },
                },
              '#withHeight': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withHeight(value): {
                height: value,
              },
              '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withName(value): {
                name: value,
              },
              '#withRespondToAfd': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withRespondToAfd(value): {
                respond_to_afd: value,
              },
              '#withScalingBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withScalingBehavior(value): {
                scaling_behavior: value,
              },
              '#withSharpness': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withSharpness(value): {
                sharpness: value,
              },
              '#withWidth': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withWidth(value): {
                width: value,
              },
            },
        },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        spec+: {
          id: value,
        },
      },
      '#withInputAttachments': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputAttachments(value): {
        spec+: {
          input_attachments:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withInputAttachmentsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputAttachmentsMixin(value): {
        spec+: {
          input_attachments+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      input_attachments+:
        {
          '#': { help: '', name: 'input_attachments' },
          '#withAutomaticInputFailoverSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withAutomaticInputFailoverSettings(value): {
            automatic_input_failover_settings: value,
          },
          '#withAutomaticInputFailoverSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withAutomaticInputFailoverSettingsMixin(value): {
            automatic_input_failover_settings+: value,
          },
          automatic_input_failover_settings+:
            {
              '#withErrorClearTimeMsec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withErrorClearTimeMsec(value): {
                automatic_input_failover_settings+: {
                  error_clear_time_msec: value,
                },
              },
              '#withFailoverCondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withFailoverCondition(value): {
                automatic_input_failover_settings+: {
                  failover_condition:
                    (if std.isArray(value)
                     then value
                     else [value]),
                },
              },
              '#withFailoverConditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withFailoverConditionMixin(value): {
                automatic_input_failover_settings+: {
                  failover_condition+:
                    (if std.isArray(value)
                     then value
                     else [value]),
                },
              },
              failover_condition+:
                {
                  '#': { help: '', name: 'failover_condition' },
                  '#withFailoverConditionSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withFailoverConditionSettings(value): {
                    failover_condition_settings: value,
                  },
                  '#withFailoverConditionSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withFailoverConditionSettingsMixin(value): {
                    failover_condition_settings+: value,
                  },
                  failover_condition_settings+:
                    {
                      '#withAudioSilenceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioSilenceSettings(value): {
                        failover_condition_settings+: {
                          audio_silence_settings: value,
                        },
                      },
                      '#withAudioSilenceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioSilenceSettingsMixin(value): {
                        failover_condition_settings+: {
                          audio_silence_settings+: value,
                        },
                      },
                      audio_silence_settings+:
                        {
                          '#withAudioSelectorName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withAudioSelectorName(value): {
                            failover_condition_settings+: {
                              audio_silence_settings+: {
                                audio_selector_name: value,
                              },
                            },
                          },
                          '#withAudioSilenceThresholdMsec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withAudioSilenceThresholdMsec(value): {
                            failover_condition_settings+: {
                              audio_silence_settings+: {
                                audio_silence_threshold_msec: value,
                              },
                            },
                          },
                        },
                      '#withInputLossSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withInputLossSettings(value): {
                        failover_condition_settings+: {
                          input_loss_settings: value,
                        },
                      },
                      '#withInputLossSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withInputLossSettingsMixin(value): {
                        failover_condition_settings+: {
                          input_loss_settings+: value,
                        },
                      },
                      input_loss_settings+:
                        {
                          '#withInputLossThresholdMsec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withInputLossThresholdMsec(value): {
                            failover_condition_settings+: {
                              input_loss_settings+: {
                                input_loss_threshold_msec: value,
                              },
                            },
                          },
                        },
                      '#withVideoBlackSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withVideoBlackSettings(value): {
                        failover_condition_settings+: {
                          video_black_settings: value,
                        },
                      },
                      '#withVideoBlackSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withVideoBlackSettingsMixin(value): {
                        failover_condition_settings+: {
                          video_black_settings+: value,
                        },
                      },
                      video_black_settings+:
                        {
                          '#withBlackDetectThreshold': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withBlackDetectThreshold(value): {
                            failover_condition_settings+: {
                              video_black_settings+: {
                                black_detect_threshold: value,
                              },
                            },
                          },
                          '#withVideoBlackThresholdMsec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withVideoBlackThresholdMsec(value): {
                            failover_condition_settings+: {
                              video_black_settings+: {
                                video_black_threshold_msec: value,
                              },
                            },
                          },
                        },
                    },
                },
              '#withInputPreference': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withInputPreference(value): {
                automatic_input_failover_settings+: {
                  input_preference: value,
                },
              },
              '#withSecondaryInputId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withSecondaryInputId(value): {
                automatic_input_failover_settings+: {
                  secondary_input_id: value,
                },
              },
            },
          '#withInputAttachmentName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withInputAttachmentName(value): {
            input_attachment_name: value,
          },
          '#withInputId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withInputId(value): {
            input_id: value,
          },
          '#withInputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withInputSettings(value): {
            input_settings: value,
          },
          '#withInputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withInputSettingsMixin(value): {
            input_settings+: value,
          },
          input_settings+:
            {
              '#withAudioSelector': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withAudioSelector(value): {
                input_settings+: {
                  audio_selector:
                    (if std.isArray(value)
                     then value
                     else [value]),
                },
              },
              '#withAudioSelectorMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withAudioSelectorMixin(value): {
                input_settings+: {
                  audio_selector+:
                    (if std.isArray(value)
                     then value
                     else [value]),
                },
              },
              audio_selector+:
                {
                  '#': { help: '', name: 'audio_selector' },
                  '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withName(value): {
                    name: value,
                  },
                  '#withSelectorSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withSelectorSettings(value): {
                    selector_settings: value,
                  },
                  '#withSelectorSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withSelectorSettingsMixin(value): {
                    selector_settings+: value,
                  },
                  selector_settings+:
                    {
                      '#withAudioHlsRenditionSelection': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioHlsRenditionSelection(value): {
                        selector_settings+: {
                          audio_hls_rendition_selection: value,
                        },
                      },
                      '#withAudioHlsRenditionSelectionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioHlsRenditionSelectionMixin(value): {
                        selector_settings+: {
                          audio_hls_rendition_selection+: value,
                        },
                      },
                      audio_hls_rendition_selection+:
                        {
                          '#withGroupId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withGroupId(value): {
                            selector_settings+: {
                              audio_hls_rendition_selection+: {
                                group_id: value,
                              },
                            },
                          },
                          '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withName(value): {
                            selector_settings+: {
                              audio_hls_rendition_selection+: {
                                name: value,
                              },
                            },
                          },
                        },
                      '#withAudioLanguageSelection': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioLanguageSelection(value): {
                        selector_settings+: {
                          audio_language_selection: value,
                        },
                      },
                      '#withAudioLanguageSelectionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioLanguageSelectionMixin(value): {
                        selector_settings+: {
                          audio_language_selection+: value,
                        },
                      },
                      audio_language_selection+:
                        {
                          '#withLanguageCode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withLanguageCode(value): {
                            selector_settings+: {
                              audio_language_selection+: {
                                language_code: value,
                              },
                            },
                          },
                          '#withLanguageSelectionPolicy': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withLanguageSelectionPolicy(value): {
                            selector_settings+: {
                              audio_language_selection+: {
                                language_selection_policy: value,
                              },
                            },
                          },
                        },
                      '#withAudioPidSelection': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioPidSelection(value): {
                        selector_settings+: {
                          audio_pid_selection: value,
                        },
                      },
                      '#withAudioPidSelectionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioPidSelectionMixin(value): {
                        selector_settings+: {
                          audio_pid_selection+: value,
                        },
                      },
                      audio_pid_selection+:
                        {
                          '#withPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withPid(value): {
                            selector_settings+: {
                              audio_pid_selection+: {
                                pid: value,
                              },
                            },
                          },
                        },
                      '#withAudioTrackSelection': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioTrackSelection(value): {
                        selector_settings+: {
                          audio_track_selection: value,
                        },
                      },
                      '#withAudioTrackSelectionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAudioTrackSelectionMixin(value): {
                        selector_settings+: {
                          audio_track_selection+: value,
                        },
                      },
                      audio_track_selection+:
                        {
                          '#withDolbyEDecode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDolbyEDecode(value): {
                            selector_settings+: {
                              audio_track_selection+: {
                                dolby_e_decode: value,
                              },
                            },
                          },
                          '#withDolbyEDecodeMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withDolbyEDecodeMixin(value): {
                            selector_settings+: {
                              audio_track_selection+: {
                                dolby_e_decode+: value,
                              },
                            },
                          },
                          dolby_e_decode+:
                            {
                              '#withProgramSelection': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                              withProgramSelection(value): {
                                selector_settings+: {
                                  audio_track_selection+: {
                                    dolby_e_decode+: {
                                      program_selection: value,
                                    },
                                  },
                                },
                              },
                            },
                          '#withTracks': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                          withTracks(value): {
                            selector_settings+: {
                              audio_track_selection+: {
                                tracks:
                                  (if std.isArray(value)
                                   then value
                                   else [value]),
                              },
                            },
                          },
                          '#withTracksMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
                          withTracksMixin(value): {
                            selector_settings+: {
                              audio_track_selection+: {
                                tracks+:
                                  (if std.isArray(value)
                                   then value
                                   else [value]),
                              },
                            },
                          },
                          tracks+:
                            {
                              '#': { help: '', name: 'tracks' },
                              '#withTrack': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withTrack(value): {
                                track: value,
                              },
                            },
                        },
                    },
                },
              '#withCaptionSelector': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withCaptionSelector(value): {
                input_settings+: {
                  caption_selector:
                    (if std.isArray(value)
                     then value
                     else [value]),
                },
              },
              '#withCaptionSelectorMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withCaptionSelectorMixin(value): {
                input_settings+: {
                  caption_selector+:
                    (if std.isArray(value)
                     then value
                     else [value]),
                },
              },
              caption_selector+:
                {
                  '#': { help: '', name: 'caption_selector' },
                  '#withLanguageCode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withLanguageCode(value): {
                    language_code: value,
                  },
                  '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withName(value): {
                    name: value,
                  },
                  '#withSelectorSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withSelectorSettings(value): {
                    selector_settings: value,
                  },
                  '#withSelectorSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withSelectorSettingsMixin(value): {
                    selector_settings+: value,
                  },
                  selector_settings+:
                    {
                      '#withAncillarySourceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAncillarySourceSettings(value): {
                        selector_settings+: {
                          ancillary_source_settings: value,
                        },
                      },
                      '#withAncillarySourceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAncillarySourceSettingsMixin(value): {
                        selector_settings+: {
                          ancillary_source_settings+: value,
                        },
                      },
                      ancillary_source_settings+:
                        {
                          '#withSourceAncillaryChannelNumber': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withSourceAncillaryChannelNumber(value): {
                            selector_settings+: {
                              ancillary_source_settings+: {
                                source_ancillary_channel_number: value,
                              },
                            },
                          },
                        },
                      '#withAribSourceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAribSourceSettings(value): {
                        selector_settings+: {
                          arib_source_settings: value,
                        },
                      },
                      '#withAribSourceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withAribSourceSettingsMixin(value): {
                        selector_settings+: {
                          arib_source_settings+: value,
                        },
                      },
                      '#withDvbSubSourceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDvbSubSourceSettings(value): {
                        selector_settings+: {
                          dvb_sub_source_settings: value,
                        },
                      },
                      '#withDvbSubSourceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withDvbSubSourceSettingsMixin(value): {
                        selector_settings+: {
                          dvb_sub_source_settings+: value,
                        },
                      },
                      dvb_sub_source_settings+:
                        {
                          '#withOcrLanguage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withOcrLanguage(value): {
                            selector_settings+: {
                              dvb_sub_source_settings+: {
                                ocr_language: value,
                              },
                            },
                          },
                          '#withPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withPid(value): {
                            selector_settings+: {
                              dvb_sub_source_settings+: {
                                pid: value,
                              },
                            },
                          },
                        },
                      '#withEmbeddedSourceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withEmbeddedSourceSettings(value): {
                        selector_settings+: {
                          embedded_source_settings: value,
                        },
                      },
                      '#withEmbeddedSourceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withEmbeddedSourceSettingsMixin(value): {
                        selector_settings+: {
                          embedded_source_settings+: value,
                        },
                      },
                      embedded_source_settings+:
                        {
                          '#withConvert608To708': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withConvert608To708(value): {
                            selector_settings+: {
                              embedded_source_settings+: {
                                convert_608_to_708: value,
                              },
                            },
                          },
                          '#withScte20Detection': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withScte20Detection(value): {
                            selector_settings+: {
                              embedded_source_settings+: {
                                scte20_detection: value,
                              },
                            },
                          },
                          '#withSource608ChannelNumber': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withSource608ChannelNumber(value): {
                            selector_settings+: {
                              embedded_source_settings+: {
                                source_608_channel_number: value,
                              },
                            },
                          },
                        },
                      '#withScte20SourceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withScte20SourceSettings(value): {
                        selector_settings+: {
                          scte20_source_settings: value,
                        },
                      },
                      '#withScte20SourceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withScte20SourceSettingsMixin(value): {
                        selector_settings+: {
                          scte20_source_settings+: value,
                        },
                      },
                      scte20_source_settings+:
                        {
                          '#withConvert608To708': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withConvert608To708(value): {
                            selector_settings+: {
                              scte20_source_settings+: {
                                convert_608_to_708: value,
                              },
                            },
                          },
                          '#withSource608ChannelNumber': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withSource608ChannelNumber(value): {
                            selector_settings+: {
                              scte20_source_settings+: {
                                source_608_channel_number: value,
                              },
                            },
                          },
                        },
                      '#withScte27SourceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withScte27SourceSettings(value): {
                        selector_settings+: {
                          scte27_source_settings: value,
                        },
                      },
                      '#withScte27SourceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withScte27SourceSettingsMixin(value): {
                        selector_settings+: {
                          scte27_source_settings+: value,
                        },
                      },
                      scte27_source_settings+:
                        {
                          '#withOcrLanguage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withOcrLanguage(value): {
                            selector_settings+: {
                              scte27_source_settings+: {
                                ocr_language: value,
                              },
                            },
                          },
                          '#withPid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                          withPid(value): {
                            selector_settings+: {
                              scte27_source_settings+: {
                                pid: value,
                              },
                            },
                          },
                        },
                      '#withTeletextSourceSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withTeletextSourceSettings(value): {
                        selector_settings+: {
                          teletext_source_settings: value,
                        },
                      },
                      '#withTeletextSourceSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                      withTeletextSourceSettingsMixin(value): {
                        selector_settings+: {
                          teletext_source_settings+: value,
                        },
                      },
                      teletext_source_settings+:
                        {
                          '#withOutputRectangle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withOutputRectangle(value): {
                            selector_settings+: {
                              teletext_source_settings+: {
                                output_rectangle: value,
                              },
                            },
                          },
                          '#withOutputRectangleMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                          withOutputRectangleMixin(value): {
                            selector_settings+: {
                              teletext_source_settings+: {
                                output_rectangle+: value,
                              },
                            },
                          },
                          output_rectangle+:
                            {
                              '#withHeight': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withHeight(value): {
                                selector_settings+: {
                                  teletext_source_settings+: {
                                    output_rectangle+: {
                                      height: value,
                                    },
                                  },
                                },
                              },
                              '#withLeftOffset': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withLeftOffset(value): {
                                selector_settings+: {
                                  teletext_source_settings+: {
                                    output_rectangle+: {
                                      left_offset: value,
                                    },
                                  },
                                },
                              },
                              '#withTopOffset': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withTopOffset(value): {
                                selector_settings+: {
                                  teletext_source_settings+: {
                                    output_rectangle+: {
                                      top_offset: value,
                                    },
                                  },
                                },
                              },
                              '#withWidth': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                              withWidth(value): {
                                selector_settings+: {
                                  teletext_source_settings+: {
                                    output_rectangle+: {
                                      width: value,
                                    },
                                  },
                                },
                              },
                            },
                          '#withPageNumber': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                          withPageNumber(value): {
                            selector_settings+: {
                              teletext_source_settings+: {
                                page_number: value,
                              },
                            },
                          },
                        },
                    },
                },
              '#withDeblockFilter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withDeblockFilter(value): {
                input_settings+: {
                  deblock_filter: value,
                },
              },
              '#withDenoiseFilter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withDenoiseFilter(value): {
                input_settings+: {
                  denoise_filter: value,
                },
              },
              '#withFilterStrength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withFilterStrength(value): {
                input_settings+: {
                  filter_strength: value,
                },
              },
              '#withInputFilter': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withInputFilter(value): {
                input_settings+: {
                  input_filter: value,
                },
              },
              '#withNetworkInputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withNetworkInputSettings(value): {
                input_settings+: {
                  network_input_settings: value,
                },
              },
              '#withNetworkInputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withNetworkInputSettingsMixin(value): {
                input_settings+: {
                  network_input_settings+: value,
                },
              },
              network_input_settings+:
                {
                  '#withHlsInputSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withHlsInputSettings(value): {
                    input_settings+: {
                      network_input_settings+: {
                        hls_input_settings: value,
                      },
                    },
                  },
                  '#withHlsInputSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
                  withHlsInputSettingsMixin(value): {
                    input_settings+: {
                      network_input_settings+: {
                        hls_input_settings+: value,
                      },
                    },
                  },
                  hls_input_settings+:
                    {
                      '#withBandwidth': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBandwidth(value): {
                        input_settings+: {
                          network_input_settings+: {
                            hls_input_settings+: {
                              bandwidth: value,
                            },
                          },
                        },
                      },
                      '#withBufferSegments': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withBufferSegments(value): {
                        input_settings+: {
                          network_input_settings+: {
                            hls_input_settings+: {
                              buffer_segments: value,
                            },
                          },
                        },
                      },
                      '#withRetries': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withRetries(value): {
                        input_settings+: {
                          network_input_settings+: {
                            hls_input_settings+: {
                              retries: value,
                            },
                          },
                        },
                      },
                      '#withRetryInterval': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                      withRetryInterval(value): {
                        input_settings+: {
                          network_input_settings+: {
                            hls_input_settings+: {
                              retry_interval: value,
                            },
                          },
                        },
                      },
                      '#withScte35Source': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                      withScte35Source(value): {
                        input_settings+: {
                          network_input_settings+: {
                            hls_input_settings+: {
                              scte35_source: value,
                            },
                          },
                        },
                      },
                    },
                  '#withServerValidation': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withServerValidation(value): {
                    input_settings+: {
                      network_input_settings+: {
                        server_validation: value,
                      },
                    },
                  },
                },
              '#withScte35Pid': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withScte35Pid(value): {
                input_settings+: {
                  scte35_pid: value,
                },
              },
              '#withSmpte2038DataPreference': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withSmpte2038DataPreference(value): {
                input_settings+: {
                  smpte2038_data_preference: value,
                },
              },
              '#withSourceEndBehavior': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withSourceEndBehavior(value): {
                input_settings+: {
                  source_end_behavior: value,
                },
              },
              '#withVideoSelector': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withVideoSelector(value): {
                input_settings+: {
                  video_selector: value,
                },
              },
              '#withVideoSelectorMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
              withVideoSelectorMixin(value): {
                input_settings+: {
                  video_selector+: value,
                },
              },
              video_selector+:
                {
                  '#withColorSpace': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withColorSpace(value): {
                    input_settings+: {
                      video_selector+: {
                        color_space: value,
                      },
                    },
                  },
                  '#withColorSpaceUsage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
                  withColorSpaceUsage(value): {
                    input_settings+: {
                      video_selector+: {
                        color_space_usage: value,
                      },
                    },
                  },
                },
            },
        },
      '#withInputSpecification': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withInputSpecification(value): {
        spec+: {
          input_specification: value,
        },
      },
      '#withInputSpecificationMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withInputSpecificationMixin(value): {
        spec+: {
          input_specification+: value,
        },
      },
      input_specification+:
        {
          '#withCodec': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCodec(value): {
            spec+: {
              input_specification+: {
                codec: value,
              },
            },
          },
          '#withInputResolution': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withInputResolution(value): {
            spec+: {
              input_specification+: {
                input_resolution: value,
              },
            },
          },
          '#withMaximumBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withMaximumBitrate(value): {
            spec+: {
              input_specification+: {
                maximum_bitrate: value,
              },
            },
          },
        },
      '#withLifecycle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycle(value): {
        spec+: {
          lifecycle: value,
        },
      },
      '#withLifecycleMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycleMixin(value): {
        spec+: {
          lifecycle+: value,
        },
      },
      lifecycle+:
        {
          '#withCreateBeforeDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withCreateBeforeDestroy(value=true): {
            spec+: {
              lifecycle+: {
                create_before_destroy: value,
              },
            },
          },
          '#withIgnoreChanges': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChanges(value): {
            spec+: {
              lifecycle+: {
                ignore_changes:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withIgnoreChangesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChangesMixin(value): {
            spec+: {
              lifecycle+: {
                ignore_changes+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withPostcondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostcondition(value): {
            spec+: {
              lifecycle+: {
                postcondition: value,
              },
            },
          },
          '#withPostconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostconditionMixin(value): {
            spec+: {
              lifecycle+: {
                postcondition+: value,
              },
            },
          },
          postcondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPrecondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPrecondition(value): {
            spec+: {
              lifecycle+: {
                precondition: value,
              },
            },
          },
          '#withPreconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPreconditionMixin(value): {
            spec+: {
              lifecycle+: {
                precondition+: value,
              },
            },
          },
          precondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPreventDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withPreventDestroy(value=true): {
            spec+: {
              lifecycle+: {
                prevent_destroy: value,
              },
            },
          },
          '#withReplaceTriggeredBy': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredBy(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withReplaceTriggeredByMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredByMixin(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
        },
      '#withLogLevel': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withLogLevel(value): {
        spec+: {
          log_level: value,
        },
      },
      '#withMaintenance': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withMaintenance(value): {
        spec+: {
          maintenance: value,
        },
      },
      '#withMaintenanceMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withMaintenanceMixin(value): {
        spec+: {
          maintenance+: value,
        },
      },
      maintenance+:
        {
          '#withMaintenanceDay': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withMaintenanceDay(value): {
            spec+: {
              maintenance+: {
                maintenance_day: value,
              },
            },
          },
          '#withMaintenanceStartTime': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withMaintenanceStartTime(value): {
            spec+: {
              maintenance+: {
                maintenance_start_time: value,
              },
            },
          },
        },
      '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withName(value): {
        spec+: {
          name: value,
        },
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        spec+: {
          provider: value,
        },
      },
      '#withProvisioner': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisioner(value): {
        spec+: {
          provisioner:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withProvisionerMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisionerMixin(value): {
        spec+: {
          provisioner+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withRoleArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withRoleArn(value): {
        spec+: {
          role_arn: value,
        },
      },
      '#withStartChannel': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withStartChannel(value=true): {
        spec+: {
          start_channel: value,
        },
      },
      '#withTags': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTags(value): {
        spec+: {
          tags: value,
        },
      },
      '#withTagsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsMixin(value): {
        spec+: {
          tags+: value,
        },
      },
      '#withTagsAll': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAll(value): {
        spec+: {
          tags_all: value,
        },
      },
      '#withTagsAllMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAllMixin(value): {
        spec+: {
          tags_all+: value,
        },
      },
      '#withTimeouts': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeouts(value): {
        spec+: {
          timeouts: value,
        },
      },
      '#withTimeoutsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeoutsMixin(value): {
        spec+: {
          timeouts+: value,
        },
      },
      timeouts+:
        {
          '#withCreate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCreate(value): {
            spec+: {
              timeouts+: {
                create: value,
              },
            },
          },
          '#withDelete': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withDelete(value): {
            spec+: {
              timeouts+: {
                delete: value,
              },
            },
          },
          '#withUpdate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUpdate(value): {
            spec+: {
              timeouts+: {
                update: value,
              },
            },
          },
        },
      '#withVpc': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withVpc(value): {
        spec+: {
          vpc: value,
        },
      },
      '#withVpcMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withVpcMixin(value): {
        spec+: {
          vpc+: value,
        },
      },
      vpc+:
        {
          '#withAvailabilityZones': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withAvailabilityZones(value): {
            spec+: {
              vpc+: {
                availability_zones:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withAvailabilityZonesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withAvailabilityZonesMixin(value): {
            spec+: {
              vpc+: {
                availability_zones+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withNetworkInterfaceIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withNetworkInterfaceIds(value): {
            spec+: {
              vpc+: {
                network_interface_ids:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withNetworkInterfaceIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withNetworkInterfaceIdsMixin(value): {
            spec+: {
              vpc+: {
                network_interface_ids+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withPublicAddressAllocationIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withPublicAddressAllocationIds(value): {
            spec+: {
              vpc+: {
                public_address_allocation_ids:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withPublicAddressAllocationIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withPublicAddressAllocationIdsMixin(value): {
            spec+: {
              vpc+: {
                public_address_allocation_ids+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withSecurityGroupIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSecurityGroupIds(value): {
            spec+: {
              vpc+: {
                security_group_ids:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withSecurityGroupIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSecurityGroupIdsMixin(value): {
            spec+: {
              vpc+: {
                security_group_ids+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withSubnetIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSubnetIds(value): {
            spec+: {
              vpc+: {
                subnet_ids:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withSubnetIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSubnetIdsMixin(value): {
            spec+: {
              vpc+: {
                subnet_ids+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
        },
    },
  aws_medialive_input:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'name', type: 'string' }, { default: null, enums: null, name: 'type', type: 'string' }], help: '' } },
      new(tf_resource_key, name, type):
        {
          local this = self,
          resource: {
            aws_medialive_input: {
              [this.tf_resource_key]: this.spec,
            },
          },
          spec:: {},
        }
        + self.withTfResourceKey(tf_resource_key)
        + self.withName(name)
        + self.withType(type),
      withTfResourceKey(tf_resource_key): {
        tf_resource_key:: tf_resource_key,
      },
      '#withArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withArn(value): {
        spec+: {
          arn: value,
        },
      },
      '#withAttachedChannels': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withAttachedChannels(value): {
        spec+: {
          attached_channels:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withAttachedChannelsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withAttachedChannelsMixin(value): {
        spec+: {
          attached_channels+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        spec+: {
          count: value,
        },
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        spec+: {
          depends_on:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        spec+: {
          depends_on+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDestinations': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDestinations(value): {
        spec+: {
          destinations:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDestinationsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDestinationsMixin(value): {
        spec+: {
          destinations+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      destinations+:
        {
          '#': { help: '', name: 'destinations' },
          '#withStreamName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withStreamName(value): {
            stream_name: value,
          },
        },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        spec+: {
          id: value,
        },
      },
      '#withInputClass': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withInputClass(value): {
        spec+: {
          input_class: value,
        },
      },
      '#withInputDevices': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputDevices(value): {
        spec+: {
          input_devices:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withInputDevicesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputDevicesMixin(value): {
        spec+: {
          input_devices+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      input_devices+:
        {
          '#': { help: '', name: 'input_devices' },
          '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withId(value): {
            id: value,
          },
        },
      '#withInputPartnerIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputPartnerIds(value): {
        spec+: {
          input_partner_ids:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withInputPartnerIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputPartnerIdsMixin(value): {
        spec+: {
          input_partner_ids+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withInputSecurityGroups': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputSecurityGroups(value): {
        spec+: {
          input_security_groups:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withInputSecurityGroupsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputSecurityGroupsMixin(value): {
        spec+: {
          input_security_groups+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withInputSourceType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withInputSourceType(value): {
        spec+: {
          input_source_type: value,
        },
      },
      '#withLifecycle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycle(value): {
        spec+: {
          lifecycle: value,
        },
      },
      '#withLifecycleMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycleMixin(value): {
        spec+: {
          lifecycle+: value,
        },
      },
      lifecycle+:
        {
          '#withCreateBeforeDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withCreateBeforeDestroy(value=true): {
            spec+: {
              lifecycle+: {
                create_before_destroy: value,
              },
            },
          },
          '#withIgnoreChanges': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChanges(value): {
            spec+: {
              lifecycle+: {
                ignore_changes:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withIgnoreChangesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChangesMixin(value): {
            spec+: {
              lifecycle+: {
                ignore_changes+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withPostcondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostcondition(value): {
            spec+: {
              lifecycle+: {
                postcondition: value,
              },
            },
          },
          '#withPostconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostconditionMixin(value): {
            spec+: {
              lifecycle+: {
                postcondition+: value,
              },
            },
          },
          postcondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPrecondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPrecondition(value): {
            spec+: {
              lifecycle+: {
                precondition: value,
              },
            },
          },
          '#withPreconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPreconditionMixin(value): {
            spec+: {
              lifecycle+: {
                precondition+: value,
              },
            },
          },
          precondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPreventDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withPreventDestroy(value=true): {
            spec+: {
              lifecycle+: {
                prevent_destroy: value,
              },
            },
          },
          '#withReplaceTriggeredBy': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredBy(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withReplaceTriggeredByMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredByMixin(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
        },
      '#withMediaConnectFlows': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withMediaConnectFlows(value): {
        spec+: {
          media_connect_flows:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withMediaConnectFlowsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withMediaConnectFlowsMixin(value): {
        spec+: {
          media_connect_flows+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      media_connect_flows+:
        {
          '#': { help: '', name: 'media_connect_flows' },
          '#withFlowArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withFlowArn(value): {
            flow_arn: value,
          },
        },
      '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withName(value): {
        spec+: {
          name: value,
        },
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        spec+: {
          provider: value,
        },
      },
      '#withProvisioner': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisioner(value): {
        spec+: {
          provisioner:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withProvisionerMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisionerMixin(value): {
        spec+: {
          provisioner+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withRoleArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withRoleArn(value): {
        spec+: {
          role_arn: value,
        },
      },
      '#withSources': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withSources(value): {
        spec+: {
          sources:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withSourcesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withSourcesMixin(value): {
        spec+: {
          sources+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      sources+:
        {
          '#': { help: '', name: 'sources' },
          '#withPasswordParam': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withPasswordParam(value): {
            password_param: value,
          },
          '#withUrl': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUrl(value): {
            url: value,
          },
          '#withUsername': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUsername(value): {
            username: value,
          },
        },
      '#withTags': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTags(value): {
        spec+: {
          tags: value,
        },
      },
      '#withTagsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsMixin(value): {
        spec+: {
          tags+: value,
        },
      },
      '#withTagsAll': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAll(value): {
        spec+: {
          tags_all: value,
        },
      },
      '#withTagsAllMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAllMixin(value): {
        spec+: {
          tags_all+: value,
        },
      },
      '#withTimeouts': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeouts(value): {
        spec+: {
          timeouts: value,
        },
      },
      '#withTimeoutsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeoutsMixin(value): {
        spec+: {
          timeouts+: value,
        },
      },
      timeouts+:
        {
          '#withCreate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCreate(value): {
            spec+: {
              timeouts+: {
                create: value,
              },
            },
          },
          '#withDelete': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withDelete(value): {
            spec+: {
              timeouts+: {
                delete: value,
              },
            },
          },
          '#withUpdate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUpdate(value): {
            spec+: {
              timeouts+: {
                update: value,
              },
            },
          },
        },
      '#withType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withType(value): {
        spec+: {
          type: value,
        },
      },
      '#withVpc': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withVpc(value): {
        spec+: {
          vpc: value,
        },
      },
      '#withVpcMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withVpcMixin(value): {
        spec+: {
          vpc+: value,
        },
      },
      vpc+:
        {
          '#withSecurityGroupIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSecurityGroupIds(value): {
            spec+: {
              vpc+: {
                security_group_ids:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withSecurityGroupIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSecurityGroupIdsMixin(value): {
            spec+: {
              vpc+: {
                security_group_ids+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withSubnetIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSubnetIds(value): {
            spec+: {
              vpc+: {
                subnet_ids:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withSubnetIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withSubnetIdsMixin(value): {
            spec+: {
              vpc+: {
                subnet_ids+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
        },
    },
  aws_medialive_input_security_group:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'whitelist_rules', type: 'array' }], help: '' } },
      new(tf_resource_key, whitelist_rules):
        {
          local this = self,
          resource: {
            aws_medialive_input_security_group: {
              [this.tf_resource_key]: this.spec,
            },
          },
          spec:: {},
        }
        + self.withTfResourceKey(tf_resource_key)
        + self.withWhitelistRules(whitelist_rules),
      withTfResourceKey(tf_resource_key): {
        tf_resource_key:: tf_resource_key,
      },
      '#withArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withArn(value): {
        spec+: {
          arn: value,
        },
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        spec+: {
          count: value,
        },
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        spec+: {
          depends_on:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        spec+: {
          depends_on+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        spec+: {
          id: value,
        },
      },
      '#withInputs': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputs(value): {
        spec+: {
          inputs:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withInputsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withInputsMixin(value): {
        spec+: {
          inputs+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withLifecycle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycle(value): {
        spec+: {
          lifecycle: value,
        },
      },
      '#withLifecycleMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycleMixin(value): {
        spec+: {
          lifecycle+: value,
        },
      },
      lifecycle+:
        {
          '#withCreateBeforeDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withCreateBeforeDestroy(value=true): {
            spec+: {
              lifecycle+: {
                create_before_destroy: value,
              },
            },
          },
          '#withIgnoreChanges': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChanges(value): {
            spec+: {
              lifecycle+: {
                ignore_changes:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withIgnoreChangesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChangesMixin(value): {
            spec+: {
              lifecycle+: {
                ignore_changes+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withPostcondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostcondition(value): {
            spec+: {
              lifecycle+: {
                postcondition: value,
              },
            },
          },
          '#withPostconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostconditionMixin(value): {
            spec+: {
              lifecycle+: {
                postcondition+: value,
              },
            },
          },
          postcondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPrecondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPrecondition(value): {
            spec+: {
              lifecycle+: {
                precondition: value,
              },
            },
          },
          '#withPreconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPreconditionMixin(value): {
            spec+: {
              lifecycle+: {
                precondition+: value,
              },
            },
          },
          precondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPreventDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withPreventDestroy(value=true): {
            spec+: {
              lifecycle+: {
                prevent_destroy: value,
              },
            },
          },
          '#withReplaceTriggeredBy': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredBy(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withReplaceTriggeredByMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredByMixin(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
        },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        spec+: {
          provider: value,
        },
      },
      '#withProvisioner': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisioner(value): {
        spec+: {
          provisioner:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withProvisionerMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisionerMixin(value): {
        spec+: {
          provisioner+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withTags': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTags(value): {
        spec+: {
          tags: value,
        },
      },
      '#withTagsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsMixin(value): {
        spec+: {
          tags+: value,
        },
      },
      '#withTagsAll': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAll(value): {
        spec+: {
          tags_all: value,
        },
      },
      '#withTagsAllMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAllMixin(value): {
        spec+: {
          tags_all+: value,
        },
      },
      '#withTimeouts': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeouts(value): {
        spec+: {
          timeouts: value,
        },
      },
      '#withTimeoutsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeoutsMixin(value): {
        spec+: {
          timeouts+: value,
        },
      },
      timeouts+:
        {
          '#withCreate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCreate(value): {
            spec+: {
              timeouts+: {
                create: value,
              },
            },
          },
          '#withDelete': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withDelete(value): {
            spec+: {
              timeouts+: {
                delete: value,
              },
            },
          },
          '#withUpdate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUpdate(value): {
            spec+: {
              timeouts+: {
                update: value,
              },
            },
          },
        },
      '#withWhitelistRules': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withWhitelistRules(value): {
        spec+: {
          whitelist_rules:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withWhitelistRulesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withWhitelistRulesMixin(value): {
        spec+: {
          whitelist_rules+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      whitelist_rules+:
        {
          '#': { help: '', name: 'whitelist_rules' },
          '#withCidr': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCidr(value): {
            cidr: value,
          },
        },
    },
  aws_medialive_multiplex:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'availability_zones', type: 'array' }, { default: null, enums: null, name: 'name', type: 'string' }], help: '' } },
      new(tf_resource_key, availability_zones, name):
        {
          local this = self,
          resource: {
            aws_medialive_multiplex: {
              [this.tf_resource_key]: this.spec,
            },
          },
          spec:: {},
        }
        + self.withTfResourceKey(tf_resource_key)
        + self.withAvailabilityZones(availability_zones)
        + self.withName(name),
      withTfResourceKey(tf_resource_key): {
        tf_resource_key:: tf_resource_key,
      },
      '#withArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withArn(value): {
        spec+: {
          arn: value,
        },
      },
      '#withAvailabilityZones': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withAvailabilityZones(value): {
        spec+: {
          availability_zones:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withAvailabilityZonesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withAvailabilityZonesMixin(value): {
        spec+: {
          availability_zones+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        spec+: {
          count: value,
        },
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        spec+: {
          depends_on:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        spec+: {
          depends_on+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        spec+: {
          id: value,
        },
      },
      '#withLifecycle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycle(value): {
        spec+: {
          lifecycle: value,
        },
      },
      '#withLifecycleMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycleMixin(value): {
        spec+: {
          lifecycle+: value,
        },
      },
      lifecycle+:
        {
          '#withCreateBeforeDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withCreateBeforeDestroy(value=true): {
            spec+: {
              lifecycle+: {
                create_before_destroy: value,
              },
            },
          },
          '#withIgnoreChanges': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChanges(value): {
            spec+: {
              lifecycle+: {
                ignore_changes:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withIgnoreChangesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChangesMixin(value): {
            spec+: {
              lifecycle+: {
                ignore_changes+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withPostcondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostcondition(value): {
            spec+: {
              lifecycle+: {
                postcondition: value,
              },
            },
          },
          '#withPostconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostconditionMixin(value): {
            spec+: {
              lifecycle+: {
                postcondition+: value,
              },
            },
          },
          postcondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPrecondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPrecondition(value): {
            spec+: {
              lifecycle+: {
                precondition: value,
              },
            },
          },
          '#withPreconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPreconditionMixin(value): {
            spec+: {
              lifecycle+: {
                precondition+: value,
              },
            },
          },
          precondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPreventDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withPreventDestroy(value=true): {
            spec+: {
              lifecycle+: {
                prevent_destroy: value,
              },
            },
          },
          '#withReplaceTriggeredBy': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredBy(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withReplaceTriggeredByMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredByMixin(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
        },
      '#withMultiplexSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withMultiplexSettings(value): {
        spec+: {
          multiplex_settings: value,
        },
      },
      '#withMultiplexSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withMultiplexSettingsMixin(value): {
        spec+: {
          multiplex_settings+: value,
        },
      },
      multiplex_settings+:
        {
          '#withMaximumVideoBufferDelayMilliseconds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
          withMaximumVideoBufferDelayMilliseconds(value): {
            spec+: {
              multiplex_settings+: {
                maximum_video_buffer_delay_milliseconds: value,
              },
            },
          },
          '#withTransportStreamBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
          withTransportStreamBitrate(value): {
            spec+: {
              multiplex_settings+: {
                transport_stream_bitrate: value,
              },
            },
          },
          '#withTransportStreamId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
          withTransportStreamId(value): {
            spec+: {
              multiplex_settings+: {
                transport_stream_id: value,
              },
            },
          },
          '#withTransportStreamReservedBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
          withTransportStreamReservedBitrate(value): {
            spec+: {
              multiplex_settings+: {
                transport_stream_reserved_bitrate: value,
              },
            },
          },
        },
      '#withName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withName(value): {
        spec+: {
          name: value,
        },
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        spec+: {
          provider: value,
        },
      },
      '#withProvisioner': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisioner(value): {
        spec+: {
          provisioner:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withProvisionerMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisionerMixin(value): {
        spec+: {
          provisioner+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withStartMultiplex': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withStartMultiplex(value=true): {
        spec+: {
          start_multiplex: value,
        },
      },
      '#withTags': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTags(value): {
        spec+: {
          tags: value,
        },
      },
      '#withTagsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsMixin(value): {
        spec+: {
          tags+: value,
        },
      },
      '#withTagsAll': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAll(value): {
        spec+: {
          tags_all: value,
        },
      },
      '#withTagsAllMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTagsAllMixin(value): {
        spec+: {
          tags_all+: value,
        },
      },
      '#withTimeouts': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeouts(value): {
        spec+: {
          timeouts: value,
        },
      },
      '#withTimeoutsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeoutsMixin(value): {
        spec+: {
          timeouts+: value,
        },
      },
      timeouts+:
        {
          '#withCreate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withCreate(value): {
            spec+: {
              timeouts+: {
                create: value,
              },
            },
          },
          '#withDelete': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withDelete(value): {
            spec+: {
              timeouts+: {
                delete: value,
              },
            },
          },
          '#withUpdate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUpdate(value): {
            spec+: {
              timeouts+: {
                update: value,
              },
            },
          },
        },
    },
  aws_medialive_multiplex_program:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'multiplex_id', type: 'string' }, { default: null, enums: null, name: 'program_name', type: 'string' }], help: '' } },
      new(tf_resource_key, multiplex_id, program_name):
        {
          local this = self,
          resource: {
            aws_medialive_multiplex_program: {
              [this.tf_resource_key]: this.spec,
            },
          },
          spec:: {},
        }
        + self.withTfResourceKey(tf_resource_key)
        + self.withMultiplexId(multiplex_id)
        + self.withProgramName(program_name),
      withTfResourceKey(tf_resource_key): {
        tf_resource_key:: tf_resource_key,
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        spec+: {
          count: value,
        },
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        spec+: {
          depends_on:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        spec+: {
          depends_on+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        spec+: {
          id: value,
        },
      },
      '#withLifecycle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycle(value): {
        spec+: {
          lifecycle: value,
        },
      },
      '#withLifecycleMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withLifecycleMixin(value): {
        spec+: {
          lifecycle+: value,
        },
      },
      lifecycle+:
        {
          '#withCreateBeforeDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withCreateBeforeDestroy(value=true): {
            spec+: {
              lifecycle+: {
                create_before_destroy: value,
              },
            },
          },
          '#withIgnoreChanges': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChanges(value): {
            spec+: {
              lifecycle+: {
                ignore_changes:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withIgnoreChangesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withIgnoreChangesMixin(value): {
            spec+: {
              lifecycle+: {
                ignore_changes+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withPostcondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostcondition(value): {
            spec+: {
              lifecycle+: {
                postcondition: value,
              },
            },
          },
          '#withPostconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPostconditionMixin(value): {
            spec+: {
              lifecycle+: {
                postcondition+: value,
              },
            },
          },
          postcondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    postcondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPrecondition': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPrecondition(value): {
            spec+: {
              lifecycle+: {
                precondition: value,
              },
            },
          },
          '#withPreconditionMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
          withPreconditionMixin(value): {
            spec+: {
              lifecycle+: {
                precondition+: value,
              },
            },
          },
          precondition+:
            {
              '#withCondition': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
              withCondition(value=true): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      condition: value,
                    },
                  },
                },
              },
              '#withErrorMessage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withErrorMessage(value): {
                spec+: {
                  lifecycle+: {
                    precondition+: {
                      error_message: value,
                    },
                  },
                },
              },
            },
          '#withPreventDestroy': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
          withPreventDestroy(value=true): {
            spec+: {
              lifecycle+: {
                prevent_destroy: value,
              },
            },
          },
          '#withReplaceTriggeredBy': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredBy(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
          '#withReplaceTriggeredByMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withReplaceTriggeredByMixin(value): {
            spec+: {
              lifecycle+: {
                replace_triggered_by+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
            },
          },
        },
      '#withMultiplexId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withMultiplexId(value): {
        spec+: {
          multiplex_id: value,
        },
      },
      '#withMultiplexProgramSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withMultiplexProgramSettings(value): {
        spec+: {
          multiplex_program_settings:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withMultiplexProgramSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withMultiplexProgramSettingsMixin(value): {
        spec+: {
          multiplex_program_settings+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      multiplex_program_settings+:
        {
          '#': { help: '', name: 'multiplex_program_settings' },
          '#withPreferredChannelPipeline': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withPreferredChannelPipeline(value): {
            preferred_channel_pipeline: value,
          },
          '#withProgramNumber': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
          withProgramNumber(value): {
            program_number: value,
          },
          '#withServiceDescriptor': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withServiceDescriptor(value): {
            service_descriptor:
              (if std.isArray(value)
               then value
               else [value]),
          },
          '#withServiceDescriptorMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withServiceDescriptorMixin(value): {
            service_descriptor+:
              (if std.isArray(value)
               then value
               else [value]),
          },
          service_descriptor+:
            {
              '#': { help: '', name: 'service_descriptor' },
              '#withProviderName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withProviderName(value): {
                provider_name: value,
              },
              '#withServiceName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
              withServiceName(value): {
                service_name: value,
              },
            },
          '#withVideoSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withVideoSettings(value): {
            video_settings:
              (if std.isArray(value)
               then value
               else [value]),
          },
          '#withVideoSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withVideoSettingsMixin(value): {
            video_settings+:
              (if std.isArray(value)
               then value
               else [value]),
          },
          video_settings+:
            {
              '#': { help: '', name: 'video_settings' },
              '#withConstantBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
              withConstantBitrate(value): {
                constant_bitrate: value,
              },
              '#withStatmuxSettings': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withStatmuxSettings(value): {
                statmux_settings:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
              '#withStatmuxSettingsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
              withStatmuxSettingsMixin(value): {
                statmux_settings+:
                  (if std.isArray(value)
                   then value
                   else [value]),
              },
              statmux_settings+:
                {
                  '#': { help: '', name: 'statmux_settings' },
                  '#withMaximumBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withMaximumBitrate(value): {
                    maximum_bitrate: value,
                  },
                  '#withMinimumBitrate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withMinimumBitrate(value): {
                    minimum_bitrate: value,
                  },
                  '#withPriority': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
                  withPriority(value): {
                    priority: value,
                  },
                },
            },
        },
      '#withProgramName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProgramName(value): {
        spec+: {
          program_name: value,
        },
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        spec+: {
          provider: value,
        },
      },
      '#withProvisioner': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisioner(value): {
        spec+: {
          provisioner:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withProvisionerMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withProvisionerMixin(value): {
        spec+: {
          provisioner+:
            (if std.isArray(value)
             then value
             else [value]),
        },
      },
      '#withTimeouts': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeouts(value): {
        spec+: {
          timeouts: value,
        },
      },
      '#withTimeoutsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['object'] }], help: '' } },
      withTimeoutsMixin(value): {
        spec+: {
          timeouts+: value,
        },
      },
      timeouts+:
        {
          '#withCreate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: 'A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).' } },
          withCreate(value): {
            spec+: {
              timeouts+: {
                create: value,
              },
            },
          },
        },
    },
}
