// DO NOT EDIT: this file is generated by soysonnet
{
  '#': {
    help: '',
    name: 'cloudhsm',
  },
  aws_cloudhsm_v2_cluster:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'cluster_id', type: 'string' }], help: '' } },
      new(tf_resource_key, cluster_id):
        self.withTfResourceKey(tf_resource_key)
        + self.withClusterId(cluster_id),
      withTfResourceKey(tf_resource_key):
        {
          local this = self,
          _manifest():: {
            data+: {
              aws_cloudhsm_v2_cluster+: {
                [tf_resource_key]: this,
              },
            },
          },
        },
      '#withClusterCertificates': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withClusterCertificates(value): {
        cluster_certificates:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withClusterCertificatesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withClusterCertificatesMixin(value): {
        cluster_certificates+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      cluster_certificates+:
        {
          '#': { help: '', name: 'cluster_certificates' },
          '#withAwsHardwareCertificate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withAwsHardwareCertificate(value): {
            aws_hardware_certificate: value,
          },
          '#withClusterCertificate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withClusterCertificate(value): {
            cluster_certificate: value,
          },
          '#withClusterCsr': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withClusterCsr(value): {
            cluster_csr: value,
          },
          '#withHsmCertificate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withHsmCertificate(value): {
            hsm_certificate: value,
          },
          '#withManufacturerHardwareCertificate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withManufacturerHardwareCertificate(value): {
            manufacturer_hardware_certificate: value,
          },
        },
      '#withClusterId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withClusterId(value): {
        cluster_id: value,
      },
      '#withClusterState': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withClusterState(value): {
        cluster_state: value,
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        count: value,
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        depends_on:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        depends_on+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        id: value,
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        provider: value,
      },
      '#withSecurityGroupId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withSecurityGroupId(value): {
        security_group_id: value,
      },
      '#withSubnetIds': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withSubnetIds(value): {
        subnet_ids:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withSubnetIdsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withSubnetIdsMixin(value): {
        subnet_ids+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withVpcId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withVpcId(value): {
        vpc_id: value,
      },
    },
}
