// DO NOT EDIT: this file is generated by soysonnet
{
  '#': {
    help: '',
    name: 'securityhub',
  },
  aws_securityhub_standards_control_associations:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'security_control_id', type: 'string' }], help: '' } },
      new(tf_resource_key, security_control_id):
        self.withTfResourceKey(tf_resource_key)
        + self.withSecurityControlId(security_control_id),
      withTfResourceKey(tf_resource_key):
        {
          local this = self,
          _manifest():: {
            data+: {
              aws_securityhub_standards_control_associations+: {
                [tf_resource_key]: this,
              },
            },
          },
        },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        count: value,
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        depends_on:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        depends_on+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withId(value): {
        id: value,
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        provider: value,
      },
      '#withSecurityControlId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withSecurityControlId(value): {
        security_control_id: value,
      },
      '#withStandardsControlAssociations': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withStandardsControlAssociations(value): {
        standards_control_associations:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withStandardsControlAssociationsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withStandardsControlAssociationsMixin(value): {
        standards_control_associations+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      standards_control_associations+:
        {
          '#': { help: '', name: 'standards_control_associations' },
          '#withAssociationStatus': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withAssociationStatus(value): {
            association_status: value,
          },
          '#withRelatedRequirements': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withRelatedRequirements(value): {
            related_requirements:
              (if std.isArray(value)
               then value
               else [value]),
          },
          '#withRelatedRequirementsMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
          withRelatedRequirementsMixin(value): {
            related_requirements+:
              (if std.isArray(value)
               then value
               else [value]),
          },
          '#withSecurityControlArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withSecurityControlArn(value): {
            security_control_arn: value,
          },
          '#withSecurityControlId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withSecurityControlId(value): {
            security_control_id: value,
          },
          '#withStandardsArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withStandardsArn(value): {
            standards_arn: value,
          },
          '#withStandardsControlDescription': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withStandardsControlDescription(value): {
            standards_control_description: value,
          },
          '#withStandardsControlTitle': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withStandardsControlTitle(value): {
            standards_control_title: value,
          },
          '#withUpdatedAt': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUpdatedAt(value): {
            updated_at: value,
          },
          '#withUpdatedReason': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
          withUpdatedReason(value): {
            updated_reason: value,
          },
        },
    },
}
