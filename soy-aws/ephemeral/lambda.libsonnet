// DO NOT EDIT: this file is generated by soysonnet
{
  '#': {
    help: '',
    name: 'lambda',
  },
  aws_lambda_invocation:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'function_name', type: 'string' }, { default: null, enums: null, name: 'payload', type: 'string' }], help: '' } },
      new(tf_resource_key, function_name, payload):
        self.withTfResourceKey(tf_resource_key)
        + self.withFunctionName(function_name)
        + self.withPayload(payload),
      withTfResourceKey(tf_resource_key):
        {
          local this = self,
          _manifest():: {
            ephemeral: {
              aws_lambda_invocation: {
                [tf_resource_key]: this,
              },
            },
          },
        },
      '#withClientContext': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withClientContext(value): {
        client_context: value,
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        count: value,
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        depends_on:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        depends_on+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withExecutedVersion': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withExecutedVersion(value): {
        executed_version: value,
      },
      '#withFunctionError': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withFunctionError(value): {
        function_error: value,
      },
      '#withFunctionName': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withFunctionName(value): {
        function_name: value,
      },
      '#withLogResult': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withLogResult(value): {
        log_result: value,
      },
      '#withLogType': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withLogType(value): {
        log_type: value,
      },
      '#withPayload': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withPayload(value): {
        payload: value,
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        provider: value,
      },
      '#withQualifier': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withQualifier(value): {
        qualifier: value,
      },
      '#withResult': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withResult(value): {
        result: value,
      },
      '#withStatusCode': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withStatusCode(value): {
        status_code: value,
      },
    },
}
