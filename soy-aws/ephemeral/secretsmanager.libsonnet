// DO NOT EDIT: this file is generated by soysonnet
{
  '#': {
    help: '',
    name: 'secretsmanager',
  },
  aws_secretsmanager_random_password:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }], help: '' } },
      new(tf_resource_key):
        self.withTfResourceKey(tf_resource_key),
      withTfResourceKey(tf_resource_key):
        {
          local this = self,
          _manifest():: {
            ephemeral+: {
              aws_secretsmanager_random_password+: {
                [tf_resource_key]: this,
              },
            },
          },
        },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        count: value,
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        depends_on:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        depends_on+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withExcludeCharacters': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withExcludeCharacters(value=true): {
        exclude_characters: value,
      },
      '#withExcludeLowercase': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withExcludeLowercase(value=true): {
        exclude_lowercase: value,
      },
      '#withExcludeNumbers': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withExcludeNumbers(value=true): {
        exclude_numbers: value,
      },
      '#withExcludePunctuation': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withExcludePunctuation(value=true): {
        exclude_punctuation: value,
      },
      '#withExcludeUppercase': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withExcludeUppercase(value=true): {
        exclude_uppercase: value,
      },
      '#withIncludeSpace': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withIncludeSpace(value=true): {
        include_space: value,
      },
      '#withPasswordLength': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withPasswordLength(value): {
        password_length: value,
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        provider: value,
      },
      '#withRandomPassword': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withRandomPassword(value): {
        random_password: value,
      },
      '#withRequireEachIncludedType': { 'function': { args: [{ default: true, enums: null, name: 'value', type: ['boolean'] }], help: '' } },
      withRequireEachIncludedType(value=true): {
        require_each_included_type: value,
      },
    },
  aws_secretsmanager_secret_version:
    {
      '#new': { 'function': { args: [{ default: null, enums: null, name: 'tf_resource_key', type: 'string' }, { default: null, enums: null, name: 'secret_id', type: 'string' }], help: '' } },
      new(tf_resource_key, secret_id):
        self.withTfResourceKey(tf_resource_key)
        + self.withSecretId(secret_id),
      withTfResourceKey(tf_resource_key):
        {
          local this = self,
          _manifest():: {
            ephemeral+: {
              aws_secretsmanager_secret_version+: {
                [tf_resource_key]: this,
              },
            },
          },
        },
      '#withArn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withArn(value): {
        arn: value,
      },
      '#withCount': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['number'] }], help: '' } },
      withCount(value): {
        count: value,
      },
      '#withCreatedDate': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withCreatedDate(value): {
        created_date: value,
      },
      '#withDependsOn': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOn(value): {
        depends_on:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withDependsOnMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withDependsOnMixin(value): {
        depends_on+:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withProvider': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withProvider(value): {
        provider: value,
      },
      '#withSecretBinary': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withSecretBinary(value): {
        secret_binary: value,
      },
      '#withSecretId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withSecretId(value): {
        secret_id: value,
      },
      '#withSecretString': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withSecretString(value): {
        secret_string: value,
      },
      '#withVersionId': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withVersionId(value): {
        version_id: value,
      },
      '#withVersionStage': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['string'] }], help: '' } },
      withVersionStage(value): {
        version_stage: value,
      },
      '#withVersionStages': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withVersionStages(value): {
        version_stages:
          (if std.isArray(value)
           then value
           else [value]),
      },
      '#withVersionStagesMixin': { 'function': { args: [{ default: null, enums: null, name: 'value', type: ['array'] }], help: '' } },
      withVersionStagesMixin(value): {
        version_stages+:
          (if std.isArray(value)
           then value
           else [value]),
      },
    },
}
